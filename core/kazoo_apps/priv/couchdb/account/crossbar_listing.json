{
    "_id": "_design/crossbar_listing",
    "kazoo": {
        "view_map": [
            {
                "classification": "account"
            }
        ]
    },
    "language": "javascript",
    "views": {
        "list_by_type_id": {
            "map": [
                "function(doc) {",
                "  if doc.pvt_deleted return;",
                "  var doc_type = doc.pvt_type;",
                "  switch (doc_type) {",
                "    case 'account':",
                "      emit(['account', doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'realm': doc.realm,",
                "        'account_db': doc.pvt_account_db,",
                "      });",
                "      /* emitting metaflows */",
                "      if (doc.metaflows) {",
                "        emit(['metaflows', doc._id], doc.metaflows);",
                "      }",
                "      break;",
                "    case 'app':",
                "      emit([doc_type, doc.name], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'phase': doc.phase,",
                "        'i18n': doc['i18n'],",
                "        'tags': doc.tags,",
                "        'api_url': doc.api_url,",
                "        'source_url': doc.source_url,",
                "        'published': doc.published",
                "      });",
                "      break;",
                "    case 'blacklist':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'callflow':",
                "      var featurecode = (!doc.featurecode) ? false : doc.featurecode;",
                "      var modules = [];",
                "      if (doc.flow) {",
                "        var walkTree = (function recursiveWalkTree(flow) {",
                "          if (flow.module && (flow.data && flow.data.skip_module !== true)) modules.push(flow.module);",
                "          if (flow.children) {",
                "            var children = flow.children;",
                "            for (var key in children) {",
                "              if (!children.hasOwnProperty(key)) continue;",
                "              recursiveWalkTree(children[key]);",
                "            }",
                "          }",
                "        })(doc.flow);",
                "      }",
                "      var onlyUnique = function(value, index, self) {",
                "        return self.indexOf(value) === index;",
                "      };",
                "      modules = modules.filter(onlyUnique);",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'type': doc.type,",
                "        'numbers': doc.numbers,",
                "        'patterns': doc.patterns,",
                "        'featurecode': featurecode,",
                "        'owner_id': doc.owner_id,",
                "        'group_id': doc.group_id,",
                "        'modules': modules,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'click2call':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'extension': doc.extension,",
                "        'realm': doc.relam",
                "      });",
                "      break;",
                "    case 'conference':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'owner_id': doc.owner_id,",
                "        'member': doc.member,",
                "        'moderator': doc.moderator,",
                "        'ui_flags': doc.ui_flags,",
                "        'conference_numbers': doc.conference_numbers,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'device':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'username': (doc.sip) ? doc.sip.username : undefined,",
                "        'mac_address': doc.mac_address || '',",
                "        'owner_id': doc.owner_id,",
                "        'enabled': doc.enabled,",
                "        'device_type': doc.device_type || 'sip_device',",
                "        'mobile': doc.mobile,",
                "        'call_recording': doc.call_recording,",
                "        'flags': doc.flags || []",
                "      });",
                "      /* emitting hotdesks */",
                "      if (doc.hotdesk || doc.hotdesk.users) {",
                "        for (user_id in doc.hotdesk.users) {",
                "          emit(['hotdesk', user_id], {",
                "            'device_id': doc._id,",
                "            'device_name': doc.name",
                "          });",
                "        }",
                "      }",
                "      /* emitting metaflows */",
                "      if (doc.metaflows) {",
                "        emit(['metaflows', doc._id], doc.metaflows);",
                "      }",
                "      break;",
                "    case 'directory':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'faxbox':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'created': doc.pvt_created,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'group':",
                "      var features = [];",
                "      if (doc.smartpbx) {",
                "        for (var feature in doc.smartpbx) {",
                "          if (doc.smartpbx[feature].enabled) {",
                "            features.push(feature);",
                "          }",
                "        }",
                "      }",
                "      if (doc.music_on_hold && doc.music_on_hold.media_id) {",
                "        features.push('music_on_hold');",
                "      }",
                "      var endpoints = 0;",
                "      var o = doc.endpoints || {};",
                "      for (var p in o) {",
                "        if (o.hasOwnProperty(p)) endpoints++;",
                "      }",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'features': features,",
                "        'endpoints': endpoints,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'list':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'description': doc.description,",
                "        'list_type': doc.list_type",
                "      });",
                "      break;",
                "    case 'menu':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'flags': doc.flags || []",
                "      });",
                "      break;",
                "    case 'notification':",
                "      var id = doc._id.replace('notification.', '');",
                "      emit([doc_type, id], {",
                "        'id': id,",
                "        'category': doc.category,",
                "        'friendly_name': doc.friendly_name,",
                "        'macros': doc.macros,",
                "        'enabled': doc.enabled",
                "      });",
                "      break;",
                "    case 'resource':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'enabled': doc.enabled,",
                "        'weight_cost': doc.weight_cost,",
                "        'template_name': doc.template_name,",
                "        'classifiers': doc.classifiers",
                "      });",
                "      break;",
                "    case 'resource_template':",
                "      emit([doc_type, doc._id], {",
                "        'id': doc._id,",
                "        'name': doc.name,",
                "        'template_name': doc.template_name,",
                "        'classifiers': doc.classifiers",
                "      });",
                "      break;",
                "    default:",
                "      emit([doc_type, doc._id], null);",
                "  }",
                "  /* move to me to user case */",
                "  if (doc.metaflows) {",
                "    emit(['metaflows', doc._id], doc.metaflows);",
                "  }",
                "}"
            ]
        }
    }
}
