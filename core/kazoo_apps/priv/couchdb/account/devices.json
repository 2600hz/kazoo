{
    "_id": "_design/devices",
    "kazoo": {
        "view_map": [
            {
                "classification": "account"
            }
        ]
    },
    "language": "javascript",
    "views": {
        "crossbar_listing": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'device' || doc.pvt_deleted) return;",
                "  emit(doc._id, {",
                "    'id': doc._id,",
                "    'name': doc.name,",
                "    'username': (doc.sip) ? doc.sip.username : undefined,",
                "    'mac_address': doc.mac_address || '',",
                "    'owner_id': doc.owner_id,",
                "    'enabled': doc.enabled,",
                "    'device_type': doc.device_type || 'sip_device',",
                "    'mobile': doc.mobile,",
                "    'call_recording': doc.call_recording,",
                "    'flags': doc.flags || []",
                "  });",
                "}"
            ]
        },
        "listing_by_macaddress": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'device' || doc.pvt_deleted) return;",
                "  if (doc.mac_address) emit(doc.mac_address, null)",
                "}"
            ]
        },
        "listing_by_owner": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'device' || doc.pvt_deleted) return;",
                "  var owners = {};",
                "  if (doc.owner_id) owners[doc.owner_id] = true;",
                "  if (typeof doc.hotdesk == 'object' && typeof doc.hotdesk.users == 'object') {",
                "    var users = [],",
                "      o = (doc.hotdesk || {}).users || {};",
                "    for (var p in o)",
                "      if (o.hasOwnProperty(p)) users.push(p);",
                "    users.forEach(function(u) {",
                "      owners[u] = true;",
                "    });",
                "  }",
                "  var owners_keys = [],",
                "    o = owners || {};",
                "  for (var p in o)",
                "    if (o.hasOwnProperty(p)) owners_keys.push(p);",
                "  owners_keys.forEach(function(os) {",
                "    emit(os, {",
                "      'id': doc._id,",
                "      'name': doc.name,",
                "      'mac_address': doc.mac_address || '',",
                "      'owner_id': doc.owner_id,",
                "      'enabled': doc.enabled,",
                "      'device_type': doc.device_type || 'sip_device',",
                "      'hotdesked': os !== doc.owner_id,",
                "      'call_recording': doc.call_recording",
                "    });",
                "  });",
                "}"
            ]
        },
        "listing_by_presence_id": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'device' || doc.pvt_deleted) return;",
                "  if (doc.provision && doc.provision.feature_keys)",
                "    for (var i in doc.provision.feature_keys) {",
                "      var key = doc.provision.feature_keys[i];",
                "      if (key.type == 'presence' || key.type == 'personal_parking') emit(key.value, null);",
                "    }",
                "}"
            ]
        },
        "sip_credentials": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_deleted) return;",
                "  if (doc.sip) {",
                "    var sip = JSON.parse(JSON.stringify(doc.sip));",
                "    sip.authorizing_id = doc._id;",
                "    sip.authorizing_type = doc.device_type == 'mobile' ? 'mobile' : doc.pvt_type;",
                "    emit(sip.username.toLowerCase(), sip);",
                "  } else if (doc.pvt_type === 'sys_info') {",
                "    for (var i in doc.servers) {",
                "      if (!doc.servers[i].auth || !doc.servers[i].auth.auth_method || doc.servers[i].auth.auth_method.toLowerCase() != \"password\") continue;",
                "      var auth = doc.servers[i].auth;",
                "      emit(auth.auth_user.toLowerCase(), {",
                "        'password': auth.auth_password,",
                "        'username': auth.auth_user,",
                "        'method': auth.auth_method || 'password',",
                "        'invite_format': doc.servers[i].options.inbound_format || 'e164',",
                "        'authorizing_id': doc._id,",
                "        'authorizing_type': doc.pvt_type",
                "      });",
                "    }",
                "  }",
                "}"
            ]
        }
    }
}
