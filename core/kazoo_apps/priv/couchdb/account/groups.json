{
    "_id": "_design/groups",
    "kazoo": {
        "view_map": [
            {
                "classification": "account"
            }
        ]
    },
    "language": "javascript",
    "views": {
        "crossbar_listing": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'group' || doc.pvt_deleted) return;",
                "  var features = [];",
                "  if (doc.smartpbx) {",
                "    for (var feature in doc.smartpbx) {",
                "      if (doc.smartpbx[feature].enabled) {",
                "        features.push(feature);",
                "      }",
                "    }",
                "  }",
                "  if (doc.music_on_hold && doc.music_on_hold.media_id) {",
                "    features.push('music_on_hold');",
                "  }",
                "  var endpoints = 0,",
                "    o = doc.endpoints || {};",
                "  for (var p in o)",
                "    if (o.hasOwnProperty(p)) endpoints++;",
                "  emit(doc._id, {",
                "    'id': doc._id,",
                "    'name': doc.name,",
                "    'features': features,",
                "    'endpoints': endpoints,",
                "    'flags': doc.flags || []",
                "  });",
                "}"
            ]
        },
        "crossbar_listing_by_user": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'group' || doc.pvt_deleted) return;",
                "  var features = [];",
                "  if (doc.smartpbx) {",
                "    for (var feature in doc.smartpbx) {",
                "      if (doc.smartpbx[feature].enabled) {",
                "        features.push(feature);",
                "      }",
                "    }",
                "  }",
                "  if (doc.music_on_hold && doc.music_on_hold.media_id) {",
                "    features.push('music_on_hold');",
                "  }",
                "  var endpoints = 0,",
                "    o = doc.endpoints || {};",
                "  for (var p in o)",
                "    if (o.hasOwnProperty(p)) endpoints++;",
                "  for (var id in doc.endpoints)",
                "    if (doc.endpoints[id].type === 'user') emit(id, {",
                "      'id': doc._id,",
                "      'name': doc.name,",
                "      'features': features,",
                "      'endpoints': endpoints,",
                "      'flags': doc.flags || []",
                "    });",
                "}"
            ]
        }
    }
}
