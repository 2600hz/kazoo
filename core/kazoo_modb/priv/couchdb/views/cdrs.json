{
    "_id": "_design/cdrs",
    "kazoo": {
        "view_map": [
            {
                "classification": "modb"
            }
        ]
    },
    "language": "javascript",
    "lists": {
        "format_summary": [
            "function() {",
            "  var row, results = {",
            "    'inbound': {},",
            "    'outbound': {}",
            "  };",
            "  while (row = getRow()) {",
            "    var value = row.value;",
            "    if (!results[value.direction][value.domain]) results[value.direction][value.domain] = {};",
            "    if (!results[value.direction][value.domain][value.classifier]) results[value.direction][value.domain][value.classifier] = {",
            "      'total': 0",
            "    };",
            "    results[value.direction][value.domain][value.classifier]['total'] += value.billable_seconds;",
            "    if (value.rate_name) {",
            "      if (!results[value.direction][value.domain][value.classifier][value.rate_name]) results[value.direction][value.domain][value.classifier][value.rate_name] = 0;",
            "      results[value.direction][value.domain][value.classifier][value.rate_name] += value.billable_seconds;",
            "    }",
            "  }",
            "  return JSON.stringify({",
            "    'total_rows': 1,",
            "    'offset': 0,",
            "    'rows': [results]",
            "  });",
            "}"
        ]
    },
    "views": {
        "crossbar_listing": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_deleted || doc.pvt_type != 'cdr') return;",
                "  emit([doc.pvt_created, doc._id], {",
                "    id: doc._id,",
                "    call_id: doc.call_id,",
                "    caller_id_name: doc.caller_id_name,",
                "    caller_id_number: doc.caller_id_number,",
                "    callee_id_name: doc.callee_id_name,",
                "    callee_id_number: doc.callee_id_number,",
                "    duration_seconds: doc.duration_seconds,",
                "    interaction_id: doc.interaction_id,",
                "    billing_seconds: doc.billing_seconds,",
                "    timestamp: doc.timestamp,",
                "    hangup_cause: doc.hangup_cause,",
                "    other_leg_call_id: doc.other_leg_call_id,",
                "    owner_id: doc.custom_channel_vars.owner_id,",
                "    to: doc.to_uri,",
                "    from: doc.from_uri,",
                "    inception: doc.custom_channel_vars.inception,",
                "    direction: doc.call_direction,",
                "    request: doc.request,",
                "    authorizing_id: doc.custom_channel_vars.authorizing_id,",
                "    media_recordings: doc.custom_channel_vars.media_recordings",
                "  });",
                "}"
            ]
        },
        "listing_by_owner": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'cdr' || doc.pvt_deleted || !doc.custom_channel_vars || !doc.custom_channel_vars.owner_id) return;",
                "  emit([doc.custom_channel_vars.owner_id, doc.pvt_created, doc._id], {",
                "    'id': doc._id,",
                "    'call_id': doc.call_id,",
                "    'caller_id_name': doc.caller_id_name,",
                "    'caller_id_number': doc.caller_id_number,",
                "    'callee_id_name': doc.callee_id_name,",
                "    'callee_id_number': doc.callee_id_number,",
                "    'duration_seconds': doc.duration_seconds,",
                "    'billing_seconds': doc.billing_seconds,",
                "    'timestamp': doc.timestamp,",
                "    'hangup_cause': doc.hangup_cause,",
                "    'other_leg_call_id': doc.other_leg_call_id,",
                "    'call_direction': doc.call_direction,",
                "    'to': doc.to_uri,",
                "    'from': doc.from_uri,",
                "    'inception': doc.custom_channel_vars.inception",
                "  })",
                "}"
            ]
        },
        "summarize_cdrs": {
            "map": [
                "function(doc) {",
                "  if (doc.pvt_type != 'cdr' || doc.pvt_deleted || !doc.custom_channel_vars || doc.channel_name.indexOf('loopback') !== -1 || (doc.call_direction == 'inbound' && doc.custom_channel_vars.authorizing_id) || (doc.call_direction == 'outbound' && !doc.custom_channel_vars.resource_id)) return;",
                "  if (doc.call_direction == 'inbound') {",
                "    var domain = doc.from.substr(doc.from.indexOf('@') + 1);",
                "  } else {",
                "    var domain = doc.to.substr(doc.to.indexOf('@') + 1);",
                "  }",
                "  var number = doc.to.substr(0, doc.to.indexOf('@'));",
                "  if (number.match(/^\\+1((?:800|888|877|866|855)\\d{7})$/)) {",
                "    var classifier = 'tollfree_us';",
                "  } else if (number.match(/^\\+1(900\\d{7})$/)) {",
                "    var classifier = 'toll_us';",
                "  } else if (number.match(/^(911|933)$/)) {",
                "    var classifier = 'emergency';",
                "  } else if (number.match(/^\\+?1((?:684|264|268|242|246|441|284|345|767|809|829|849|473|671|876|664|670|787|939|869|758|784|721|868|649|340)\\d{7})$/)) {",
                "    var classifier = 'caribbean';",
                "  } else if (number.match(/^\\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$/)) {",
                "    var classifier = 'did_us';",
                "  } else if (number.match(/^\\+[2-9]\\d{7,}$/)) {",
                "    var classifier = 'international';",
                "  } else {",
                "    var classifier = 'unknown';",
                "  }",
                "  if (doc.custom_channel_vars.rate_name) {",
                "    emit([doc.pvt_created, doc._id], {",
                "      'direction': doc.call_direction,",
                "      'classifier': classifier,",
                "      'domain': domain,",
                "      'billable_seconds': parseInt(doc.billing_seconds),",
                "      'rate_name': doc.custom_channel_vars.rate_name",
                "    });",
                "  } else {",
                "    emit([doc.pvt_created, doc._id], {",
                "      'direction': doc.call_direction,",
                "      'classifier': classifier,",
                "      'domain': domain,",
                "      'billable_seconds': parseInt(doc.billing_seconds)",
                "    });",
                "  }",
                "}"
            ]
        }
    }
}
