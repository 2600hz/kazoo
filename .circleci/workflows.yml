version: 2

workflows:
  version: 2
  build-analyze-run:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - checks:
          requires:
            - build
      - analyze:
          requires:
            - build
      - release:
          requires:
            - build

defaults: &defaults
  docker:
  - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
    command: /sbin/init
  working_directory: ~/2600hz/kazoo
  shell: /bin/bash --login
  environment:
    BASH_ENV: ".git/.bashrc"

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run:
          command: echo -e "export OTP_VERSION=$(<~/2600hz/kazoo/make/erlang_version)\nexport PATH=${HOME}/.kerl/\$OTP_VERSION/bin:${PATH}\n" >> $BASH_ENV
      - restore_cache:
          keys:
            - erlang-v1-{{ checksum "make/erlang_version" }}
      - run: echo -e "\n. ~/.kerl/$OTP_VERSION/activate\n" >> $BASH_ENV
      - run:
          command: bash ./scripts/circleci-build-erlang.sh
          no_output_timeout: 1800s
      - save_cache:
          key: erlang-v1-{{ checksum "make/erlang_version" }}
          paths:
            - ~/.kerl
            - ~/.local/
      - run: echo -e "\nexport CHANGED=\$(git --no-pager diff --name-only HEAD origin/master -- applications core | xargs readlink -e)\nexport CHANGED_SWAGGER=`[[ ! -z $(git --no-pager diff --name-only HEAD origin/master -- applications/crossbar/priv/api/swagger.json) ]] && echo $(readlink -e applications/crossbar/priv/api/swagger.json)`\n" >> $BASH_ENV
      - run: echo $CHANGED
      - persist_to_workspace:
          root: .
          paths:
            - .
      - persist_to_workspace:
          root: ~/
          paths:
            - .kerl
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "make/deps.mk" }}
      - run: make fmt
      - run: JOBS="2" make
      - save_cache:
          key: deps-v1-{{ checksum "make/deps.mk" }}
          paths:
            - deps/
      - persist_to_workspace:
          root: .
          paths:
            - .
      - persist_to_workspace:
          root: ~/
          paths:
            - .kerl
  checks:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - attach_workspace:
          at: ~/
      - run: which ag >/dev/null 2>&1 || sudo apt-get update; sudo apt-get install silversearcher-ag
      - run: sudo pip install --upgrade pip
      - run: sudo pip install PyYAML mkdocs pyembed-markdown jsonschema

      - run: ./scripts/state-of-docs.sh || true
      - run: ./scripts/code_checks.bash $CHANGED
      - run: make code_checks
      - run: ./scripts/validate-js.sh $(find {core,applications}/*/priv/**/* -name *.json)
      - run: make apis
      - run: make app_applications
      - run: make docs
      - run: make validate-schemas
      - run: ./scripts/state-of-edoc.escript
      - run: make xref
      - run: make sup_completion
      - run: make elvis
      - run: ${PWD}/scripts/check-unstaged.bash
  analyze:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - plt-v1-{{ checksum "make/deps.mk" }}
      - run: TO_DIALYZE="$(echo $CHANGED)" make build-plt dialyze
      - save_cache:
          key: plt-v1-{{ checksum "make/deps.mk" }}
          paths:
            - .kazoo.plt
  release:
    <<: *defaults
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      TZ: "/usr/share/zoneinfo/UTC"
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    - image: couchdb:2.1.1
    - image: rabbitmq:3.7
    - image: circleci/python:3.6.1
    steps:
      - attach_workspace:
          at: .
      - attach_workspace:
          at: ~/
      - run: mkdir -p $CIRCLE_ARTIFACTS
      - run: . .kerl/*/activate && make build-ci-release
      - run: . .kerl/*/activate && KAZOO_CONFIG=${PWD}/rel/ci.config.ini REL="kazoo_apps" ACT="console" NODE_NAME_TYPE="-sname" make release
      - run: cp ${PWD}/rel/ci.relx.config $CIRCLE_ARTIFACTS/
      - run: find ${PWD}/_rel/kazoo/releases -name kazoo.rel -exec cp {} $CIRCLE_ARTIFACTS/ \;
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - run: |
          if [[ $(grep -c -v -F 'exit with reason shutdown' ${CIRCLE_ARTIFACTS}/log/error.log) -gt 0 ]]; then
            cat ${CIRCLE_ARTIFACTS}/log/error.log
            exit 1
          fi
