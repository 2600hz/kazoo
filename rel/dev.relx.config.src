ToName = fun (App) -> list_to_atom(hd(string:tokens(App,"-"))) end,

Apps = [list_to_atom(App)  || "applications/"++App = Dir <- filelib:wildcard("applications/*"), filelib:is_dir(Dir)],
Core = [list_to_atom(App)  ||         "core/"++App = Dir <- filelib:wildcard(        "core/*"), filelib:is_dir(Dir)],
Deps = [list_to_atom(App)  ||         "deps/"++App = Dir <- filelib:wildcard(        "deps/*"), filelib:is_dir(Dir)],

ToFilterOut = [rabbitmq_codegen
              ,'.erlang.mk'
              ,'ci.erlang.mk'
              ,'.settings'
              ,skel
              ,parse_trans
              ,meck
              ,'exml'
              ,'escalus'
              ],
Preparer = fun (List) -> [{E,load} || E <- List, not lists:member(E, ToFilterOut)] end,
Base = [runtime_tools
       ,wx
       ,observer
       ,debugger
       ,sasl
       ],

[{lib_dirs, ["applications"
            ,"core"
            ,"deps"
            ]}

,{include_src, false}
,{include_erts, false}

,{generate_start_script, false}
,{extended_start_script, false}

,{overlay, [{copy, "kazoo", "{{output_dir}}/bin/"}
           ,{copy, "../core/sup/sup", "{{output_dir}}/bin/"}
           ,{copy, "nodetool", "{{output_dir}}/bin/"}
          ]}
            
,{default_release, kazoo, "4.2.0"}
,{release, {kazoo,"4.2.0"}
 ,Base ++ Preparer(Apps ++ Core ++ Deps)
 }
]
++ [{release, {App, "4.2.0"}
    ,Base ++ Preparer([App] ++ Core ++ Deps)
    }
    || App <- Apps,
       App =/= skel
   ].
