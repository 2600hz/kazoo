ToName = fun (Apps) ->
                 [list_to_atom(hd(string:tokens(App,"-"))) || App <- Apps]
         end,

Is_OTP_GE_18 = case erlang:system_info(otp_release) of
                   [$1,D|_] when D >= $8 -> true;
                   _ -> false
               end,

Apps = ToName([App || "applications/"++App <- filelib:wildcard("applications/*"), App /= "Makefile"]),
Core = ToName([App ||         "core/"++App <- filelib:wildcard(        "core/*"), App /= "Makefile"]),
Deps = ToName([App ||         "deps/"++App <- filelib:wildcard(        "deps/*"), App /= "Makefile"]),

Base = [ {'++', Core}
       , {'++', Apps}
         %% Both whistle_apps and ecallmgr include apps: whistle_amqp, sasl, crypto
       , {'--', [ecallmgr, whistle_apps]}

       , {'++', Deps}
         %% Name is amqp_client, not rabbitmq_erlang_client
       , {'--', [rabbitmq_erlang_client]}, {'++',  [amqp_client]}
         %% Manually added: is a dep of RabbitMQ client
       , {'++', [rabbit_common]}
         %% exmpp Duplicated modules: tls specified in ssl and exmpp
       , {'--', [exmpp]}
         %% Name is hep, not hep_erlang
       , {'--', [hep_erlang]}, {'++', [hep]}
         %% merl Part of OTP since 18
       , {'--', case Is_OTP_GE_18 of
                    true  -> [merl];
                    false -> []
                end}
         %% skel Not a real app
       , {'--', [skel]}
       ],
LeftAssocAsItShouldBe = fun ({Op,Arg}, Acc) -> (fun erlang:Op/2)(Acc, Arg) end,
Based = lists:sort( lists:foldl(LeftAssocAsItShouldBe, [], Base) ),

Config = "/etc/kazoo/app.config", %% SHOULD rename app.config to sys.config as OTP prefers it.
case filelib:is_regular(Config) of
    true ->  [{sys_config, Config}];
    false -> [{sys_config, "rel/sys.config"}]
end ++

[ {lib_dirs, [ "applications"
             , "core"
             , "deps"
             , hd(filelib:wildcard("deps/rabbitmq_erlang_client-*/deps"))
             ]}

, {include_src, false}

, {extended_start_script, true}

, {vm_args, "rel/vm.args"}

, {release, {kazoo,"4.0.0"}
  , [whistle_apps, ecallmgr] ++ Based
  }

].
