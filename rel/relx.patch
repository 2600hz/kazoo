@@ -259,12 +259,16 @@
         else
             replace_os_vars "$IN_FILE_PATH" "$OUT_FILE_PATH"
         fi
-    else
-        # If vm.arg.orig or sys.config.orig is present then use that
-        if [ -f "$ORIG_FILE_PATH" ]; then
-           cp "$ORIG_FILE_PATH" "$OUT_FILE_PATH"
-        fi
     fi
+
+    # If $RELX_REPLACE_OS_VARS is not set and vm.arg.orig or
+    # sys.config.orig is present this means that env variable
+    # substitution has occurred before and the result is
+    # already saved to vm.args and sys.config in previous run.
+    # This could happens for running escripts, etc... which
+    # really doesn't need these files if the user doesn't want
+    # vm.args to be written so often.
+
     echo $OUT_FILE_PATH
 }

@@ -293,7 +297,12 @@
 export LD_LIBRARY_PATH="$ERTS_DIR/lib:$LD_LIBRARY_PATH"
 ERTS_LIB_DIR="$(dirname "$ERTS_DIR")/lib"

-VMARGS_PATH=$(add_path vm.args $VMARGS_PATH)
+VMARGS_ORIG_PATH=$(add_path vm.args.orig)
+if [ -f "$VMARGS_ORIG_PATH" ]; then
+    VMARGS_PATH="$VMARGS_ORIG_PATH"
+else
+    VMARGS_PATH=$(add_path vm.args $VMARGS_PATH)
+fi
 # Extract the target node name from node.args
 NAME_ARG=$(egrep '^-s?name' "$VMARGS_PATH" || true)
 # Perform replacement of variables in ${NAME_ARG}
@@ -515,7 +524,7 @@
                 else
                   BOOTFILE="$REL_DIR/start"
                 fi
-                FOREGROUNDOPTIONS="-noshell -noinput +Bd"
+                FOREGROUNDOPTIONS="-noshell -noinput"
                 ;;
             console_clean)
                 __code_paths=$(relx_get_code_paths)
@@ -552,7 +561,7 @@

         # Log the startup
         echo "$RELEASE_ROOT_DIR"
-        logger -t "$REL_NAME[$$]" "Starting up"
+        logger -t "$REL_NAME[$$]" "Starting up $NAME ($REL_NAME-$REL_VSN - Erts $ERTS_VSN)"

         # Start the VM
         exec "$@" -- ${1+$ARGS}
