{
    "basePath": "/v2",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "access_lists": {
            "additionalProperties": true,
            "description": "Access Control List entries for device or account",
            "properties": {
                "cidrs": {
                    "description": "Classless Inter-Domain Routing IP notation for use on the access lists",
                    "items": {
                        "description": "CIDR IP to use on access lists",
                        "type": "string"
                    },
                    "type": "array"
                },
                "order": {
                    "description": "Allow-Deny or Deny-Allow?",
                    "enum": [
                        "allow,deny",
                        "deny,allow"
                    ],
                    "type": "string"
                },
                "user_agent": {
                    "description": "RegExp to match valid user agent strings",
                    "type": "string"
                }
            },
            "required": [
                "cidrs",
                "order"
            ],
            "type": "object"
        },
        "account_config.cdr": {
            "description": "Schema for cdr account_config",
            "properties": {
                "ignore_loopback_bowout": {
                    "default": true,
                    "description": "cdr ignore loopback bowout",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "account_config.conferences": {
            "description": "Schema for conferences account_config",
            "properties": {
                "entry_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                    "description": "conferences entry tone",
                    "type": "string"
                },
                "exit_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,440);v=-7;>=3;+=.1;%(800,0,349,440)",
                    "description": "conferences exit tone",
                    "type": "string"
                },
                "moderator_entry_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                    "description": "conferences moderator entry tone",
                    "type": "string"
                },
                "moderator_exit_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,440);v=-7;>=3;+=.1;%(800,0,349,440)",
                    "description": "conferences moderator exit tone",
                    "type": "string"
                },
                "number_timeout": {
                    "default": 5000,
                    "description": "conferences number timeout",
                    "type": "integer"
                },
                "pin_timeout": {
                    "default": 5000,
                    "description": "conferences pin timeout",
                    "type": "integer"
                },
                "support_name_announcement": {
                    "default": true,
                    "description": "conferences support name announcement",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "account_config.crossbar.sms": {
            "description": "Schema for crossbar.sms account_config",
            "properties": {
                "api_e164_convert_from": {
                    "default": false,
                    "description": "crossbar.sms api e164 convert from",
                    "type": "boolean"
                },
                "api_e164_convert_to": {
                    "default": false,
                    "description": "crossbar.sms api e164 convert to",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "account_config.doodle": {
            "description": "Schema for doodle account_config",
            "properties": {
                "api_preserve_caller_id": {
                    "default": true,
                    "description": "doodle.api preserve caller id",
                    "type": "boolean"
                },
                "reschedule": {
                    "default": {},
                    "description": "doodle reschedule",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "account_config.fax": {
            "description": "Schema for fax account_config",
            "properties": {
                "default_smtp_domain": {
                    "default": "fax.kazoo.io",
                    "description": "fax defaultsmtp domain",
                    "type": "string"
                },
                "log_faxbox_errors": {
                    "default": true,
                    "description": "fax log faxbox errors",
                    "type": "boolean"
                },
                "max_outbound": {
                    "default": 10,
                    "description": "fax max outbound",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "account_config.kazoo_endpoint": {
            "description": "Schema for kazoo_endpoint account_config",
            "properties": {
                "default_can_text_self": {
                    "default": true,
                    "description": "kazoo_endpoint default can text self",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "account_config.media": {
            "description": "Schema for media account_config",
            "properties": {
                "call_recording": {
                    "properties": {
                        "storage_retry_times": {
                            "properties": {
                                "default": 5,
                                "description": "media storage retry times",
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "account_config.number_manager": {
            "description": "Schema for number_manager account_config",
            "properties": {
                "unauthorized_numbers_lookup": {
                    "default": false,
                    "description": "number_manager unauthorized numbers lookup",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "account_config.omnipresence": {
            "description": "Schema for omnipresence account_config",
            "properties": {
                "dialog_subscribed_mwi_prefix": {
                    "default": "*98",
                    "description": "prefix used when subsribing vm updates for dialog",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "account_config.privacy": {
            "description": "Schema for privacy account_config",
            "properties": {
                "block_anonymous_caller_id": {
                    "default": false,
                    "description": "Controls blocking of anonymous calls",
                    "type": "boolean"
                },
                "privacy_mode": {
                    "default": "kazoo",
                    "description": "Default privacy mode for anonymous calls",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "account_config.speech": {
            "description": "Schema for speech account_config",
            "properties": {
                "tts_provider": {
                    "default": "flite",
                    "description": "speech tts provider",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "account_config.webhooks": {
            "description": "Schema for webhooks account_config",
            "properties": {
                "attempt_failure_count": {
                    "default": 6,
                    "description": "webhooks attempt failure count",
                    "type": "integer"
                },
                "attempt_failure_expiry_ms": {
                    "default": 60000,
                    "description": "webhooks attempt failure expiry in milliseconds",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "account_rate_limits": {
            "additionalProperties": true,
            "description": "describe limits for SIP requests",
            "properties": {
                "account": {
                    "$ref": "device_rate_limits"
                },
                "device": {
                    "$ref": "device_rate_limits"
                }
            },
            "required": [
                "account",
                "device"
            ],
            "type": "object"
        },
        "accounts": {
            "description": "Accounts represent tenants or customers on the system. Each account represents an individual dataset or sandbox that only one tenant can access. The data set is architecturally independent from other tenants.",
            "properties": {
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "default": {},
                    "description": "Account level call restrictions for each available number classification",
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The account default caller ID parameters",
                    "type": "object"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of default rules used to modify dialed numbers",
                    "type": "object"
                },
                "do_not_disturb": {
                    "properties": {
                        "enabled": {
                            "description": "The default value for do-not-disturb",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the account is currently enabled",
                    "type": "boolean"
                },
                "language": {
                    "default": "en-us",
                    "description": "The language for this account",
                    "type": "string"
                },
                "metaflows": {
                    "$ref": "metaflows"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The default music on hold parameters",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the default music on hold",
                            "maxLength": 128,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the account",
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "org": {
                    "description": "Full legal name of the organization",
                    "type": "string"
                },
                "preflow": {
                    "additionalProperties": false,
                    "default": {},
                    "description": "Each property provides functionality that can be applied to calls using the callflow application",
                    "properties": {
                        "always": {
                            "description": "The ID of a callflow to always execute prior to processing the callflow with numbers/patterns matching the request",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "realm": {
                    "description": "The realm of the account, ie: 'account1.2600hz.com'",
                    "format": "uri",
                    "maxLength": 253,
                    "minLength": 4,
                    "pattern": "^([.\\w_-]+)$",
                    "type": "string"
                },
                "ringtones": {
                    "default": {},
                    "description": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "timezone": {
                    "description": "The default timezone",
                    "maxLength": 32,
                    "minLength": 5,
                    "type": "string"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "$ref": "notify.callback"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "acls": {
            "additionalProperties": false,
            "description": "Access Control List entries",
            "properties": {
                "cidr": {
                    "description": "Classless Inter-Domain Routing IP notation for use on the ACL",
                    "type": "string"
                },
                "description": {
                    "description": "Will be added as a comment for quick identification later",
                    "maxLength": 30,
                    "type": "string"
                },
                "network-list-name": {
                    "description": "The trusted list should represent anything that can issue calls without authorization.  The authoritative list should indicate inter-network routing equipment (SBC, etc).",
                    "enum": [
                        "authoritative",
                        "trusted"
                    ],
                    "type": "string"
                },
                "type": {
                    "default": "allow",
                    "description": "Allow or deny this CIDR",
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "cidr",
                "network-list-name",
                "type"
            ],
            "type": "object"
        },
        "allotments": {
            "description": "Create buckets of minutes per time-period",
            "patternProperties": {
                "^\\w+$": {
                    "properties": {
                        "amount": {
                            "minimum": 0,
                            "required": true,
                            "type": "integer"
                        },
                        "cycle": {
                            "enum": [
                                "minutely",
                                "hourly",
                                "daily",
                                "weekly",
                                "monthly"
                            ],
                            "required": true,
                            "type": "string"
                        },
                        "group_consume": {
                            "items": {
                                "type": "string"
                            },
                            "required": false,
                            "type": "array"
                        },
                        "increment": {
                            "minimum": 1,
                            "required": false,
                            "type": "integer"
                        },
                        "minimum": {
                            "minimum": 0,
                            "required": false,
                            "type": "integer"
                        },
                        "no_consume_time": {
                            "minimum": 0,
                            "required": false,
                            "type": "integer"
                        }
                    }
                },
                "description": "Allotment object",
                "required": false,
                "type": "object"
            },
            "required": true,
            "type": "object"
        },
        "api_auth": {
            "additionalProperties": false,
            "description": "Provides an auth-token via an Account API key",
            "properties": {
                "api_key": {
                    "description": "The Accounts API key",
                    "maxLength": 64,
                    "minLength": 64,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "app": {
            "additionalProperties": false,
            "description": "Appstore applications",
            "properties": {
                "api_url": {
                    "description": "Application api url",
                    "format": "uri",
                    "required": true,
                    "type": "string"
                },
                "author": {
                    "description": "Application author",
                    "maxLength": 64,
                    "minLength": 2,
                    "required": true,
                    "type": "string"
                },
                "i18n": {
                    "description": "Application source url",
                    "patternProperties": {
                        "[a-z]{2}\\-[A-Z]{2}": {
                            "properties": {
                                "description": {
                                    "minLength": 3,
                                    "required": true,
                                    "type": "string"
                                },
                                "extended_description": {
                                    "required": false,
                                    "type": "string"
                                },
                                "features": {
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array"
                                },
                                "label": {
                                    "maxLength": 64,
                                    "minLength": 3,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "required": true,
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "icon": {
                    "description": "Application icon",
                    "required": true,
                    "type": "string"
                },
                "license": {
                    "description": "Application license",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Application name",
                    "maxLength": 64,
                    "minLength": 3,
                    "required": true,
                    "type": "string"
                },
                "price": {
                    "description": "Application price",
                    "minimum": 0,
                    "required": true,
                    "type": "integer"
                },
                "screenshots": {
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "source_url": {
                    "description": "Application source url",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "urls": {
                    "required": false,
                    "type": "object"
                },
                "version": {
                    "description": "Application version",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "audit_logs": {
            "description": "Audit log of what caused a billing event to occur",
            "properties": {
                "audit": {
                    "description": "Contains the accounts involved in the billable event (initial account and resellers)",
                    "patternProperties": {
                        "^[0-9a-zA-Z]{32}$": {
                            "description": "The account's quantity changes for the billing event",
                            "properties": {
                                "account_name": {
                                    "description": "The name of the account (for historical purposes)",
                                    "required": true,
                                    "type": "string"
                                },
                                "account_quantities": {
                                    "description": "The account's quantities as a result of the billing event",
                                    "type": "object"
                                },
                                "cascade_quantities": {
                                    "description": "The account's cascaded quantities as a result of the billing event",
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "authenticating_user": {
                    "description": "Information about the requestor who caused the billing event",
                    "properties": {
                        "account_id": {
                            "required": true,
                            "type": "string"
                        },
                        "account_name": {
                            "required": true,
                            "type": "string"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "user_id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tree": {
                    "description": "The account's tree (including the account), ordered from ancestor to account",
                    "items": {
                        "type": "string"
                    },
                    "required": true,
                    "type": "array"
                }
            },
            "required": false,
            "type": "object"
        },
        "auth.callback": {
            "additionalProperties": true,
            "description": "callback for authentication providers",
            "properties": {
                "clientId": {
                    "description": "client id, usually appplication id for oauth providers",
                    "type": "string"
                },
                "code": {
                    "description": "access code emitted by provider",
                    "type": "string"
                },
                "provider": {
                    "description": "provider",
                    "type": "string"
                },
                "redirecUri": {
                    "description": "redirect uri",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                }
            },
            "required": [
                "provider",
                "redirectUri",
                "clientId",
                "code"
            ],
            "type": "object"
        },
        "auth_provider": {
            "additionalProperties": true,
            "description": "authentication providers",
            "properties": {
                "enabled": {
                    "default": true,
                    "description": "whether or not this authentication provider is enabled",
                    "type": "boolean"
                },
                "provider_name": {
                    "description": "authentication provider name",
                    "type": "string"
                },
                "provider_type": {
                    "description": "the type of authentication provider",
                    "enum": [
                        "multi_factor",
                        "oauth"
                    ],
                    "type": "string"
                },
                "settings": {
                    "description": "provider configurations",
                    "type": "object"
                }
            },
            "required": [
                "provider_name",
                "provider_type"
            ],
            "type": "object"
        },
        "blacklists": {
            "description": "Schema for a blacklists",
            "properties": {
                "name": {
                    "description": "A friendly name for the temporal rule set",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "numbers": {
                    "default": {},
                    "description": "Map of caller id number to block",
                    "properties": {},
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "bookkeepers": {
            "description": "The bookkeeper modules provided by Kazoo",
            "properties": {
                "braintree": {
                    "type": "object"
                },
                "local": {
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "call_waiting": {
            "description": "Parameters for server-side call waiting",
            "properties": {
                "enabled": {
                    "description": "Determines if server side call waiting is enabled/disabled",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": false,
            "type": "object"
        },
        "caller_id": {
            "description": "Defines caller ID settings based on the type of call being made",
            "properties": {
                "emergency": {
                    "description": "The caller ID used when a resource is flagged as 'emergency'",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "external": {
                    "description": "The default caller ID used when dialing external numbers",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "internal": {
                    "description": "The default caller ID used when dialing internal extensions",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "callflows": {
            "description": "Call flows describe steps to take in order to process a phone call. They are trees of information related to a phone call such as \"answer, play file, record file\" etc. that are logically grouped together and ordered.",
            "properties": {
                "featurecode": {
                    "description": "When the callflow is used as a featurecode this object tracks the intended match of the pattern and name of the feature",
                    "properties": {
                        "name": {
                            "maxLength": 128,
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "maxLength": 30,
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "flow": {
                    "$ref": "callflows.action",
                    "description": "A callflow node defines a module to execute, data to provide to that module, and zero or more children to branch to"
                },
                "metaflow": {
                    "$ref": "metaflows",
                    "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)"
                },
                "numbers": {
                    "default": [],
                    "description": "A list of static numbers that the callflow should execute for",
                    "items": {
                        "maxLength": 36,
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "patterns": {
                    "default": [],
                    "description": "A list of regular expressions that the callflow should execute for, with optional capture groups",
                    "items": {
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.acdc_agent": {
            "description": "Validator for the acdc_agent callflow's data object",
            "properties": {
                "action": {
                    "description": "Set which action to perform",
                    "enum": [
                        "login",
                        "logout",
                        "paused",
                        "resume"
                    ],
                    "type": "string"
                },
                "presence_id": {
                    "description": "Static presence ID to send BLF updates to",
                    "type": "string"
                },
                "presence_state": {
                    "description": "Custom presence state to send",
                    "enum": [
                        "early",
                        "confirmed",
                        "terminated",
                        "red_flash",
                        "red_solid",
                        "green"
                    ],
                    "type": "string"
                },
                "timeout": {
                    "description": "Time, in seconds, for 'paused' state",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.acdc_member": {
            "description": "Validator for the acdc_member callflow's data object",
            "properties": {
                "id": {
                    "description": "ID of the ACDc Queue",
                    "type": "string"
                },
                "priority": {
                    "description": "assign a priority to the caller",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.acdc_queue": {
            "description": "Validator for the acdc_queue callflow's data object",
            "properties": {
                "action": {
                    "description": "What action to perform on the agent for this queue",
                    "enum": [
                        "login",
                        "logout"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Queue ID",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.action": {
            "description": "Call flows describe steps to take in order to process a phone call. They are trees of information related to a phone call such as \"answer, play file, record file\" etc. that are logically grouped together and ordered.",
            "properties": {
                "children": {
                    "description": "Children callflows",
                    "patternProperties": {
                        ".+": {
                            "$ref": "callflows.action"
                        }
                    },
                    "type": "object"
                },
                "data": {
                    "default": {},
                    "description": "The data/arguments of the callflow module",
                    "kazoo-validation": true,
                    "type": "object"
                },
                "module": {
                    "description": "The name of the callflow module to excute at this node",
                    "kazoo-validation": true,
                    "maxLength": 64,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "data",
                "module"
            ],
            "type": "object"
        },
        "callflows.after_bridge": {
            "description": "Validator for the after_bridge callflow's data object",
            "properties": {
                "action": {
                    "description": "What action to perform after a call is bridged",
                    "enum": [
                        "park",
                        "transfer",
                        "hangup"
                    ],
                    "type": "string"
                },
                "data": {
                    "description": "The number to transfer to, or a boolean, depending on the 'action'",
                    "type": [
                        "string",
                        "boolean"
                    ]
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.branch_bnumber": {
            "description": "Validator for the branch_bnumber callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.branch_variable": {
            "description": "Validator for the branch_variable callflow's data object",
            "properties": {
                "scope": {
                    "default": "custom_channel_vars",
                    "description": "specifies where the variable is defined",
                    "enum": [
                        "account",
                        "custom_channel_vars",
                        "device",
                        "merged",
                        "user"
                    ],
                    "type": "string"
                },
                "variable": {
                    "default": "",
                    "description": "specifies the name of variable/property that should be looked up",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.call_forward": {
            "description": "Validator for the call_forward callflow's data object",
            "properties": {
                "action": {
                    "description": "What action to perform on the caller's call forwarding",
                    "enum": [
                        "activate",
                        "deactivate",
                        "update",
                        "toggle",
                        "menu"
                    ],
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.call_waiting": {
            "description": "Validator for the call_waiting callflow's data object",
            "properties": {
                "action": {
                    "default": "toggle",
                    "description": "What action to perform",
                    "enum": [
                        "activate",
                        "deactivate",
                        "toggle"
                    ],
                    "type": "string"
                },
                "scope": {
                    "default": "device",
                    "description": "Apply the action to the calling device or user",
                    "enum": [
                        "device",
                        "user"
                    ],
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.callflow": {
            "description": "Validator for the callflow callflow's data object",
            "properties": {
                "id": {
                    "description": "The Callflow ID to branch to",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.camping_feature": {
            "description": "Validator for the camping_feature callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.check_cid": {
            "description": "Validator for the check_cid callflow's data object",
            "properties": {
                "caller_id": {
                    "properties": {
                        "external": {
                            "properties": {
                                "name": {
                                    "description": "Update external Caller ID Name",
                                    "type": "string"
                                },
                                "number": {
                                    "description": "Update external Caller ID Number",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "regex": {
                    "default": ".*",
                    "description": "Determine match/nomatch when use_absolute_mode is false",
                    "type": "string"
                },
                "use_absolute_mode": {
                    "default": false,
                    "description": "If true, direct call down a branch that matches the caller ID",
                    "type": "boolean"
                },
                "user_id": {
                    "description": "kazoo User ID to use as owner_id instead of detected owner_id",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.cidlistmatch": {
            "description": "Validator for the cidlistmatch callflow's data object",
            "properties": {
                "id": {
                    "description": "CallerID List ID",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.collect_dtmf": {
            "description": "Validator for the Collect DTMF callflow element",
            "properties": {
                "collection_name": {
                    "description": "Store collected DTMF in a named key",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "How long, in milliseconds, to wait for the next DTMF",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "max_digits": {
                    "default": 1,
                    "description": "How many DTMFs to collect from the caller",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "terminator": {
                    "default": "#",
                    "description": "What DTMF will terminate collection before the timeout occurs",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "0",
                        "#",
                        "*"
                    ],
                    "required": false,
                    "type": "string"
                },
                "terminators": {
                    "description": "What DTMFs will terminate collection before the timeout occurs",
                    "items": {
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "0",
                            "#",
                            "*"
                        ],
                        "type": "string"
                    },
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "timeout": {
                    "default": 5000,
                    "description": "How long, in milliseconds, to wait for the first DTMF",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.conference": {
            "description": "Validator for the Conference callflow element",
            "properties": {
                "config": {
                    "$schema": "conferences.json",
                    "description": "Build an ad-hoc conference using the conferences JSON schema",
                    "required": false,
                    "type": "object"
                },
                "id": {
                    "description": "Kazoo ID of the conference",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                },
                "moderator": {
                    "default": false,
                    "description": "Is the caller entering the conference as a moderator",
                    "required": false,
                    "type": "boolean"
                },
                "play_entry_tone": {
                    "default": true,
                    "description": "Should the Entry Tone be played",
                    "required": false,
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "play_exit_tone": {
                    "default": true,
                    "description": "Should the Exit Tone be played",
                    "required": false,
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "welcome_prompt": {
                    "description": "Describes how the caller is greeted on entering a conference",
                    "properties": {
                        "media_id": {
                            "description": "Media to play, either Kazoo media ID or URL",
                            "required": false,
                            "type": "string"
                        },
                        "play": {
                            "default": true,
                            "description": "Should the Welcome Prompt be played",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.dead_air": {
            "description": "Validator for the dead_air callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.device": {
            "properties": {
                "can_call_self": {
                    "description": "Toggle whether devices of the same owner can call each other",
                    "type": "boolean"
                },
                "can_text_self": {
                    "description": "Toggle whether devices of the same owner can text each other",
                    "type": "boolean"
                },
                "delay": {
                    "default": 0,
                    "description": "How long to delay ringing the device, in seconds",
                    "type": "integer"
                },
                "id": {
                    "description": "Device ID",
                    "type": "string"
                },
                "source": {
                    "description": "Source of generating the endpoint (read-only)",
                    "type": "string"
                },
                "static_invite": {
                    "description": "Override the SIP Username",
                    "type": "string"
                },
                "suppress_clid": {
                    "description": "Suppress sending caller ID",
                    "type": "boolean"
                },
                "timeout": {
                    "default": 0,
                    "description": "Time, in seconds, to wait for device to bridge",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "callflows.directory": {
            "description": "Validator for the directory callflow's data object",
            "properties": {
                "id": {
                    "description": "Directory ID",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.disa": {
            "description": "Validator for the disa callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.do_not_disturb": {
            "description": "Validator for the do_not_disturb callflow's data object",
            "properties": {
                "action": {
                    "description": "What action to perform",
                    "enum": [
                        "activate",
                        "deactivate",
                        "toggle"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Document ID on which to update DND settings",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.dynamic_cid": {
            "description": "Validator for the dynamic_cid callflow's data object",
            "properties": {
                "action": {
                    "description": "What action to perform",
                    "enum": [
                        "manual",
                        "list"
                    ],
                    "type": "string"
                },
                "caller_id": {
                    "description": "Static Caller ID settings",
                    "properties": {
                        "name": {
                            "description": "Caller ID Name",
                            "type": "string"
                        },
                        "number": {
                            "description": "Caller ID Number",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "enforce_call_restriction": {
                    "default": true,
                    "description": "Check classification restrictions against endpoint",
                    "type": "boolean"
                },
                "id": {
                    "description": "List ID for caller IDs when 'action' is 'list'",
                    "type": "string"
                },
                "idx_name": {
                    "description": "Named capture group to use",
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "How long, in seconds, to wait for keypresses",
                    "type": "integer"
                },
                "max_digits": {
                    "description": "Max number of digits allowed when collecting Caller ID Number",
                    "type": "integer"
                },
                "media_id": {
                    "description": "Prompt to play to caller to enter Caller ID Number",
                    "type": "string"
                },
                "min_digits": {
                    "description": "Minimum number of digits that must match the regex to collected DTMF",
                    "type": "integer"
                },
                "whitelist_regex": {
                    "description": "Regex to match collected Caller ID Number",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.eavesdrop": {
            "description": "Validator for the eavesdrop callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": "Restricts the calling device to this Device",
                    "type": "string"
                },
                "approved_group_id": {
                    "description": "Requires the calling device to be part of the Group",
                    "type": "string"
                },
                "approved_user_id": {
                    "description": "Requires the calling device to be part of the User",
                    "type": "string"
                },
                "device_id": {
                    "description": "Device ID to eavesdrop",
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID to eavesdrop",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.eavesdrop_feature": {
            "description": "Validator for the eavesdrop_feature callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": "Restricts the calling device to this Device",
                    "type": "string"
                },
                "approved_group_id": {
                    "description": "Requires the calling device to be part of the Group",
                    "type": "string"
                },
                "approved_user_id": {
                    "description": "Requires the calling device to be part of the User",
                    "type": "string"
                },
                "group_id": {
                    "description": "ID of the group/user/device to eavesdrop",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.fax_detect": {
            "description": "Validator for the fax_detect callflow's data object",
            "properties": {
                "duration": {
                    "description": "How long, in seconds, to try detecting fax tones",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.faxbox": {
            "description": "Validator for the faxbox callflow's data object",
            "properties": {
                "faxbox_id": {
                    "description": "ID of the faxbox",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the faxbox",
                    "type": "string"
                },
                "media": {
                    "properties": {
                        "fax_option": {
                            "description": "Caller flag for T38 settings",
                            "enum": [
                                "auto",
                                true,
                                false
                            ],
                            "type": [
                                "string",
                                "boolean"
                            ]
                        }
                    },
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.group": {
            "description": "Validator for the group callflow's data object",
            "properties": {
                "endpoints": {
                    "default": [],
                    "description": "List of endpoint (device/user/group) IDs",
                    "items": {
                        "description": "ID of the endpoint",
                        "type": "string"
                    },
                    "type": "array"
                },
                "fail_on_single_reject": {
                    "description": "If any leg rejects the call, cancel all other legs",
                    "type": "boolean"
                },
                "id": {
                    "description": "Group ID",
                    "type": "string"
                },
                "ignore_forward": {
                    "default": true,
                    "description": "Whether to ignore forwarded phones",
                    "type": "boolean"
                },
                "repeats": {
                    "default": 1,
                    "description": "How many times to repeat dialing the group",
                    "type": "integer"
                },
                "ringback": {
                    "description": "Ringback to use",
                    "required": false,
                    "type": "string"
                },
                "ringtones": {
                    "properties": {
                        "external": {
                            "description": "Ring tone for calls from external sources",
                            "type": "string"
                        },
                        "internal": {
                            "description": "Ring tone for calls from external sources",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "How to ring the endpoints",
                    "enum": [
                        "single",
                        "simultaneous"
                    ],
                    "type": "string"
                },
                "timeout": {
                    "default": 20,
                    "description": "How long to attempt the group",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.group_pickup": {
            "description": "Validator for the group_pickup callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": "Restrict calling device to Device",
                    "type": "string"
                },
                "approved_group_id": {
                    "description": "Restrict calling device to Group",
                    "type": "string"
                },
                "approved_user_id": {
                    "description": "Restrict calling device to User",
                    "type": "string"
                },
                "device_id": {
                    "description": "Device to pickup",
                    "type": "string"
                },
                "group_id": {
                    "description": "Group in which to find a call to pickup",
                    "type": "string"
                },
                "user_id": {
                    "description": "User in which to find a call to pickup",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.group_pickup_feature": {
            "description": "Validator for the group_pickup_feature callflow's data object",
            "properties": {
                "type": {
                    "description": "The type of collection to pickup",
                    "enum": [
                        "group",
                        "user",
                        "device",
                        "extension"
                    ],
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.hangup": {
            "description": "Validator for the hangup callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.hotdesk": {
            "description": "Validator for the hotdesk callflow's data object",
            "properties": {
                "action": {
                    "description": "The action to take for hotdesking",
                    "enum": [
                        "logout",
                        "login",
                        "toggle",
                        "bridge"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Hotdesk ID",
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "How long, in seconds, to wait between keypresses",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.intercept": {
            "description": "Validator for the intercept callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": "Restrict calling device to Device",
                    "type": "string"
                },
                "approved_group_id": {
                    "description": "Restrict calling device to Group",
                    "type": "string"
                },
                "approved_user_id": {
                    "description": "Restrict calling device to User",
                    "type": "string"
                },
                "device_id": {
                    "description": "Device to intercept",
                    "type": "string"
                },
                "group_id": {
                    "description": "Group in which to find a call to intercept",
                    "type": "string"
                },
                "user_id": {
                    "description": "User in which to find a call to intercept",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.intercept_feature": {
            "description": "Validator for the intercept_feature callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": "Restricts the calling device to this Device",
                    "type": "string"
                },
                "approved_group_id": {
                    "description": "Requires the calling device to be part of the Group",
                    "type": "string"
                },
                "approved_user_id": {
                    "description": "Requires the calling device to be part of the User",
                    "type": "string"
                },
                "type": {
                    "description": "The scope of devices to intercept",
                    "enum": [
                        "user",
                        "device",
                        "extension"
                    ],
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.intercom": {
            "description": "Validator for the intercom callflow's data object",
            "properties": {
                "barge_calls": {
                    "description": "Whether to barge in on the callee",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.language": {
            "description": "Validator for the Language callflow element",
            "properties": {
                "language": {
                    "description": "The language to default to for the rest of the call",
                    "pattern": "^[A-Za-z]{2}(-[A-Za-z]{2})?$",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.lookupcidname": {
            "description": "Validator for the Lookup callflow element",
            "properties": {
                "lists": {
                    "default": [],
                    "description": "Array of list ids",
                    "items": {
                        "type": "string"
                    },
                    "required": "true",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.manual_presence": {
            "description": "Validator for the Manual Presence callflow action",
            "properties": {
                "presence_id": {
                    "description": "The Presence ID to send a presence notification about",
                    "required": true,
                    "type": "string"
                },
                "status": {
                    "default": "idle",
                    "description": "The status to update to",
                    "enum": [
                        "idle",
                        "ringing",
                        "busy"
                    ],
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.menu": {
            "description": "Validator for the menu callflow's data object",
            "properties": {
                "id": {
                    "description": "Menu ID to use",
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "Amount of time, in milliseconds, to wait between keypresses",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.move": {
            "description": "Validator for the move callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.nomorobo": {
            "description": "Validator for the NoMoRobo callflow action",
            "properties": {
                "password": {
                    "description": "Password to the NoMoRobo service",
                    "maxLength": 1000,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "username": {
                    "description": "Username to the NoMoRobo service",
                    "maxLength": 1000,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.offnet": {
            "description": "Validator for the offnet callflow's data object",
            "properties": {
                "bypass_e164": {
                    "description": "Use the original requested number instead of normalizing to E164",
                    "type": "boolean"
                },
                "caller_id_type": {
                    "default": "external",
                    "description": "Which configured caller-id to use (key in the 'caller_id' object)",
                    "type": "string"
                },
                "custom_sip_headers": {
                    "description": "Custom SIP Headers to include on the outgoing INVITE",
                    "type": "object"
                },
                "do_not_normalize": {
                    "description": "Use the original requested number instead of normalizing; otherwise try to apply the endpoint's dialplan to the requested number",
                    "type": "boolean"
                },
                "dynamic_flags": {
                    "description": "List of function names (or 'zone') that are called on the Call record to populate the 'flags' array sent to the resource(s) for matching",
                    "type": "array"
                },
                "emit_account_id": {
                    "description": "Toggles whether to put the account id in the SIP packets",
                    "type": "boolean"
                },
                "format_from_uri": {
                    "description": "If true, puts the account realm in the From header",
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": "Override the From realm in the SIP packets",
                    "type": "string"
                },
                "hunt_account_id": {
                    "description": "When using local resources, use this account instead of the account making the call (useful for resellers)",
                    "type": "string"
                },
                "ignore_early_media": {
                    "default": false,
                    "description": "Toggle whether to ignore early media",
                    "type": "boolean"
                },
                "outbound_flags": {
                    "default": [],
                    "description": "List of flags to use when matching resources to route the call",
                    "type": "array"
                },
                "ringback": {
                    "description": "Tone or file to play while waiting for the leg to be answered",
                    "type": "string"
                },
                "timeout": {
                    "description": "How long, in seconds, to wait for the call to be answered",
                    "type": "integer"
                },
                "to_did": {
                    "description": "Statically set the DID to dial",
                    "type": "string"
                },
                "use_local_resources": {
                    "default": true,
                    "description": "Toggle whether to use the account's (or hunt_account_id's) resources vs the system resources",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.page_group": {
            "description": "Validator for the page_group callflow's data object",
            "properties": {
                "audio": {
                    "default": "one-way",
                    "description": "What kind of audio for the group members",
                    "enum": [
                        "one-way",
                        "two-way"
                    ],
                    "required": true,
                    "type": "string"
                },
                "barge_calls": {
                    "description": "Should the Endpoint be interrupted by this call",
                    "type": "boolean"
                },
                "endpoints": {
                    "default": [],
                    "description": "Endpoint IDs (devices, users, etc) included in the ring group",
                    "items": {
                        "description": "ID of the endpoint (device, user, etc)",
                        "properties": {
                            "delay": {
                                "default": 0,
                                "description": "How long to delay ringing the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "endpoint_type": {
                                "description": "The type (device, user, etc) of endpoint",
                                "enum": [
                                    "device",
                                    "user",
                                    "group"
                                ],
                                "required": true,
                                "type": "string"
                            },
                            "id": {
                                "description": "The ID of the endpoint",
                                "maxLength": 128,
                                "minLength": 1,
                                "required": true,
                                "type": "string"
                            },
                            "timeout": {
                                "default": 20,
                                "description": "How long to ring the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "weight": {
                                "description": "Weight of endpoint, different usage in various strategies",
                                "maximum": 100,
                                "minimum": 1,
                                "required": false,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "timeout": {
                    "default": 5,
                    "description": "How long to ring the ring group before continuing, in seconds",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.park": {
            "description": "Validator for the park callflow's data object",
            "properties": {
                "action": {
                    "default": "park",
                    "description": "Action to take for the caller",
                    "enum": [
                        "park",
                        "retrieve",
                        "auto"
                    ],
                    "type": "string"
                },
                "default_callback_timeout": {
                    "description": "How long, in seconds, to wait before calling back the parker",
                    "type": "integer"
                },
                "default_presence_type": {
                    "description": "Type of presence to update",
                    "type": "string"
                },
                "default_ringback_timeout": {
                    "description": "How long, in milliseconds, before ringing back",
                    "type": "integer"
                },
                "slot": {
                    "description": "Static slot number to use",
                    "type": "string"
                },
                "slots": {
                    "default": null,
                    "description": "Statically define slots and their configuration",
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.pivot": {
            "description": "Validator for the Pivot callflow element",
            "properties": {
                "cdr_url": {
                    "description": "Optional URL to send the CDR to at the end of the call",
                    "pattern": "^https?://",
                    "required": false,
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "Store debug logs related to processing this Pivot call",
                    "required": false,
                    "type": "boolean"
                },
                "method": {
                    "default": "get",
                    "description": "What HTTP verb to send the request(s) with",
                    "enum": [
                        "get",
                        "post",
                        "GET",
                        "POST"
                    ],
                    "required": false,
                    "type": "string"
                },
                "req_format": {
                    "default": "kazoo",
                    "description": "What format of Pivot will the your server respond with",
                    "enum": [
                        "kazoo",
                        "twiml"
                    ],
                    "required": false,
                    "type": "string"
                },
                "voice_url": {
                    "description": "What URL to request the initial Pivot callflow",
                    "pattern": "^https?://",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.play": {
            "description": "Validator for the play callflow's data object",
            "properties": {
                "answer": {
                    "description": "Whether to answer an unanswered call",
                    "type": "boolean"
                },
                "id": {
                    "description": "Media ID or URL of the media to play",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.prepend_cid": {
            "description": "Validator for the prepend_cid callflow's data object",
            "properties": {
                "action": {
                    "default": "prepend",
                    "description": "Action to perform",
                    "enum": [
                        "reset",
                        "prepend"
                    ],
                    "type": "string"
                },
                "apply_to": {
                    "default": "original",
                    "description": "Apply the prepend to which caller ID",
                    "enum": [
                        "original",
                        "current"
                    ],
                    "type": "string"
                },
                "caller_id_name_prefix": {
                    "default": "",
                    "description": "Prefix caller ID name",
                    "type": "string"
                },
                "caller_id_number_prefix": {
                    "default": "",
                    "description": "Prefix caller ID number",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.privacy": {
            "description": "Validator for the privacy callflow's data object",
            "properties": {
                "mode": {
                    "default": "full",
                    "description": "set caller privacy on calls, restricting the presentation some or full parts of Caller ID",
                    "enum": [
                        "full",
                        "name",
                        "number",
                        "yes"
                    ],
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.receive_fax": {
            "description": "Validator for the receive_fax callflow's data object",
            "properties": {
                "media": {
                    "properties": {
                        "fax_option": {
                            "description": "Caller flag for T38 settings",
                            "enum": [
                                "auto",
                                true,
                                false
                            ],
                            "type": [
                                "string",
                                "boolean"
                            ]
                        }
                    },
                    "type": "object"
                },
                "owner_id": {
                    "description": "User ID to send fax to",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.record_call": {
            "description": "Validator for the Record Call callflow action",
            "properties": {
                "action": {
                    "default": "start",
                    "description": "Whether to start or stop the recording",
                    "enum": [
                        "start",
                        "stop"
                    ],
                    "required": true,
                    "type": "string"
                },
                "format": {
                    "description": "What format to store the recording on disk",
                    "enum": [
                        "mp3",
                        "wav"
                    ],
                    "type": "string"
                },
                "media_name": {
                    "description": "the name of media",
                    "required": false,
                    "type": "string"
                },
                "record_min_sec": {
                    "description": "The minimum length, in seconds, the recording must be to be considered successful. Otherwise it is deleted",
                    "required": false,
                    "type": "integer"
                },
                "record_on_answer": {
                    "default": false,
                    "description": "Whether to delay the recording until the channel is answered",
                    "required": false,
                    "type": "boolean"
                },
                "record_on_bridge": {
                    "default": false,
                    "description": "Whether to delay the recording until the channel is bridged",
                    "required": false,
                    "type": "boolean"
                },
                "record_sample_rate": {
                    "description": "What sampling rate to use on the recording",
                    "required": false,
                    "type": "integer"
                },
                "time_limit": {
                    "description": "Time limit, in seconds, for the recording",
                    "maximum": 10800,
                    "minimum": 5,
                    "required": false,
                    "type": "integer"
                },
                "url": {
                    "description": "The URL to use when sending the recording for storage",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.record_caller": {
            "description": "Record the caller's audio stream",
            "properties": {
                "format": {
                    "description": "What format to store the recording on disk",
                    "enum": [
                        "mp3",
                        "wav"
                    ],
                    "type": "string"
                },
                "method": {
                    "default": "put",
                    "description": "What HTTP method to use when sending the recording",
                    "enum": [
                        "put",
                        "post"
                    ],
                    "type": "string"
                },
                "time_limit": {
                    "default": 3600,
                    "description": "Time limit, in seconds, for the recording",
                    "maximum": 3600,
                    "minimum": 5,
                    "required": false,
                    "type": "integer"
                },
                "url": {
                    "description": "The URL to use when sending the recording for storage",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.resources": {
            "description": "Validator for the resources callflow's data object",
            "properties": {
                "bypass_e164": {
                    "description": "Use the original requested number instead of normalizing to E164",
                    "type": "boolean"
                },
                "caller_id_type": {
                    "default": "external",
                    "description": "Which configured caller-id to use (key in the 'caller_id' object)",
                    "type": "string"
                },
                "custom_sip_headers": {
                    "description": "Custom SIP Headers to include on the outgoing INVITE",
                    "type": "object"
                },
                "do_not_normalize": {
                    "description": "Use the original requested number instead of normalizing; otherwise try to apply the endpoint's dialplan to the requested number",
                    "type": "boolean"
                },
                "dynamic_flags": {
                    "description": "List of function names (or 'zone') that are called on the Call record to populate the 'flags' array sent to the resource(s) for matching",
                    "type": "array"
                },
                "emit_account_id": {
                    "description": "Toggles whether to put the account id in the SIP packets",
                    "type": "boolean"
                },
                "format_from_uri": {
                    "description": "If true, puts the account realm in the From header",
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": "Override the From realm in the SIP packets",
                    "type": "string"
                },
                "hunt_account_id": {
                    "description": "When using local resources, use this account instead of the account making the call (useful for resellers)",
                    "type": "string"
                },
                "ignore_early_media": {
                    "default": false,
                    "description": "Toggle whether to ignore early media",
                    "type": "boolean"
                },
                "outbound_flags": {
                    "default": [],
                    "description": "List of flags to use when matching resources to route the call",
                    "type": "array"
                },
                "ringback": {
                    "description": "Tone or file to play while waiting for the leg to be answered",
                    "type": "string"
                },
                "timeout": {
                    "description": "How long, in seconds, to wait for the call to be answered",
                    "type": "integer"
                },
                "to_did": {
                    "description": "Statically set the DID to dial",
                    "type": "string"
                },
                "use_local_resources": {
                    "default": true,
                    "description": "Toggle whether to use the account's (or hunt_account_id's) resources vs the system resources",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.response": {
            "description": "Validator for the Response callflow action",
            "properties": {
                "code": {
                    "default": "486",
                    "description": "The SIP Hangup code to respond with",
                    "required": true,
                    "type": "integer"
                },
                "media": {
                    "description": "Optional media file to play before responding with the hangup code/cause",
                    "required": false,
                    "type": "string"
                },
                "message": {
                    "description": "The SIP Hangup cause to respond with",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.ring_group": {
            "description": "Validator for the Ring Group callflow element",
            "properties": {
                "endpoints": {
                    "default": [],
                    "description": "Endpoint IDs (devices, users, etc) included in the ring group",
                    "items": {
                        "description": "ID of the endpoint (device, user, etc)",
                        "properties": {
                            "delay": {
                                "default": 0,
                                "description": "How long to delay ringing the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "endpoint_type": {
                                "description": "The type (device, user, etc) of endpoint",
                                "enum": [
                                    "device",
                                    "user",
                                    "group"
                                ],
                                "required": true,
                                "type": "string"
                            },
                            "id": {
                                "description": "The ID of the endpoint",
                                "maxLength": 128,
                                "minLength": 1,
                                "required": true,
                                "type": "string"
                            },
                            "timeout": {
                                "default": 20,
                                "description": "How long to ring the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "weight": {
                                "description": "Weight of endpoint, different usage in various strategies",
                                "maximum": 100,
                                "minimum": 1,
                                "required": false,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "fail_on_single_reject": {
                    "description": "If any leg rejects the call, cancel all other legs",
                    "type": "boolean"
                },
                "ignore_forward": {
                    "default": true,
                    "description": "Whether to ring forwarded endpoints",
                    "required": false,
                    "type": "boolean"
                },
                "repeats": {
                    "default": 1,
                    "description": "How many times to retry the ring group",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "ringback": {
                    "description": "Ringback to use",
                    "required": false,
                    "type": "string"
                },
                "ringtones": {
                    "properties": {
                        "external": {
                            "description": "Ring tone for calls from external sources",
                            "type": "string"
                        },
                        "internal": {
                            "description": "Ring tone for calls from external sources",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "How to ring the members of the group",
                    "enum": [
                        "simultaneous",
                        "single",
                        "weighted_random"
                    ],
                    "required": false,
                    "type": "string"
                },
                "timeout": {
                    "default": 20,
                    "description": "How long to ring the ring group before continuing, in seconds",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.ring_group_toggle": {
            "description": "Validator for the ring_group_toggle callflow's data object",
            "properties": {
                "action": {
                    "description": "What the module should do. Options are 'login' and 'logout'",
                    "enum": [
                        "login",
                        "logout"
                    ],
                    "required": true,
                    "type": "string"
                },
                "callflow_id": {
                    "description": "The callflow containing the ring group to log in and out of",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.send_dtmf": {
            "description": "Validator for the Send DTMF callflow action",
            "properties": {
                "digits": {
                    "description": "String of DTMF tones to send",
                    "required": true,
                    "type": "string"
                },
                "duration_ms": {
                    "description": "How long, in milliseconds, to send each DTMF",
                    "required": false,
                    "type": [
                        "string",
                        "integer"
                    ]
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.set": {
            "description": "Validator for the set callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.set_cid": {
            "description": "Validator for the set_cid callflow's data object",
            "properties": {
                "caller_id_name": {
                    "default": "",
                    "description": "Set caller ID Name",
                    "type": "string"
                },
                "caller_id_number": {
                    "default": "",
                    "description": "Set caller ID number",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.set_variable": {
            "description": "Validator for the set_variable callflow's data object",
            "properties": {
                "channel": {
                    "default": "a",
                    "description": "Which channel to set the variable on",
                    "enum": [
                        "a",
                        "both"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The value to set 'variable'",
                    "type": "string"
                },
                "variable": {
                    "description": "The variable name to set on the leg(s)",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.skel": {
            "description": "Validator for the skel callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.sleep": {
            "description": "Validator for the sleep callflow's data object",
            "properties": {
                "duration": {
                    "default": 0,
                    "description": "How long to pause before continuing the callflow",
                    "maximum": 86400000,
                    "minimum": 0,
                    "type": "integer"
                },
                "unit": {
                    "default": "s",
                    "description": "What time unit is 'duration' in",
                    "enum": [
                        "ms",
                        "s",
                        "m",
                        "h"
                    ],
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.temporal_route": {
            "description": "Validator for the temporal_route callflow's data object",
            "properties": {
                "action": {
                    "description": "What action to perform",
                    "enum": [
                        "menu",
                        "enable",
                        "disable",
                        "reset"
                    ],
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "How long, in milliseconds, to wait for the next keypress",
                    "type": "integer"
                },
                "rule_set": {
                    "description": "ID of the rule set",
                    "type": "string"
                },
                "rules": {
                    "default": [],
                    "description": "List of rule IDs to use",
                    "items": {
                        "description": "ID of the temporal rule set to use",
                        "type": "string"
                    },
                    "type": "array"
                },
                "timezone": {
                    "description": "Timezone to use when processing temporal rules",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.tts": {
            "description": "Validator for the TTS (Text-to-speech) callflow action",
            "properties": {
                "engine": {
                    "description": "What TTS engine to use",
                    "enum": [
                        "flite",
                        "ispeech"
                    ],
                    "required": false,
                    "type": "string"
                },
                "language": {
                    "default": "en",
                    "description": "The language of the speaker",
                    "required": false,
                    "type": "string"
                },
                "text": {
                    "description": "The text to speak",
                    "maxLength": 1000,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "voice": {
                    "default": "female",
                    "description": "What voice to use when speaking the text",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.user": {
            "description": "Validator for the user callflow's data object",
            "properties": {
                "can_call_self": {
                    "description": "Toggle whether devices of this use can call each other",
                    "type": "boolean"
                },
                "can_text_self": {
                    "description": "Toggle whether devices of this use can text each other",
                    "type": "boolean"
                },
                "delay": {
                    "default": 0,
                    "description": "How long to delay the endpoint(s) before bridging",
                    "type": "integer"
                },
                "fail_on_single_reject": {
                    "description": "If any leg rejects the call, cancel all other legs",
                    "type": "boolean"
                },
                "id": {
                    "description": "User ID",
                    "type": "string"
                },
                "source": {
                    "description": "Source of the endpoint(s)",
                    "type": "string"
                },
                "static_invite": {
                    "description": "Override the SIP Username",
                    "type": "string"
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "Ringing strategy for the endpoint(s)",
                    "enum": [
                        "simultaneous",
                        "single"
                    ],
                    "type": "string"
                },
                "suppress_clid": {
                    "description": "Toggle whether to suppress caller ID",
                    "type": "boolean"
                },
                "timeout": {
                    "default": 20,
                    "description": "Timeout, in seconds, to wait for answer",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.voicemail": {
            "description": "Validator for the Voicemail callflow element",
            "properties": {
                "action": {
                    "default": "compose",
                    "description": "Whether to check voicemail box or compose a new voicemail message",
                    "enum": [
                        "check",
                        "compose"
                    ],
                    "required": false,
                    "type": "string"
                },
                "callerid_match_login": {
                    "default": false,
                    "description": "Whether to match the caller ID to a voicemail box",
                    "type": "boolean"
                },
                "id": {
                    "description": "The ID of the voicemail box",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "default": 2000,
                    "description": "The amount of time (in milliseconds) to wait for the caller to press the next digit after pressing a digit",
                    "required": false,
                    "type": "integer"
                },
                "max_message_length": {
                    "default": 500,
                    "description": "Max length of the message that caller can leave in voicemail box",
                    "required": false,
                    "type": "integer"
                },
                "single_mailbox_login": {
                    "default": false,
                    "description": "Allow login if caller has a single mailbox",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.webhook": {
            "description": "Validator for the webhook callflow's data object",
            "properties": {
                "custom_data": {
                    "description": "JSON object of custom data included on the HTTP request",
                    "type": "object"
                },
                "http_verb": {
                    "description": "What HTTP verb to use when sending the request",
                    "enum": [
                        "post",
                        "get"
                    ],
                    "type": "string"
                },
                "retries": {
                    "description": "How many times to retry the request if the host isn't available",
                    "type": "integer"
                },
                "uri": {
                    "description": "The HTTP URI to send the request",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "cccps": {
            "description": "Calling cards callback platform user's info",
            "properties": {
                "active": {
                    "default": false,
                    "description": "Show's whether CID/PIN active",
                    "type": "boolean"
                },
                "cid": {
                    "description": "CID to authorize",
                    "required": false,
                    "type": "string"
                },
                "max_concurent_calls_per_user": {
                    "description": "Calls per user limit. Counts all user's legs and compares to max_concurent_calls_per_user multiplied by 2",
                    "required": false,
                    "type": "integer"
                },
                "pin": {
                    "description": "PIN to authorize",
                    "required": false,
                    "type": "string"
                },
                "retain_cid": {
                    "description": "Pass initial caller number to the callee",
                    "required": false,
                    "type": "boolean"
                },
                "user_id": {
                    "description": "The ID of the user object that 'owns' cid/pin",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                }
            }
        },
        "cdrs": {
            "additionalProperties": false,
            "description": "Call Detail Records",
            "properties": {
                "app_name": {
                    "description": "The Kazoo application that issued the CDR",
                    "required": false,
                    "type": "string"
                },
                "app_version": {
                    "description": "The internal Kazoo version number of the application that issued the CDR",
                    "required": false,
                    "type": "string"
                },
                "billing_seconds": {
                    "description": "The number of seconds the call leg can be billed for (typically from when the call leg is answered",
                    "required": false,
                    "type": "string"
                },
                "call_direction": {
                    "description": "Direction of the call, relative to the media switch",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "required": false,
                    "type": "string"
                },
                "call_id": {
                    "description": "Unique identifier of the call leg",
                    "required": true,
                    "type": "string"
                },
                "callee_id_name": {
                    "description": "The indicated name of the callee",
                    "required": false,
                    "type": "string"
                },
                "callee_id_number": {
                    "description": "The indicated number of the callee",
                    "required": false,
                    "type": "string"
                },
                "caller_id_name": {
                    "description": "The indicated name of the caller",
                    "required": false,
                    "type": "string"
                },
                "caller_id_number": {
                    "description": "The indicated number of the caller",
                    "required": false,
                    "type": "string"
                },
                "custom_channel_vars": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "Kazoo-specific key/value pairs set on the channel",
                    "required": false,
                    "type": "object"
                },
                "custom_sip_headers": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "A property list of SIP headers beging with the prefix 'X-'",
                    "required": false,
                    "type": "object"
                },
                "digits_dialed": {
                    "description": "All the DTMF tones detected on this leg of the call",
                    "required": false,
                    "type": "string"
                },
                "disposition": {
                    "description": "Who sent the SIP BYE message",
                    "required": false,
                    "type": "string"
                },
                "duration_seconds": {
                    "description": "The duration of the call leg, in seconds",
                    "required": false,
                    "type": "string"
                },
                "fax_bad_rows": {
                    "required": false,
                    "type": "string"
                },
                "fax_ecm_used": {
                    "required": false,
                    "type": "string"
                },
                "fax_result_code": {
                    "required": false,
                    "type": "string"
                },
                "fax_result_text": {
                    "required": false,
                    "type": "string"
                },
                "fax_success": {
                    "required": false,
                    "type": "string"
                },
                "fax_total_pages": {
                    "required": false,
                    "type": "string"
                },
                "fax_transfer_rate": {
                    "required": false,
                    "type": "string"
                },
                "fax_transferred_pages": {
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "Built by Kazoo, depending on direction, to represent the From user",
                    "required": false,
                    "type": "string"
                },
                "from_uri": {
                    "description": "The From SIP URI",
                    "required": false,
                    "type": "string"
                },
                "hangup_cause": {
                    "description": "The reason for the call leg's termination",
                    "required": false,
                    "type": "string"
                },
                "hangup_code": {
                    "description": "The SIP hangup code, if available",
                    "required": false,
                    "type": "string"
                },
                "local_sdp": {
                    "description": "The SDP negotiated by the local agent",
                    "required": false,
                    "type": "string"
                },
                "media_server": {
                    "description": "The hostname of the media server that processed the call",
                    "required": false,
                    "type": "string"
                },
                "node": {
                    "description": "The ecallmgr which issued the CDR",
                    "required": false,
                    "type": "string"
                },
                "other_leg_call_id": {
                    "description": "If this leg was bridged, the call-id of the opposite leg",
                    "required": false,
                    "type": "string"
                },
                "other_leg_caller_id_name": {
                    "description": "Caller ID name of the bridged leg",
                    "required": false,
                    "type": "string"
                },
                "other_leg_caller_id_number": {
                    "description": "Caller ID number of the bridged leg",
                    "required": false,
                    "type": "string"
                },
                "other_leg_destination_number": {
                    "description": "Dialed number of the other leg",
                    "required": false,
                    "type": "string"
                },
                "other_leg_direction": {
                    "description": "direction of the other leg, relative to the media server",
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "ID used in NOTIFY SIP messages",
                    "required": false,
                    "type": "string"
                },
                "remote_sdp": {
                    "description": "The SDP negotiated by the remote agent",
                    "required": false,
                    "type": "string"
                },
                "request": {
                    "description": "Built by Kazoo this is the processed request URI",
                    "required": false,
                    "type": "string"
                },
                "ringing_seconds": {
                    "description": "How many seconds the leg was ringing (pre-answer)",
                    "required": false,
                    "type": "string"
                },
                "timestamp": {
                    "description": "UTC timestamp, in gregorian seconds, of when the CDR was generated",
                    "required": false,
                    "type": "string"
                },
                "to": {
                    "description": "Built by Kazoo, depending on direction, to represent the To user",
                    "required": false,
                    "type": "string"
                },
                "to_uri": {
                    "description": "The To SIP URI",
                    "required": false,
                    "type": "string"
                },
                "user_agent": {
                    "description": "User agent header from SIP packet",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "clicktocall": {
            "description": "Click-to-call allows you to create URLs that can be POSTed to with a phone number or SIP URI and create a phone call from the provided contact information to a destination you have pre-determined.",
            "properties": {
                "auth_required": {
                    "default": true,
                    "description": "Determines if this click to call requires valid auth-tokens when invoked",
                    "required": false,
                    "type": "boolean"
                },
                "caller_id_number": {
                    "description": "Explicitly set caller id number",
                    "required": false,
                    "type": "string"
                },
                "dial_first": {
                    "description": "Determinates what will be dialed first: extension or contact",
                    "enum": [
                        "extension",
                        "contact"
                    ],
                    "required": false,
                    "type": "string"
                },
                "extension": {
                    "description": "The extension to connect to when the click to call is invoked",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the click to call",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "outbound_callee_id_name": {
                    "description": "Callee ID Name of the device calling out to the contact number",
                    "required": false,
                    "type": "string"
                },
                "outbound_callee_id_number": {
                    "description": "Callee ID Number of the device calling out to the contact number",
                    "required": false,
                    "type": "string"
                },
                "throttle": {
                    "description": "The rate that this click to call can be invoked",
                    "required": false,
                    "type": "integer"
                },
                "whitelist": {
                    "description": "A list of regular expressions that the click to call can dial to",
                    "items": {
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "conferences": {
            "description": "Schema for conferences",
            "properties": {
                "bridge_password": {
                    "description": "the password used for a conference bridge",
                    "type": "string"
                },
                "bridge_username": {
                    "description": "the username used for a conference bridge",
                    "type": "string"
                },
                "caller_controls": {
                    "description": "caller controls (config settings)",
                    "type": "string"
                },
                "conference_numbers": {
                    "default": [],
                    "description": "Defines conference numbers that can be used by members or moderators",
                    "items": {
                        "regex": "^\\d+$",
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "focus": {
                    "description": "This is a read-only property indicating the media server hosting the conference",
                    "required": false,
                    "type": "string"
                },
                "max_members_media": {
                    "description": "Media to play when the conference is full",
                    "type": "string"
                },
                "max_participants": {
                    "description": "The maximum number of participants that can join",
                    "type": "integer"
                },
                "member": {
                    "description": "Defines the discovery (call in) properties for a member",
                    "properties": {
                        "join_deaf": {
                            "default": false,
                            "description": "Determines if a member will join deaf",
                            "required": false,
                            "type": "boolean"
                        },
                        "join_muted": {
                            "default": true,
                            "description": "Determines if a member will join muted",
                            "required": false,
                            "type": "boolean"
                        },
                        "numbers": {
                            "default": [],
                            "description": "Defines the conference (call in) number(s) for members",
                            "items": {
                                "regex": "^\\d+$",
                                "required": false,
                                "type": "string"
                            },
                            "minItems": 0,
                            "required": false,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "pins": {
                            "default": [],
                            "description": "Defines the pin number(s) for members",
                            "items": {
                                "regex": "^\\d+$",
                                "required": false,
                                "type": "string"
                            },
                            "required": false,
                            "type": "array"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "moderator": {
                    "description": "Defines the discovery (call in) properties for a moderator",
                    "properties": {
                        "join_deaf": {
                            "default": false,
                            "description": "Determines if a moderator will join deaf",
                            "required": false,
                            "type": "boolean"
                        },
                        "join_muted": {
                            "default": false,
                            "description": "Determines if a moderator will join muted",
                            "required": false,
                            "type": "boolean"
                        },
                        "numbers": {
                            "default": [],
                            "description": "Defines the conference (call in) number(s) for moderators",
                            "items": {
                                "regex": "^\\d+$",
                                "required": false,
                                "type": "string"
                            },
                            "required": false,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "pins": {
                            "default": [],
                            "description": "Defines the pin number(s) for moderators",
                            "items": {
                                "regex": "^\\d+$",
                                "required": false,
                                "type": "string"
                            },
                            "required": false,
                            "type": "array"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "moderator_controls": {
                    "description": "profile on the switch for controlling the conference as a moderator",
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the conference",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "owner_id": {
                    "description": "The user ID who manages this conference",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                },
                "play_entry_tone": {
                    "description": "Whether to play an entry tone, or the entry tone to play",
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "play_exit_tone": {
                    "description": "Whether to play an exit tone, or the exit tone to play",
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "play_name": {
                    "default": false,
                    "description": "Do we need to announce new conference members?",
                    "required": false,
                    "type": "boolean"
                },
                "play_welcome": {
                    "description": "Whether to play the welcome prompt",
                    "type": "boolean"
                },
                "profile": {
                    "description": "The XML profile name used to configure the conference",
                    "required": false,
                    "type": "string"
                },
                "require_moderator": {
                    "description": "does the conference require a moderator",
                    "type": "boolean"
                },
                "wait_for_moderator": {
                    "description": "should members wait for a moderator before joining the conference",
                    "type": "boolean"
                }
            },
            "required": false,
            "type": "object"
        },
        "connectivity": {
            "description": "Trunkstore configuration document - this is old stuff; do not recommend building off this if possible",
            "properties": {
                "account": {
                    "description": "Information that applies to the account as a whole",
                    "properties": {
                        "auth_realm": {
                            "description": "The realm any device in the account will use to authenticate with",
                            "minLength": 1,
                            "type": "string"
                        },
                        "caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "emergency_caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "trunks": {
                            "description": "The number of two-way trunks this account has purchased",
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "name": {
                    "description": "Human-friendly name of the trunkstore account",
                    "type": "string"
                },
                "servers": {
                    "default": [],
                    "desciption": "What servers will be allowed to make/receive calls via this account",
                    "items": {
                        "properties": {
                            "DIDs": {
                                "patternProperties": {
                                    "^\\+?\\d*$": {
                                        "properties": {
                                            "caller_id": {
                                                "properties": {
                                                    "cid_name": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    },
                                                    "cid_number": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failover": {
                                                "description": "Route inbound call to another destination if this server fails to handle the call",
                                                "properties": {
                                                    "e164": {
                                                        "description": "An E.164 formatted DID to dial for failover",
                                                        "type": "string"
                                                    },
                                                    "sip": {
                                                        "description": "A SIP URI (sip:user@host) to call for failover",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "force_outbound": {
                                                "default": false,
                                                "type": "boolean"
                                            },
                                            "options": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "auth": {
                                "properties": {
                                    "auth_method": {
                                        "default": "password",
                                        "description": "What type of auth mechanism to use",
                                        "enum": [
                                            "password",
                                            "Password",
                                            "IP",
                                            "ip"
                                        ],
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_password": {
                                        "description": "Password of the user@auth_realm",
                                        "minLength": 1,
                                        "required": false,
                                        "type": "string"
                                    },
                                    "auth_user": {
                                        "description": "Username for authentication",
                                        "minLength": 1,
                                        "required": false,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "description": "IP (sip) address for this device",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "port": {
                                        "description": "Port to send SIP traffic for the remote device",
                                        "required": false,
                                        "type": "integer"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "name": {
                                "description": "Human-friendly name of the server",
                                "minLength": 1,
                                "type": "string"
                            },
                            "options": {
                                "caller_id": {
                                    "properties": {
                                        "cid_name": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "cid_number": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delay": {
                                    "default": 0,
                                    "description": "The time, in seconds, to wait before attempting to call the server",
                                    "type": "integer"
                                },
                                "enabled": {
                                    "default": true,
                                    "description": "Is the server ready for sending and receiving calls",
                                    "type": "boolean"
                                },
                                "failover": {
                                    "description": "Route inbound call to another destination if this server fails to handle the call",
                                    "properties": {
                                        "e164": {
                                            "description": "An E.164 formatted DID to dial for failover",
                                            "type": "string"
                                        },
                                        "sip": {
                                            "description": "A SIP URI (sip:user@host) to call for failover",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "force_outbound": {
                                    "default": false,
                                    "description": "If true, will send the call over configured carriers instead of to the server (as opposed to the 'enabled' flag, which will reject the calls)",
                                    "type": "boolean"
                                },
                                "ignore_early_media": {
                                    "type": "boolean"
                                },
                                "inbound_format": {
                                    "default": "npan",
                                    "description": "Determines how the INVITE is sent to the server",
                                    "enum": [
                                        "e164",
                                        "npan",
                                        "1npan",
                                        "username"
                                    ],
                                    "type": "string"
                                },
                                "ip": {
                                    "description": "IP (sip) address for this device",
                                    "required": false,
                                    "type": "string"
                                },
                                "media_handling": {
                                    "default": "bypass",
                                    "description": "Determine whether the switch should be in the media path or not",
                                    "enum": [
                                        "process",
                                        "bypass"
                                    ],
                                    "type": "string"
                                },
                                "port": {
                                    "description": "Port to send SIP traffic for the remote device",
                                    "required": false,
                                    "type": "integer"
                                },
                                "progress_timeout": {
                                    "description": "The time, in seconds, to wait for the server to progress in the call, before trying an optionally defined failover route or terminating the call",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "sip_headers": {
                                    "description": "List of arbitrary SIP headers to add to the INVITE",
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "description": "The time, in seconds, to wait for an answer from the server",
                                    "type": "integer"
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            }
        },
        "device_rate_limits": {
            "additionalProperties": true,
            "description": "describe limits for SIP requests",
            "properties": {
                "per_minute": {
                    "additionalProperties": false,
                    "description": "The limits to apply by a minute",
                    "properties": {
                        "invites": {
                            "description": "Count for the specified SIP method",
                            "required": false,
                            "type": "integer"
                        },
                        "registrations": {
                            "description": "Count for the specified SIP method",
                            "required": false,
                            "type": "integer"
                        },
                        "total_packets": {
                            "description": "Summary count for all of the SIP methods",
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "per_second": {
                    "additionalProperties": false,
                    "description": "The limits to apply by a second",
                    "properties": {
                        "invites": {
                            "description": "Count for the specified SIP method",
                            "required": false,
                            "type": "integer"
                        },
                        "registrations": {
                            "description": "Count for the specified SIP method",
                            "required": false,
                            "type": "integer"
                        },
                        "total_packets": {
                            "description": "Summary count for all of the SIP methods",
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "devices": {
            "description": "A device be it a SIP phone or landline number",
            "properties": {
                "call_forward": {
                    "description": "The device call forward parameters",
                    "properties": {
                        "direct_calls_only": {
                            "default": false,
                            "description": "Determines if the calls that are not directly sent to the device should be forwarded",
                            "required": false,
                            "type": "boolean"
                        },
                        "enabled": {
                            "default": false,
                            "description": "Determines if the call forwarding should be used",
                            "required": false,
                            "type": "boolean"
                        },
                        "failover": {
                            "default": false,
                            "description": "Enable the call-forwarding parameters if the device is offline",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "default": true,
                            "description": "The option to determine if early media from the call forwarded number should ignored",
                            "required": false,
                            "type": "boolean"
                        },
                        "keep_caller_id": {
                            "default": true,
                            "description": "Determines if the caller id is kept when the call is forwarded, if not the devices caller id is used",
                            "required": false,
                            "type": "boolean"
                        },
                        "number": {
                            "description": "The number to forward calls to",
                            "maxLength": 15,
                            "required": false,
                            "type": "string"
                        },
                        "require_keypress": {
                            "default": true,
                            "description": "Determines if the callee is prompted to press 1 to accept the call",
                            "required": false,
                            "type": "boolean"
                        },
                        "substitute": {
                            "default": true,
                            "description": "Determines if the call forwarding replaces the device",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Device level call restrictions for each available number classification",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The device caller ID parameters",
                    "required": false,
                    "type": "object"
                },
                "contact_list": {
                    "default": {},
                    "description": "Contect List Parameters",
                    "properties": {
                        "exclude": {
                            "description": "If set to true the device is excluded from the contact list",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "device_type": {
                    "description": "Arbitrary device type used by the UI and billing system",
                    "required": false,
                    "type": "string"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of rules used to modify dialed numbers",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "description": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "Is do-not-disturb enabled for this device?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the device is currently enabled",
                    "required": false,
                    "type": "boolean"
                },
                "exclude_from_queues": {
                    "default": false,
                    "description": "Do not ring this device when calling user/agent in queue",
                    "required": false,
                    "type": "boolean"
                },
                "language": {
                    "description": "The language for the device",
                    "required": false,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The audio media parameters",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of audio codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "enum": [
                                true,
                                false,
                                "auto"
                            ],
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "warning": "The string type is deprecated, please use this as a boolean"
                        },
                        "encryption": {
                            "default": {},
                            "description": "Encryption Parameters",
                            "properties": {
                                "enforce_security": {
                                    "default": false,
                                    "description": "Is Encryption Enabled?",
                                    "required": false,
                                    "type": "boolean"
                                },
                                "methods": {
                                    "default": [],
                                    "description": "Supported Encryption Types",
                                    "items": {
                                        "enum": [
                                            "zrtp",
                                            "srtp"
                                        ],
                                        "required": false,
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "fax_option": {
                            "description": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "description": "The option to determine if early media from the device should always be ignored",
                            "required": false,
                            "type": "boolean"
                        },
                        "progress_timeout": {
                            "description": "The progress timeout to apply to the device (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "video": {
                            "default": {},
                            "description": "The video media parameters",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of video codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "VP8",
                                            "H264",
                                            "H263",
                                            "H261"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "metaflows": {
                    "$ref": "metaflows",
                    "description": "The device metaflow parameters"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters used if not a property of the device owner",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "mwi_unsolicitated_updates": {
                    "default": true,
                    "description": "When true enables unsolicitated mwi notifications",
                    "required": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "A friendly name for the device",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "outbound_flags": {
                    "description": "List of flags (features) this device requires when making outbound calls",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "owner_id": {
                    "description": "The ID of the user object that 'owns' the device",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "Static presence ID (used instead of SIP username)",
                    "required": false,
                    "type": "string"
                },
                "provision": {
                    "description": "Provision data",
                    "properties": {
                        "feature_keys": {
                            "description": "Feature Keys",
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "properties": {
                                        "type": {
                                            "description": "Feature key type",
                                            "enum": [
                                                "presence",
                                                "parking",
                                                "personal_parking",
                                                "speed_dial"
                                            ],
                                            "required": true,
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Feature key value",
                                            "maximum": 10,
                                            "minimum": 1,
                                            "required": true,
                                            "type": [
                                                "string",
                                                "integer"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "register_overwrite_notify": {
                    "default": false,
                    "description": "When true enables overwrite notifications",
                    "required": false,
                    "type": "boolean"
                },
                "ringtones": {
                    "default": {},
                    "description": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "sip": {
                    "default": {},
                    "description": "SIP Parameters",
                    "properties": {
                        "custom_sip_headers": {
                            "additionalProperties": {
                                "required": false,
                                "type": "string"
                            },
                            "description": "A property list of SIP headers beging with the prefix 'X-'",
                            "required": false,
                            "type": "object"
                        },
                        "expire_seconds": {
                            "default": 300,
                            "description": "The time, in seconds, sent to the provisioner for the registration period that the device should be configured with.",
                            "required": false,
                            "type": "integer"
                        },
                        "ignore_completed_elsewhere": {
                            "description": "When set to false the phone should not consider ring group calls answered elsewhere as missed",
                            "required": false,
                            "type": "boolean"
                        },
                        "invite_format": {
                            "default": "username",
                            "description": "The SIP request URI invite format",
                            "enum": [
                                "username",
                                "npan",
                                "1npan",
                                "e164",
                                "route"
                            ],
                            "required": false,
                            "type": "string"
                        },
                        "ip": {
                            "description": "IP address for this device",
                            "required": false,
                            "type": "string"
                        },
                        "method": {
                            "default": "password",
                            "description": "Method of authentication",
                            "enum": [
                                "password",
                                "ip"
                            ],
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The number used if the invite format is 1npan, npan, or e164 (if not set the dialed number is used)",
                            "required": false,
                            "type": "string"
                        },
                        "password": {
                            "description": "SIP authentication password",
                            "maxLength": 32,
                            "minLength": 5,
                            "required": false,
                            "type": "string"
                        },
                        "realm": {
                            "description": "The realm this device should use, overriding the account realm. Should rarely be necessary.",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        },
                        "route": {
                            "description": "The SIP URL used if the invite format is 'route'",
                            "required": false,
                            "type": "string"
                        },
                        "static_route": {
                            "description": "Sends all inbound calls to this string (instead of dialed number or username)",
                            "required": false,
                            "type": "string"
                        },
                        "username": {
                            "description": "SIP authentication username",
                            "maxLength": 32,
                            "minLength": 2,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "suppress_unregister_notifications": {
                    "default": false,
                    "description": "When true disables deregister notifications",
                    "required": false,
                    "type": "boolean"
                },
                "timezone": {
                    "description": "Device's timezone",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "dialplans": {
            "additionalProperties": {
                "properties": {
                    "description": {
                        "description": "Friendly name for this regex dialplan",
                        "required": false,
                        "type": "string"
                    },
                    "prefix": {
                        "description": "Prefix the prepend to the capture group after applying the regex",
                        "required": false,
                        "type": "string"
                    },
                    "suffix": {
                        "description": "Suffix the append to the capture group after applying the regex",
                        "required": false,
                        "type": "string"
                    }
                },
                "required": false,
                "type": "object"
            },
            "description": "Permit local dialing by converting the dialed number to a routable form",
            "properties": {
                "system": {
                    "description": "List of system dial plans",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "directories": {
            "description": "Allow a caller to search for a user/device by name instead of extension/DID",
            "properties": {
                "confirm_match": {
                    "default": true,
                    "description": "When one match is found, require caller to confirm the match before connecting",
                    "required": false,
                    "type": "boolean"
                },
                "max_dtmf": {
                    "default": 0,
                    "description": "Cap the number of DTMF characters collected from a caller, 0 for unlimited",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "min_dtmf": {
                    "default": 3,
                    "description": "How many DTMF characters to collect from a caller before processing the directory",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the directory",
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "sort_by": {
                    "default": "last_name",
                    "description": "What field to sort on in matching documents when a caller enters characters",
                    "enum": [
                        "first_name",
                        "last_name"
                    ],
                    "required": false,
                    "type": "string"
                },
                "users": {
                    "default": [],
                    "description": "The list of users associated with this directory",
                    "items": {
                        "description": "UserId to include in the directory",
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "domain_hosts": {
            "additionalProperties": false,
            "description": "Domain host settings for white-labelling",
            "patternProperties": {
                ".*[\\{]{2}domain[\\}]{2}.*": {
                    "description": "White-label template for hostname",
                    "properties": {
                        "mapping": {
                            "description": "List of hosts or IPs this host should resolve to",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "required": true,
                            "type": "array"
                        },
                        "name": {
                            "description": "Human-friendly name of the Host",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "domains": {
            "description": "Domain settings for white-labelling",
            "properties": {
                "A": {
                    "description": "A records",
                    "required": false,
                    "type": "object"
                },
                "CNAME": {
                    "$ref": "domain_hosts",
                    "description": "CNAME records",
                    "required": false,
                    "type": "object"
                },
                "MX": {
                    "description": "MX records, typically for email servers",
                    "required": false,
                    "type": "object"
                },
                "NAPTR": {
                    "description": "NAPTR records",
                    "required": false,
                    "type": "object"
                },
                "SRV": {
                    "description": "SRV records",
                    "required": false,
                    "type": "object"
                },
                "TXT": {
                    "description": "TXT records",
                    "required": false,
                    "type": "object"
                }
            }
        },
        "faxbox": {
            "description": "FaxBoxes allow configuration of individual fax virtual machines",
            "properties": {
                "attempts": {
                    "default": 0,
                    "description": "The number of attempts made, this will be set by the system and reset automaticly on put/post",
                    "maximum": 4,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "caller_id": {
                    "description": "The Caller-ID-Number",
                    "required": false,
                    "type": "string"
                },
                "caller_name": {
                    "default": "Kazoo Fax Printer",
                    "description": "The Caller-ID-Name",
                    "required": false,
                    "type": "string"
                },
                "custom_smtp_email_address": {
                    "description": "custom smtp address",
                    "required": false,
                    "type": "string"
                },
                "fax_header": {
                    "default": "Kazoo Fax Printer",
                    "description": "The name printed at the top of the fax",
                    "required": false,
                    "type": "string"
                },
                "fax_identity": {
                    "description": "The number printed at the top of the fax",
                    "required": false,
                    "type": "string"
                },
                "fax_timezone": {
                    "description": "The timezone announced",
                    "required": false,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "properties": {
                        "fax_option": {
                            "description": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the faxbox",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "inbound": {
                            "description": "Inbound Status notifications",
                            "properties": {
                                "callback": {
                                    "description": "A URL to send results to",
                                    "properties": {
                                        "method": {
                                            "description": "The http method to use when sending the results",
                                            "enum": [
                                                "post",
                                                "put"
                                            ],
                                            "required": false,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The content-type to use when sending the results",
                                            "enum": [
                                                "json",
                                                "www-url-form-encoded"
                                            ],
                                            "required": false,
                                            "type": "string"
                                        },
                                        "url": {
                                            "description": "The URL to call back with the results",
                                            "pattern": "^https?://",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "email": {
                                    "description": "Inbound Email Notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of email recipent(s)",
                                            "format": "email",
                                            "items": {
                                                "format": "email",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "sms": {
                                    "description": "SMS notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of sms recipent(s)",
                                            "items": {
                                                "required": false,
                                                "type": "string"
                                            },
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "outbound": {
                            "description": "Outbound Status notifications",
                            "properties": {
                                "callback": {
                                    "description": "A URL to send results to",
                                    "properties": {
                                        "method": {
                                            "description": "The http method to use when sending the results",
                                            "enum": [
                                                "post",
                                                "put"
                                            ],
                                            "required": false,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The content-type to use when sending the results",
                                            "enum": [
                                                "json",
                                                "www-url-form-encoded"
                                            ],
                                            "required": false,
                                            "type": "string"
                                        },
                                        "url": {
                                            "description": "The URL to call back with the results",
                                            "pattern": "^https?://",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "email": {
                                    "description": "Email notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of email recipent(s)",
                                            "format": "email",
                                            "items": {
                                                "format": "email",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "sms": {
                                    "description": "SMS notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of sms recipent(s)",
                                            "items": {
                                                "required": false,
                                                "type": "string"
                                            },
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "retries": {
                    "default": 1,
                    "description": "The number of times to retry",
                    "maximum": 4,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "smtp_permission_list": {
                    "default": [],
                    "description": "smtp permission list. accepts regular expressions",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "faxes": {
            "description": "Faxes API allows you to update and access fax jobs for both sending and receiving",
            "properties": {
                "attempts": {
                    "default": 0,
                    "description": "The number of attempts made, this will be set by the system and reset automaticly on put/post",
                    "maximum": 4,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "document": {
                    "description": "Parameters related to the storage of a fax document",
                    "properties": {
                        "content": {
                            "description": "The content provided in the body when fetching for transmission as a post",
                            "maxLength": 256,
                            "required": false,
                            "type": "string"
                        },
                        "content_type": {
                            "description": "The content type header to be used when fetching for transmission as a post",
                            "required": false,
                            "type": "string"
                        },
                        "host": {
                            "description": "The host header to be used when fetching for transmission",
                            "required": false,
                            "type": "string"
                        },
                        "method": {
                            "default": "get",
                            "description": "The method that should be used to reteive the document",
                            "enum": [
                                "get",
                                "post"
                            ],
                            "required": false,
                            "type": "string"
                        },
                        "referer": {
                            "description": "The referer header to be used when fetching for transmission",
                            "required": false,
                            "type": "string"
                        },
                        "url": {
                            "description": "The url of the fax document",
                            "pattern": "^https?://",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "from_name": {
                    "description": "The sender name for the fax",
                    "required": false,
                    "type": "string"
                },
                "from_number": {
                    "description": "The sender number for the fax",
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "email": {
                            "description": "Email notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of email recipent(s)",
                                    "format": "email",
                                    "items": {
                                        "format": "email",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "sms": {
                            "description": "SMS notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of sms recipent(s)",
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "retries": {
                    "default": 1,
                    "description": "The number of times to retry",
                    "maximum": 4,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "to_name": {
                    "description": "The recipient name for the fax",
                    "required": false,
                    "type": "string"
                },
                "to_number": {
                    "description": "The recipient number for the fax",
                    "required": true,
                    "type": "string"
                },
                "tx_result": {
                    "description": "The result of a transmission attempt",
                    "properties": {
                        "error_message": {
                            "default": "",
                            "description": "A description of any error that occured",
                            "required": false,
                            "type": "string"
                        },
                        "fax_bad_rows": {
                            "default": 0,
                            "description": "The number of bad rows",
                            "required": false,
                            "type": "integer"
                        },
                        "fax_error_correction": {
                            "default": false,
                            "description": "True if fax error correction was used",
                            "required": false,
                            "type": "boolean"
                        },
                        "fax_receiver_id": {
                            "default": "",
                            "description": "The receiver id reported by the remote fax device",
                            "required": false,
                            "type": "string"
                        },
                        "fax_speed": {
                            "default": 0,
                            "description": "The speed (Baud-Rate) achieved during transmission",
                            "required": false,
                            "type": "integer"
                        },
                        "pages_sent": {
                            "default": 0,
                            "description": "The number of pages transmitted",
                            "required": false,
                            "type": "integer"
                        },
                        "success": {
                            "default": false,
                            "description": "True if the fax transmission was successful",
                            "required": false,
                            "type": "boolean"
                        },
                        "time_elapsed": {
                            "default": 0,
                            "description": "The amount of time from submition to completion",
                            "required": false,
                            "type": "integer"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "find_numbers": {
            "properties": {
                "country": {
                    "default": "US",
                    "maxLength": 2,
                    "minLength": 2,
                    "required": false,
                    "type": "string"
                },
                "prefix": {
                    "maxLength": 10,
                    "minLength": 3,
                    "required": true,
                    "type": "string"
                },
                "quantity": {
                    "default": 1,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "groups": {
            "description": "Validator for the group",
            "properties": {
                "endpoints": {
                    "default": {},
                    "description": "Endpoints included into group",
                    "required": true,
                    "type": "object"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as music on hold",
                            "maxLength": 128,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the group",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "ips": {
            "description": "IP addresses assigned to the account",
            "properties": {
                "ips": {
                    "description": "List of IP addresses",
                    "items": {
                        "description": "IP address",
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": false,
                    "type": "array"
                }
            }
        },
        "ledgers": {
            "description": "ledgers document",
            "properties": {
                "account": {
                    "description": "Account info",
                    "properties": {
                        "id": {
                            "description": "Account ID",
                            "required": false,
                            "type": "string"
                        },
                        "name": {
                            "description": "Account name",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "amount": {
                    "description": "Ledger amount",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "description": {
                    "description": "Useful description for ledger",
                    "required": false,
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata for ledger document",
                    "required": false,
                    "type": "object"
                },
                "period": {
                    "description": "Period of ledger",
                    "properties": {
                        "end": {
                            "description": "Period end",
                            "required": false,
                            "type": "integer"
                        },
                        "start": {
                            "description": "Period start",
                            "required": false,
                            "type": "integer"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "source": {
                    "description": "Origin of ledger",
                    "properties": {
                        "id": {
                            "description": "Source ID",
                            "required": true,
                            "type": "string"
                        },
                        "service": {
                            "description": "Source service",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "usage": {
                    "description": "Usage for ledger",
                    "properties": {
                        "quantity": {
                            "description": "Usage quantity",
                            "required": true,
                            "type": "integer"
                        },
                        "type": {
                            "description": "Usage type",
                            "required": true,
                            "type": "string"
                        },
                        "unit": {
                            "description": "Usage unit",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "limits": {
            "description": "Limit an account's ability to place concurrent calls using flat rate trunks",
            "properties": {
                "allow_prepay": {
                    "default": true,
                    "description": "Determines if the account would like to allow per-minute calls if they have no available credit",
                    "required": false,
                    "type": "boolean"
                },
                "burst_trunks": {
                    "description": "The number of two-way, flat-rate trunks used only if no other trunks are available",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "calls": {
                    "description": "A hard limit for the total number calls",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "inbound_trunks": {
                    "description": "The number of inbound, flat-rate trunks",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "outbound_trunks": {
                    "description": "The number of outbound, flat-rate trunks",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "resource_consuming_calls": {
                    "description": "A hard limit for the number of resource consuming calls",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "twoway_trunks": {
                    "description": "The number of two-way, flat-rate trunks",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "list_entries": {
            "description": "Schema for a match list entries",
            "properties": {
                "displayname": {
                    "description": "Display name",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "firstname": {
                    "description": "A friendly firstname",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "lastname": {
                    "description": "A friendly lastname",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "list_id": {
                    "description": "List id",
                    "required": true,
                    "type": "string"
                },
                "number": {
                    "description": "Phone number",
                    "required": false,
                    "type": "string"
                },
                "pattern": {
                    "description": "Match pattern",
                    "required": false,
                    "type": "string"
                },
                "profile": {
                    "$ref": "profile",
                    "default": {},
                    "description": "Profile data",
                    "required": false,
                    "type": "object"
                },
                "type": {
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "lists": {
            "description": "Schema for a match list",
            "properties": {
                "description": {
                    "description": "A friendly list description",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly match list name",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "org": {
                    "description": "Full legal name of the organization",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "mailbox_message": {
            "description": "Schema for mailbox message",
            "properties": {
                "call_id": {
                    "description": "The SIP call-id",
                    "required": false,
                    "type": "string"
                },
                "caller_id_name": {
                    "description": "The reported caller id name",
                    "maxLength": 35,
                    "required": false,
                    "type": "string"
                },
                "caller_id_number": {
                    "description": "The reported caller id number",
                    "maxLength": 35,
                    "required": false,
                    "type": "string"
                },
                "folder": {
                    "description": "The folder the message belongs to",
                    "enum": [
                        "deleted",
                        "saved",
                        "new"
                    ],
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "The SIP from header",
                    "required": false,
                    "type": "string"
                },
                "length": {
                    "required": false,
                    "type": "integer"
                },
                "media_id": {
                    "description": "The ID of the message media object",
                    "maxLength": 39,
                    "minLength": 39,
                    "required": true,
                    "type": "string"
                },
                "timestamp": {
                    "description": "The UTC timestamp, in gregorian seconds, that the message was left on",
                    "required": false,
                    "type": "integer"
                },
                "to": {
                    "description": "The SIP to header",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "media": {
            "description": "Schema for media",
            "properties": {
                "content_length": {
                    "description": "Length, in bytes, of the file",
                    "maximum": 5242880,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "content_type": {
                    "description": "Used to override the automatic upload type",
                    "enum": [
                        "audio/mp3",
                        "audio/mpeg",
                        "audio/mpeg3",
                        "audio/x-wav",
                        "audio/wav",
                        "audio/ogg",
                        "video/x-flv",
                        "video/h264",
                        "video/mpeg",
                        "video/quicktime",
                        "video/mp4",
                        "video/webm"
                    ],
                    "required": false,
                    "type": "string"
                },
                "description": {
                    "description": "A breif description of the media update, usally the original file name",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "language": {
                    "default": "en-us",
                    "description": "The language of the media file or text",
                    "required": false,
                    "type": "string"
                },
                "media_source": {
                    "default": "upload",
                    "description": "Defines the source of the media",
                    "enum": [
                        "recording",
                        "upload",
                        "tts"
                    ],
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the media",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "prompt_id": {
                    "description": "The prompt this media file represents",
                    "required": false,
                    "type": "string"
                },
                "source_id": {
                    "description": "If the media was generated from a callflow module, this is ID of the properties",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                },
                "source_type": {
                    "description": "If the media was generated from a callflow module, this is the module name",
                    "required": false,
                    "type": "string"
                },
                "streamable": {
                    "default": true,
                    "description": "Determines if the media can be streamed",
                    "required": false,
                    "type": "boolean"
                },
                "tts": {
                    "default": {},
                    "description": "Text-to-speech options used to create audio files from text",
                    "properties": {
                        "text": {
                            "description": "The text to be converted into audio",
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        },
                        "voice": {
                            "default": "female/en-US",
                            "description": "The voice to be used during the conversion",
                            "enum": [
                                "female/en-US",
                                "male/en-US",
                                "female/en-CA",
                                "female/en-AU",
                                "female/en-GB",
                                "male/en-GB",
                                "female/es-US",
                                "male/es-US",
                                "female/us-US",
                                "female/zh-CN",
                                "male/zh-CN",
                                "female/zh-HK",
                                "female/zh-TW",
                                "female/ja-JP",
                                "male/ja-JP",
                                "female/ko-KR",
                                "male/ko-KR",
                                "female/da-DK",
                                "female/de-DE",
                                "male/de-DE",
                                "female/ca-ES",
                                "female/es-ES",
                                "male/es-ES",
                                "female/fi-FI",
                                "female/fr-CA",
                                "male/fr-CA",
                                "female/fr-FR",
                                "male/fr-FR",
                                "female/it-IT",
                                "male/it-IT",
                                "female/nb-NO",
                                "female/nl-NL",
                                "female/pl-PL",
                                "female/pt-BR",
                                "female/pt-PT",
                                "male/pt-PT",
                                "female/ru-RU",
                                "male/ru-RU",
                                "female/sv-SE",
                                "female/hu-HU",
                                "female/cs-CZ",
                                "female/tr-TR",
                                "male/tr-TR",
                                "male/ru-RU/Vladimir",
                                "female/ru-RU/Julia",
                                "female/ru-RU/Anna",
                                "female/ru-RU/Viktoria",
                                "male/ru-RU/Alexander",
                                "female/ru-RU/Maria",
                                "female/ru-RU/Lidia"
                            ],
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "menus": {
            "description": "Schema for a menus",
            "properties": {
                "allow_record_from_offnet": {
                    "default": false,
                    "description": "Determines if the record pin can be used by external calls",
                    "required": false,
                    "type": "boolean"
                },
                "hunt": {
                    "default": true,
                    "description": "Determines if the callers can dial internal extensions directly",
                    "required": false,
                    "type": "boolean"
                },
                "hunt_allow": {
                    "description": "A regular expression that an extension the caller dialed must match to be allowed to continue",
                    "maxLength": 256,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "hunt_deny": {
                    "description": "A regular expression that if matched does not allow the caller to dial directly",
                    "maxLength": 256,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "The amount of time (in milliseconds) to wait for the caller to press the next digit after pressing a digit",
                    "maximum": 10000,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "max_extension_length": {
                    "default": 4,
                    "description": "The maximum number of digits that can be collected",
                    "maximum": 6,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "media": {
                    "default": {},
                    "description": "The media (prompt) parameters",
                    "properties": {
                        "exit_media": {
                            "description": "When a call is transferred from the menu after all retries exhausted this media can be played (prior to transfer if enabled)",
                            "maxLength": 64,
                            "minLength": 3,
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        },
                        "greeting": {
                            "description": "The ID of a media object that should be used as the menu greeting",
                            "maxLength": 64,
                            "minLength": 3,
                            "required": false,
                            "type": "string"
                        },
                        "invalid_media": {
                            "description": "When the collected digits dont result in a match or hunt this media can be played",
                            "maxLength": 64,
                            "minLength": 3,
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        },
                        "transfer_media": {
                            "description": "When a call is transferred from the menu, either after all retries exhausted or a successful hunt, this media can be played",
                            "maxLength": 64,
                            "minLength": 3,
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the menu",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "record_pin": {
                    "description": "The pin number used to record the menu prompt",
                    "maxLength": 6,
                    "minLength": 3,
                    "required": false,
                    "type": "string"
                },
                "retries": {
                    "default": 3,
                    "description": "The number of times a menu should be played until a valid entry is collected",
                    "maximum": 10,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "timeout": {
                    "description": "The amount of time (in milliseconds) to wait for the caller to beging entering digits",
                    "maximum": 60000,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "metaflow": {
            "description": "A metaflow node defines a module to execute, data to provide to that module, and one or more children to branch to",
            "properties": {
                "children": {
                    "description": "Children metaflows",
                    "patternProperties": {
                        ".+": {
                            "$ref": "metaflow"
                        }
                    },
                    "type": "object"
                },
                "data": {
                    "description": "The data/arguments of the metaflow module",
                    "kazoo-validation": true,
                    "type": "object"
                },
                "module": {
                    "description": "The name of the metaflow module to execute at this node",
                    "kazoo-validation": true,
                    "maxLength": 64,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "module"
            ],
            "type": "object"
        },
        "metaflow.audio_level": {
            "description": "audio_level metaflow schema",
            "properties": {
                "action": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ],
            "type": "object"
        },
        "metaflow.break": {
            "additionalProperties": false,
            "description": "break metaflow schema",
            "properties": {},
            "type": "object"
        },
        "metaflow.callflow": {
            "description": "callflow metaflow schema",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "metaflow.hangup": {
            "description": "hangup metaflow schema",
            "properties": {},
            "type": "object"
        },
        "metaflow.hold": {
            "description": "hold metaflow schema",
            "properties": {
                "moh_aleg": {
                    "type": "string"
                },
                "moh_bleg": {
                    "type": "string"
                },
                "unhold_key": {
                    "default": "1",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "metaflow.hold_control": {
            "description": "hold_control metaflow schema",
            "properties": {
                "action": {
                    "default": "toggle",
                    "enum": [
                        "hold",
                        "unhold",
                        "toggle"
                    ]
                }
            },
            "type": "object"
        },
        "metaflow.intercept": {
            "description": "intercept metaflow schema",
            "properties": {
                "auto_answer": {
                    "default": false,
                    "type": "boolean"
                },
                "target_id": {
                    "type": "string"
                },
                "target_type": {
                    "enum": [
                        "device",
                        "user",
                        "number"
                    ]
                },
                "unbridged_only": {
                    "default": true,
                    "type": "boolean"
                }
            },
            "required": [
                "target_type",
                "target_id"
            ],
            "type": "object"
        },
        "metaflow.move": {
            "description": "move metaflow schema",
            "properties": {
                "auto_answer": {
                    "default": false,
                    "type": "boolean"
                },
                "device_id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "metaflow.play": {
            "description": "play metaflow schema",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leg": {
                    "default": "both",
                    "enum": [
                        "both",
                        "self",
                        "peer"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "metaflow.record_call": {
            "description": "record_call metaflow schema",
            "properties": {
                "action": {
                    "default": "toggle",
                    "enum": [
                        "start",
                        "stop",
                        "toggle"
                    ]
                },
                "format": {
                    "type": "string"
                },
                "media_name": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ],
            "type": "object"
        },
        "metaflow.resume": {
            "description": "resume metaflow schema",
            "properties": {},
            "type": "object"
        },
        "metaflow.say": {
            "description": "say metaflow schema",
            "properties": {
                "language": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "text"
            ],
            "type": "object"
        },
        "metaflow.sound_touch": {
            "description": "sound_touch metaflow schema",
            "properties": {
                "action": {
                    "enum": [
                        "start",
                        "stop"
                    ]
                },
                "adjust_in_octaves": {
                    "type": "integer"
                },
                "adjust_in_semitones": {
                    "type": "integer"
                },
                "hook_dtmf": {
                    "default": false,
                    "type": "boolean"
                },
                "pitch": {
                    "type": "integer"
                },
                "rate": {
                    "type": "integer"
                },
                "sending_leg": {
                    "default": false,
                    "type": "boolean"
                },
                "tempo": {
                    "type": "integer"
                }
            },
            "required": [
                "action"
            ],
            "type": "object"
        },
        "metaflow.transfer": {
            "description": "transfer metaflow schema",
            "properties": {
                "Transfer-Type": {
                    "default": "attended",
                    "enum": [
                        "attended",
                        "blind"
                    ]
                },
                "captures": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "metaflow.tts": {
            "description": "tts metaflow schema",
            "properties": {
                "engine": {
                    "default": "flite",
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "leg": {
                    "default": "self",
                    "enum": [
                        "self",
                        "peer"
                    ]
                },
                "terminators": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "voice": {
                    "default": "female",
                    "type": "string"
                }
            },
            "required": [
                "text"
            ],
            "type": "object"
        },
        "metaflows": {
            "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)",
            "properties": {
                "binding_digit": {
                    "default": "*",
                    "description": "What DTMF will trigger the collection and analysis of the subsequent DTMF sequence",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "0",
                        "*",
                        "#"
                    ],
                    "maxLength": 1,
                    "minLength": 1,
                    "type": "string"
                },
                "digit_timeout": {
                    "description": "How long to wait between DTMF presses before processing the collected sequence (milliseconds)",
                    "minimum": 0,
                    "type": "integer"
                },
                "listen_on": {
                    "description": "Which leg(s) of the call to listen for DTMF",
                    "enum": [
                        "both",
                        "self",
                        "peer"
                    ],
                    "type": "string"
                },
                "numbers": {
                    "additionalProperties": false,
                    "description": "A list of static numbers with their flows",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "metaflow"
                        }
                    },
                    "type": "object"
                },
                "patterns": {
                    "additionalProperties": false,
                    "description": "A list of patterns with their flows",
                    "patternProperties": {
                        ".+": {
                            "$ref": "metaflow"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "notifications": {
            "description": "Notifications templates",
            "properties": {
                "bcc": {
                    "description": "Bcc email field",
                    "properties": {
                        "email_addresses": {
                            "description": "BCC Email Addresses",
                            "itmes": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "maxLength": 253,
                            "minLength": 2,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "category": {
                    "description": "Category of the template, for grouping purposes",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "cc": {
                    "description": "CC email field",
                    "properties": {
                        "email_addresses": {
                            "description": "CC Email Addresses",
                            "items": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Enable notification",
                    "required": false,
                    "type": "boolean"
                },
                "friendly_name": {
                    "description": "Friendly name of the template",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "From: email address",
                    "format": "email",
                    "required": true,
                    "type": "string"
                },
                "macros": {
                    "default": {},
                    "properties": {},
                    "required": false,
                    "type": "object"
                },
                "reply_to": {
                    "description": "Reply-To: email address",
                    "format": "email",
                    "required": false,
                    "type": "string"
                },
                "subject": {
                    "description": "Email subject",
                    "maxLength": 200,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "template_charset": {
                    "default": "utf-8",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "to": {
                    "description": "To email field",
                    "properties": {
                        "email_addresses": {
                            "items": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "maxLength": 253,
                            "minLength": 2,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "notify.callback": {
            "description": "Schema for a callback options",
            "properties": {
                "attempts": {
                    "description": "How many attempts without answer will system do",
                    "required": false,
                    "type": "integer"
                },
                "disabled": {
                    "description": "Determines if the system will call to callback number",
                    "required": false,
                    "type": "boolean"
                },
                "interval_s": {
                    "description": "How long will system wait between call back notification attempts",
                    "required": false,
                    "type": "integer"
                },
                "number": {
                    "description": "Number for callback notifications about new messages",
                    "required": false,
                    "type": "string"
                },
                "schedule": {
                    "description": "Schedules interval between callbacks",
                    "items": {
                        "description": "callbacks interval",
                        "type": "integer"
                    },
                    "required": false,
                    "type": "array"
                },
                "timeout_s": {
                    "description": "How long will system wait for answer to callback",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "phone_numbers": {
            "description": "Schema for a number",
            "properties": {
                "carrier_name": {
                    "maxLength": 30,
                    "minLength": 1,
                    "type": "string"
                },
                "cnam": {
                    "properties": {
                        "display_name": {
                            "maxLength": 15,
                            "minLength": 1,
                            "type": "string"
                        },
                        "inbound_lookup": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "e911": {
                    "properties": {
                        "activated_time": {
                            "description": "The time stamp e911 was provisioned",
                            "type": "string"
                        },
                        "caller_name": {
                            "description": "The name that will show to emergency services",
                            "minLength": 3,
                            "type": "string"
                        },
                        "extended_address": {
                            "description": "The suit/floor/apt. address where the number is in service",
                            "type": "string"
                        },
                        "latitude": {
                            "description": "The e911 provisioning system calculated service address latitude",
                            "type": "string"
                        },
                        "legacy_data": {
                            "description": "Legacy E911 information",
                            "properties": {
                                "house_number": {
                                    "description": "The name that will show to emergency services",
                                    "type": "string"
                                },
                                "predirectional": {
                                    "description": "The name that will show to emergency services",
                                    "type": "string"
                                },
                                "streetname": {
                                    "description": "The name that will show to emergency services",
                                    "type": "string"
                                },
                                "suite": {
                                    "description": "The name that will show to emergency services",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "locality": {
                            "description": "The locality (city) where the number is in service",
                            "type": "string"
                        },
                        "location_id": {
                            "description": "The e911 provisioning system internal id for this service address",
                            "type": "string"
                        },
                        "longitude": {
                            "description": "The e911 provisioning system calculated service address longitude",
                            "type": "string"
                        },
                        "plus_four": {
                            "description": "The extended zip/postal code where the number is in service",
                            "type": "string"
                        },
                        "postal_code": {
                            "description": "The zip/postal code where the number is in service",
                            "type": "string"
                        },
                        "region": {
                            "description": "The region (state) where the number is in service",
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string"
                        },
                        "status": {
                            "description": "The e911 provisioning system status for this service address",
                            "enum": [
                                "INVALID",
                                "GEOCODED",
                                "PROVISIONED",
                                "REMOVED",
                                "ERROR"
                            ],
                            "type": "string"
                        },
                        "street_address": {
                            "description": "The street address where the number is in service",
                            "type": "string"
                        }
                    },
                    "required": [
                        "locality",
                        "postal_code",
                        "region",
                        "street_address"
                    ],
                    "type": "object"
                },
                "porting": {
                    "description": "Porting (in) information for the phone number",
                    "properties": {
                        "billing_account_id": {
                            "description": "The account id the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_extended_address": {
                            "description": "The suit/floor/apt. address the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_locality": {
                            "description": "The locality (city) the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_name": {
                            "description": "The name or company name the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_postal_code": {
                            "description": "The zip/postal code the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_region": {
                            "description": "The region (state) the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_street_address": {
                            "description": "The street address the losing carrier has on file",
                            "type": "string"
                        },
                        "billing_telephone_number": {
                            "description": "The BTN of the account the number belongs to",
                            "type": "string"
                        },
                        "comments": {
                            "description": "An array of comments",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "customer_contact": {
                            "description": "The phone number that can be used to contact the owner of the number",
                            "type": "string"
                        },
                        "port_id": {
                            "description": "The id of the port request",
                            "type": "string"
                        },
                        "requested_port_date": {
                            "description": "The requested port date",
                            "type": "string"
                        },
                        "service_provider": {
                            "description": "The name of the losing carrier",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "port_requests": {
            "description": "Schema for a port request",
            "properties": {
                "bill": {
                    "description": "Billing information of the losing carrier",
                    "properties": {
                        "extended_address": {
                            "description": "The suite/floor/apt of the billing address the losing carrier has on record",
                            "required": false,
                            "type": "string"
                        },
                        "locality": {
                            "description": "The locality (city) of the billing address the losing carrier has on record",
                            "required": false,
                            "type": "string"
                        },
                        "name": {
                            "description": "The losing carrier billing/account name",
                            "required": false,
                            "type": "string"
                        },
                        "postal_code": {
                            "description": "The zip/postal code of the billing address the losing carrier has on record",
                            "required": false,
                            "type": "string"
                        },
                        "region": {
                            "description": "The region (state) of the billing address the losing carrier has on record",
                            "required": false,
                            "type": "string"
                        },
                        "street_address": {
                            "description": "The address of the billing address the losing carrier has on record",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "comments": {
                    "description": "The history of comments made on a port request",
                    "items": {
                        "required": false,
                        "type": "object"
                    },
                    "required": false,
                    "type": "array"
                },
                "name": {
                    "description": "A friendly name for the port request",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "email": {
                            "description": "Inbound Email Notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of email recipent(s)",
                                    "format": "email",
                                    "items": {
                                        "format": "email",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "numbers": {
                    "description": "The numbers to port in",
                    "minProperties": 1,
                    "patternProperties": {
                        "\\+?[0-9]+": {
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "port_state": {
                    "default": "unconfirmed",
                    "description": "What state the port request is currently in",
                    "enum": [
                        "unconfirmed",
                        "pending",
                        "submitted",
                        "scheduled",
                        "completed",
                        "rejected",
                        "canceled"
                    ],
                    "required": false,
                    "type": "string"
                },
                "scheduled_date": {
                    "description": "Requested scheduled date in gregorain timestamp",
                    "required": false,
                    "type": "integer"
                },
                "transfer_date": {
                    "description": "Requested transfer date in gregorain timestamp",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "profile": {
            "description": "Defines user extended properties",
            "properties": {
                "addresses": {
                    "description": "To specify the components of the addresses",
                    "items": {
                        "properties": {
                            "address": {
                                "description": "To specify the address",
                                "required": false,
                                "type": "string"
                            },
                            "types": {
                                "description": "To specify types of the address",
                                "items": {
                                    "enum": [
                                        "dom",
                                        "postal",
                                        "intl",
                                        "parcel",
                                        "home",
                                        "work",
                                        "pref"
                                    ]
                                },
                                "required": false,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "required": false,
                    "type": "array"
                },
                "assistant": {
                    "description": "To specify the user's assistant",
                    "required": false,
                    "type": "string"
                },
                "birthday": {
                    "description": "To specify the birth date of the user",
                    "required": false,
                    "type": "string"
                },
                "nicknames": {
                    "description": "To specify the text corresponding to the nickname of the user",
                    "items": {
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "note": {
                    "description": "To specify supplemental information or a comment that is associated with the user",
                    "required": false,
                    "type": "string"
                },
                "role": {
                    "description": "To specify the function or part played in a particular situation by the user",
                    "required": false,
                    "type": "string"
                },
                "sort-string": {
                    "description": "To specify the family name or given name text to be used for national-language-specific sorting of the FN and N types",
                    "required": false,
                    "type": "string"
                },
                "title": {
                    "description": "To specify the position or job of the user",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "provisioner_v5": {
            "description": "Provisioner schema",
            "properties": {
                "brand": {
                    "default": "",
                    "description": "Brand of the phone",
                    "required": true,
                    "type": "string"
                },
                "family": {
                    "default": "",
                    "description": "Family name of the phone",
                    "required": true,
                    "type": "string"
                },
                "model": {
                    "default": "",
                    "description": "Model name of the phone",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Name of the phone",
                    "required": false,
                    "type": "string"
                },
                "settings": {
                    "description": "Phone's settings",
                    "properties": {
                        "codecs": {
                            "description": "Phone's codecs",
                            "items": {
                                "properties": {
                                    "audio": {
                                        "description": "Audio codecs",
                                        "properties": {
                                            "primary_codec": {
                                                "description": "Primary codec",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "secondary_codec": {
                                                "description": "Secondary codec",
                                                "required": false,
                                                "type": "string"
                                            }
                                        },
                                        "required": false,
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "object"
                        },
                        "datetime": {
                            "description": "Date and time settings",
                            "properties": {
                                "time": {
                                    "description": "Time settings",
                                    "properties": {
                                        "timezone": {
                                            "description": "Phone's timezone",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "lines": {
                            "description": "Phone lines",
                            "minItems": 1,
                            "properties": {
                                "properties": {
                                    "advanced": {
                                        "description": "Advanced settings",
                                        "properties": {
                                            "expire": {
                                                "default": 360,
                                                "required": false,
                                                "type": "integer"
                                            },
                                            "srtp": {
                                                "default": false,
                                                "required": false,
                                                "type": "boolean"
                                            }
                                        },
                                        "required": false,
                                        "type": "object"
                                    },
                                    "basic": {
                                        "description": "Basic settings",
                                        "properties": {
                                            "display_name": {
                                                "description": "Friendly name for phone",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "enabled": {
                                                "default": true,
                                                "description": "Enable line",
                                                "required": false,
                                                "type": "boolean"
                                            }
                                        },
                                        "required": true,
                                        "type": "object"
                                    },
                                    "sip": {
                                        "description": "Sip settings",
                                        "properties": {
                                            "password": {
                                                "description": "Line's password",
                                                "required": true,
                                                "type": "string"
                                            },
                                            "realm": {
                                                "description": "Line's Sip realm",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "username": {
                                                "description": "Line's username",
                                                "required": true,
                                                "type": "string"
                                            }
                                        },
                                        "required": true,
                                        "type": "object"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "queue_update": {
            "description": "Schema for queue update request",
            "properties": {
                "action": {
                    "description": "Action to perform",
                    "enum": [
                        "login",
                        "logout"
                    ],
                    "required": true,
                    "type": "string"
                },
                "queue_id": {
                    "description": "Queue Identifier",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "queues": {
            "description": "Call Queues - FIFO call queues for serializing callers connecting to agents",
            "properties": {
                "agent_ring_timeout": {
                    "default": 15,
                    "description": "In seconds, how long to ring an agent before progressing to the next agent available",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "agent_wrapup_time": {
                    "default": 0,
                    "description": "Pre-defined wait period applied after an agent handles a customer call",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "announce": {
                    "description": "Media ID (or appropriate media URI) of media to play when caller is about to be connected.",
                    "required": false,
                    "type": "string"
                },
                "caller_exit_key": {
                    "default": "#",
                    "description": "Key caller can press while on hold to exit the queue and continue in the callflow",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "*",
                        "0",
                        "#"
                    ],
                    "required": false,
                    "type": "string"
                },
                "cdr_url": {
                    "description": "An optional HTTP URL to POST the CDR",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                },
                "connection_timeout": {
                    "default": 3600,
                    "description": "In seconds, how long to try to connect the caller before progressing past the queue callflow action",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "enter_when_empty": {
                    "default": true,
                    "description": "Allows a caller to enter a queue and wait when no agents are available",
                    "required": false,
                    "type": "boolean"
                },
                "max_priority": {
                    "description": "Maximum possible priority level queue will support. Can not be redefined for existing queue.",
                    "maximum": 255,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "max_queue_size": {
                    "default": 0,
                    "description": "How many callers are allowed to wait on hold in the queue (0 for no limit)",
                    "required": false,
                    "type": "integer"
                },
                "moh": {
                    "description": "Media ID (or appropriate media URI) of media to play while caller is on hold.",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the queue",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "record_caller": {
                    "default": false,
                    "description": "When enabled, a caller's audio will be recorded",
                    "required": false,
                    "type": "boolean"
                },
                "recording_url": {
                    "description": "An optional HTTP URL to PUT the call recording after the call ends (and should respond to GET for retrieving the audio data)",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                },
                "ring_simultaneously": {
                    "default": 1,
                    "description": "The number of agents to try in parallel when connecting a caller",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "strategy": {
                    "default": "round_robin",
                    "description": "The queue strategy for connecting agents to callers",
                    "enum": [
                        "round_robin",
                        "most_idle"
                    ],
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "rates": {
            "description": "Defines a rate for a given prefix",
            "properties": {
                "account_id": {
                    "description": "Reseller's account ID",
                    "required": false,
                    "type": "string"
                },
                "carrier": {
                    "description": "Friendly name for the carrier providing this rate",
                    "required": false,
                    "type": "string"
                },
                "description": {
                    "description": "Friendly description of the rate",
                    "required": false,
                    "type": "string"
                },
                "direction": {
                    "description": "Apply this rate based on the direction of the call (relative to FreeSWITCH)",
                    "items": {
                        "enum": [
                            "inbound",
                            "outbound"
                        ],
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "internal_rate_cost": {
                    "description": "The per-min rate charged by the upstream provider",
                    "minimum": 0,
                    "required": false,
                    "type": "number"
                },
                "iso_country_code": {
                    "description": "Country code this rate applies to",
                    "required": false,
                    "type": "string"
                },
                "options": {
                    "description": "List of options this rate is good for, to be matched against a customer's options",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "prefix": {
                    "description": "E.164 prefix (ignoring the +)",
                    "required": true,
                    "type": "integer"
                },
                "rate_cost": {
                    "description": "The per-min rate charged to the downstream customer",
                    "minimum": 0,
                    "required": true,
                    "type": "number"
                },
                "rate_increment": {
                    "description": "The time slice, in seconds, to bill in.",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "rate_minimum": {
                    "description": "The minimum time slice, in seconds to bill a call",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "rate_name": {
                    "description": "Friendly name of the rate",
                    "required": false,
                    "type": "string"
                },
                "rate_nocharge_time": {
                    "description": "If the call duration is shorter than this threshold (seconds), the call is not billed",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "rate_surcharge": {
                    "description": "The upfront cost of connecting the call",
                    "minimum": 0,
                    "required": false,
                    "type": "number"
                },
                "rate_version": {
                    "description": "Rate version",
                    "required": false,
                    "type": "string"
                },
                "ratedeck_id": {
                    "description": "ID of the ratedeck this rate belongs to",
                    "required": false,
                    "type": "string"
                },
                "routes": {
                    "description": "List of regexs that match valid DIDs for this rate",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "weight": {
                    "description": "Ordering against other rates, 1 being most preferred, 100 being least preferred",
                    "maximum": 100,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "resource_jobs": {
            "description": "Schema for resource jobs (bulk number uploads)",
            "properties": {
                "name": {
                    "description": "A friendly name for the job, if you like",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "numbers": {
                    "description": "The listing of numbers to import to the account",
                    "items": {
                        "description": "The number to import",
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "resource_id": {
                    "description": "The Resource ID the numbers are coming from",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "resource_selectors": {
            "description": "Schema for resource selector document",
            "properties": {
                "name": {
                    "description": "Selector name",
                    "required": true,
                    "type": "string"
                },
                "resource": {
                    "description": "Resource ID",
                    "required": true,
                    "type": "string"
                },
                "selector": {
                    "description": "Selector data",
                    "required": true,
                    "type": "string"
                },
                "start_time": {
                    "description": "Start time (gregorian seconds)",
                    "required": false,
                    "type": "integer"
                },
                "stop_time": {
                    "description": "Stop time (gregorian seconds)",
                    "required": false,
                    "type": "integer"
                },
                "value": {
                    "description": "Extra selector data",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "resource_selectors.rules": {
            "default": {},
            "description": "Schema for resource selector rules",
            "required": true,
            "type": "object"
        },
        "resources": {
            "description": "Schema for resources",
            "properties": {
                "emergency": {
                    "default": false,
                    "description": "Determines if the resource represents emergency services",
                    "required": false,
                    "type": "boolean"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the resource is currently enabled",
                    "required": false,
                    "type": "boolean"
                },
                "flags": {
                    "default": [],
                    "description": "A list of flags that can be provided on the request and must match for the resource to be eligible",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "format_from_uri": {
                    "description": "When set to true requests to this resource will have a re-formated SIP From Header",
                    "required": false,
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": "When formating SIP From on outbound requests this can be used to override the realm",
                    "required": false,
                    "type": "string"
                },
                "gateways": {
                    "description": "A list of gateways avaliable for this resource",
                    "items": {
                        "default": {},
                        "properties": {
                            "bypass_media": {
                                "description": "The resource gateway bypass media mode",
                                "required": false,
                                "type": "boolean"
                            },
                            "caller_id_type": {
                                "description": "The type of caller id to use",
                                "enum": [
                                    "internal",
                                    "external",
                                    "emergency"
                                ],
                                "required": false,
                                "type": "string"
                            },
                            "channel_selection": {
                                "default": "ascending",
                                "description": "Automatic selection of the channel within the span: ascending starts at 1 and moves up; descending is the opposite",
                                "enum": [
                                    "ascending",
                                    "descending"
                                ],
                                "required": false,
                                "type": "string"
                            },
                            "codecs": {
                                "description": "A list of single list codecs supported by this gateway (to support backward compatibilty)",
                                "items": {
                                    "enum": [
                                        "G729",
                                        "PCMU",
                                        "PCMA",
                                        "G722_16",
                                        "G722_32",
                                        "CELT_48",
                                        "CELT_64",
                                        "Speex",
                                        "GSM",
                                        "OPUS",
                                        "H261",
                                        "H263",
                                        "H264",
                                        "VP8"
                                    ],
                                    "type": "string"
                                },
                                "required": false,
                                "type": "array",
                                "uniqueItems": true
                            },
                            "custom_sip_headers": {
                                "default": {},
                                "required": false,
                                "type": "object"
                            },
                            "custom_sip_interface": {
                                "description": "The name of a custom SIP interface",
                                "required": false,
                                "type": "string"
                            },
                            "enabled": {
                                "default": true,
                                "description": "Determines if the resource gateway is currently enabled",
                                "required": false,
                                "type": "boolean"
                            },
                            "endpoint_type": {
                                "default": "sip",
                                "description": "What type of endpoint is this gateway",
                                "enum": [
                                    "sip",
                                    "freetdm",
                                    "skype",
                                    "amqp"
                                ],
                                "required": false,
                                "type": "string"
                            },
                            "force_port": {
                                "default": false,
                                "description": "Allow request only from this port",
                                "required": false,
                                "type": "boolean"
                            },
                            "format_from_uri": {
                                "description": "When set to true requests to this resource gateway will have a re-formated SIP From Header",
                                "required": false,
                                "type": "boolean"
                            },
                            "from_uri_realm": {
                                "description": "When formating SIP From on outbound requests this can be used to override the realm",
                                "required": false,
                                "type": "string"
                            },
                            "invite_format": {
                                "default": "route",
                                "description": "The format of the DID needed by the underlying hardware/gateway",
                                "enum": [
                                    "route",
                                    "username",
                                    "e164",
                                    "npan",
                                    "1npan"
                                ],
                                "required": false,
                                "type": "string"
                            },
                            "media": {
                                "description": "The media parameters for the resource gateway",
                                "properties": {
                                    "fax_option": {
                                        "description": "Is T.38 Supported?",
                                        "required": false,
                                        "type": "boolean"
                                    }
                                },
                                "required": false,
                                "type": "object"
                            },
                            "password": {
                                "description": "SIP authentication password",
                                "maxLength": 32,
                                "required": false,
                                "type": "string"
                            },
                            "port": {
                                "default": 5060,
                                "description": "This resource gateway port",
                                "required": false,
                                "type": "integer"
                            },
                            "prefix": {
                                "description": "A string to prepend to the dialed number or capture group of the matching rule",
                                "maxLength": 64,
                                "required": false,
                                "type": "string"
                            },
                            "progress_timeout": {
                                "description": "The progress timeout to apply to the resource gateway",
                                "required": false,
                                "type": "integer"
                            },
                            "realm": {
                                "description": "This resource gateway authentication realm",
                                "maxLength": 64,
                                "required": false,
                                "type": "string"
                            },
                            "route": {
                                "description": "A staticly configured SIP URI to route all call to",
                                "required": false,
                                "type": "string"
                            },
                            "server": {
                                "description": "This resource gateway server",
                                "maxLength": 128,
                                "minLength": 1,
                                "required": true,
                                "type": "string"
                            },
                            "skype_interface": {
                                "description": "The name of the Skype interface to route the call over",
                                "required": false,
                                "type": "string"
                            },
                            "skype_rr": {
                                "default": true,
                                "description": "Determines whether to round-robin calls amongst all interfaces (overrides \"skype_interface\" setting)",
                                "required": false,
                                "type": "boolean"
                            },
                            "span": {
                                "description": "The identity of the hardware on the media server",
                                "required": false,
                                "type": "string"
                            },
                            "suffix": {
                                "description": "A string to append to the dialed number or capture group of the matching rule",
                                "maxLength": 64,
                                "required": false,
                                "type": "string"
                            },
                            "username": {
                                "description": "SIP authentication username",
                                "maxLength": 32,
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "required": true,
                    "type": "array"
                },
                "grace_period": {
                    "default": 5,
                    "description": "The amount of time, in seconds, to wait before starting another resource",
                    "maximum": 20,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "media": {
                    "default": {},
                    "description": "The default resouce media parameters applied if not present to all specified gateways",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The default audio media parameters",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of default codecs to use",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "required": false,
                            "type": "boolean"
                        },
                        "fax_option": {
                            "description": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "video": {
                            "default": {},
                            "description": "The default video media parameters",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of default codecs to use",
                                    "items": {
                                        "enum": [
                                            "H261",
                                            "H263",
                                            "H264",
                                            "VP8"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the resource",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "require_flags": {
                    "description": "When set to true this resource is ignored if the request does not specify outbound flags",
                    "required": false,
                    "type": "boolean"
                },
                "rules": {
                    "default": [],
                    "description": "A list of regular expressions of which one must match for the rule to be eligible, they can optionally contain capture groups",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "weight_cost": {
                    "default": 50,
                    "description": "A value between 0 and 100 that determines the order of resources when multiple can be used",
                    "maximum": 100,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "service_plan": {
            "description": "Describes a service plan",
            "patternProperties": {
                ".+": {
                    "$ref": "service_plan.category",
                    "description": "Category name",
                    "type": "object"
                }
            }
        },
        "service_plan.category": {
            "description": "Describes a service plan category",
            "patternProperties": {
                ".+": {
                    "$ref": "service_plan.item",
                    "description": "Item name",
                    "type": "object"
                }
            },
            "properties": {
                "_all": {
                    "$ref": "service_plan.item",
                    "description": "Applies item rules to any item in this category",
                    "properties": {
                        "exceptions": {
                            "description": "Items that are not included in this item plan",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "service_plan.item": {
            "description": "Describes a service plan item",
            "properties": {
                "activation_charge": {
                    "description": "What to charge when activating an Item",
                    "type": "float"
                },
                "as": {
                    "description": "Count Item as if it was another Item",
                    "type": "string"
                },
                "cascade": {
                    "description": "Whether to count quantities among all sub-accounts or just the account",
                    "type": "boolean"
                },
                "cumulative_discount": {
                    "description": "Whether to give a discount based on quatities of the account and all sub-accounts",
                    "type": "boolean"
                },
                "cumulative_discount_rate": {
                    "description": "How much of a discount to apply",
                    "type": "float"
                },
                "discounts": {
                    "properties": {
                        "cumulative": {
                            "properties": {
                                "maximum": {
                                    "description": "The most number of Items to apply discount to",
                                    "type": "integer"
                                },
                                "rate": {
                                    "description": "The discount to apply, up to maximum Items (if applicable)",
                                    "type": "float"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "minimum": {
                    "description": "The minimum quantity to charge for, if 'quantity' is less than 'minimum'",
                    "type": "integer"
                },
                "name": {
                    "description": "Friendly name for this Item",
                    "type": "string"
                },
                "quantity": {
                    "description": "How many of the item are allowed",
                    "type": "integer"
                },
                "rate": {
                    "description": "How much is the item billed, per-item",
                    "type": "float"
                },
                "rates": {
                    "description": "Tiers of rates based on quantities",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "description": "The rate to charge when under the quantity indicated in the key",
                            "type": "float"
                        }
                    },
                    "type": "object"
                },
                "single_discount": {
                    "description": "Whether to give a discount to the account",
                    "type": "boolean"
                },
                "single_discount_rate": {
                    "description": "How much of a discount to apply, per-item",
                    "type": "float"
                }
            },
            "type": "object"
        },
        "service_plans": {
            "description": "Describes services offered to sub-accounts",
            "properties": {
                "bookkeepers": {
                    "$ref": "bookkeepers",
                    "type": "object"
                },
                "category": {
                    "description": "Optional category used for grouping service plans",
                    "type": "string"
                },
                "description": {
                    "description": "Describes the service plan offering",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the service plan",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "plan": {
                    "description": "Outlines the service plan for various services",
                    "patternProperties": {
                        "^[0-9a-zA-Z_]+$": {
                            "$ref": "service_plan",
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "shared_auth": {
            "additionalProperties": false,
            "description": "Provides a local auth-token via a shared auth-token",
            "properties": {
                "shared_auth": {
                    "description": "The shared token",
                    "maxLength": 64,
                    "minLength": 64,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "skel": {
            "description": "Skeleton JSON schema",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "sms": {
            "description": "sms document",
            "properties": {
                "body": {
                    "description": "text message",
                    "maxLength": 700,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "from": {
                    "description": "caller-id-number, taken from user if absent",
                    "required": false,
                    "type": "string"
                },
                "scheduled": {
                    "description": "The timestamp to start delivering the message",
                    "required": false,
                    "type": "integer"
                },
                "to": {
                    "description": "callee-id-number",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "storage": {
            "additionalProperties": false,
            "patternProperties": {
                "^_": {
                    "description": "Ignores CouchDB fields prefixed by underscores",
                    "type": [
                        "string",
                        "integer",
                        "boolean",
                        "object"
                    ]
                },
                "^pvt_": {
                    "description": "Ignores Kazoo private fields prefixed by pvt_",
                    "type": [
                        "string",
                        "integer",
                        "boolean"
                    ]
                }
            },
            "properties": {
                "attachments": {
                    "$ref": "storage.attachments",
                    "description": "Defines where and how to store attachments"
                },
                "connections": {
                    "$ref": "storage.connections",
                    "description": "Describes alternative connections to use (such as alternative CouchDB instances"
                },
                "id": {
                    "description": "ID of the storage document",
                    "type": "string"
                },
                "plan": {
                    "$ref": "storage.plan",
                    "description": "Describes how to store documents depending on the database or document type"
                }
            },
            "type": "object"
        },
        "storage.attachment.aws": {
            "description": "schema for AWS attachment entry",
            "properties": {
                "handler": {
                    "description": "What AWS service to use",
                    "enum": [
                        "s3"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Friendly name for this configuration",
                    "type": "string"
                },
                "settings": {
                    "description": "AWS API settings",
                    "properties": {
                        "bucket": {
                            "description": "Bucket name to store data to",
                            "type": "string"
                        },
                        "host": {
                            "description": "Region-specific hostname to use, if applicable",
                            "type": "string"
                        },
                        "key": {
                            "description": "AWS Key to use",
                            "type": "string"
                        },
                        "path": {
                            "description": "Custom path to use as a prefix when saving files",
                            "type": "string"
                        },
                        "secret": {
                            "description": "AWS Secret to use",
                            "type": "string"
                        }
                    },
                    "required": [
                        "bucket",
                        "key",
                        "secret"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "handler",
                "settings"
            ],
            "type": "object"
        },
        "storage.attachment.google_drive": {
            "description": "schema for google drive attachment entry",
            "properties": {
                "handler": {
                    "description": "What handler module to use",
                    "enum": [
                        "google_drive"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Friendly name for this configuration",
                    "type": "string"
                },
                "settings": {
                    "description": "Settings for the Google Drive account",
                    "properties": {
                        "folder_id": {
                            "description": "Folder ID in which to store the file, if any",
                            "type": "string"
                        },
                        "oauth_doc_id": {
                            "description": "Doc ID in the system 'oauth' database",
                            "type": "string"
                        }
                    },
                    "required": [
                        "oauth_doc_id"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "handler",
                "settings"
            ],
            "type": "object"
        },
        "storage.attachments": {
            "description": "Keys are 32-character identifiers to be used in storage plans",
            "patternProperties": {
                "^[a-z,0-9]{32}$": {
                    "description": "Configuration for the supported storage backends",
                    "oneOf": [
                        {
                            "$ref": "storage.attachment.aws"
                        },
                        {
                            "$ref": "storage.attachment.google_drive"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "storage.connection.couchdb": {
            "definitions": {
                "credentials": {
                    "additionalProperties": false,
                    "properties": {
                        "password": {
                            "type": "integer"
                        },
                        "username": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "username",
                        "password"
                    ],
                    "type": "object"
                },
                "pool": {
                    "additionalProperties": false,
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "size": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "name",
                        "size"
                    ],
                    "type": "object"
                }
            },
            "description": "schema for couchdb connection entry",
            "properties": {
                "driver": {
                    "enum": [
                        "kazoo_couch"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "settings": {
                    "properties": {
                        "connect_options": {
                            "properties": {
                                "keepalive": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "connect_timeout": {
                            "type": "integer"
                        },
                        "credentials": {
                            "$ref": "#/definitions/credentials"
                        },
                        "ip": {
                            "type": "string"
                        },
                        "max_pipeline_size": {
                            "type": "integer"
                        },
                        "max_sessions": {
                            "type": "integer"
                        },
                        "pool": {
                            "$ref": "#/definitions/pool"
                        },
                        "port": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "ip",
                        "port"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "driver",
                "settings"
            ],
            "type": "object"
        },
        "storage.connections": {
            "patternProperties": {
                "^([a-z,0-9]){32}$": {
                    "oneOf": [
                        {
                            "$ref": "storage.connection.couchdb"
                        }
                    ]
                },
                "local": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "storage.plan": {
            "additionalProperties": false,
            "description": "schema for storage plan",
            "properties": {
                "account": {
                    "$ref": "storage.plan.database"
                },
                "modb": {
                    "$ref": "storage.plan.database"
                },
                "system": {
                    "$ref": "storage.plan.database"
                }
            },
            "type": "object"
        },
        "storage.plan.database": {
            "additionalProperties": false,
            "definitions": {
                "database": {
                    "properties": {
                        "create_options": {
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "description": "schema for database storage plan",
            "properties": {
                "attachments": {
                    "$ref": "storage.plan.database.attachment"
                },
                "connection": {
                    "type": "string"
                },
                "database": {
                    "$ref": "#/definitions/database"
                },
                "types": {
                    "additionalProperties": false,
                    "properties": {
                        "call_recording": {
                            "$ref": "storage.plan.database.document"
                        },
                        "fax": {
                            "$ref": "storage.plan.database.document"
                        },
                        "mailbox_message": {
                            "$ref": "storage.plan.database.document"
                        },
                        "media": {
                            "$ref": "storage.plan.database.document"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "storage.plan.database.attachment": {
            "description": "schema for attachment ref type storage plan",
            "properties": {
                "handler": {
                    "type": "string"
                },
                "params": {
                    "type": "object"
                },
                "stub": {
                    "type": "boolean"
                }
            }
        },
        "storage.plan.database.document": {
            "description": "schema for document type storage plan",
            "properties": {
                "attachments": {
                    "$ref": "storage.plan.database.attachment"
                },
                "connection": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.accounts": {
            "description": "Schema for accounts system_config",
            "properties": {
                "allow_subaccounts_for_direct": {
                    "default": true,
                    "description": "accounts allow subaccounts for direct",
                    "type": "boolean"
                },
                "default_timezone": {
                    "default": "America/Los_Angeles",
                    "description": "accounts default timezone",
                    "type": "string"
                },
                "master_account_id": {
                    "description": "accounts master account id"
                }
            },
            "type": "object"
        },
        "system_config.acdc": {
            "description": "Schema for acdc system_config",
            "properties": {
                "agent_info_fields": {
                    "default": [
                        "first_name",
                        "last_name",
                        "username",
                        "email"
                    ],
                    "description": "acdc agent info fields",
                    "type": "array"
                },
                "archive_period_ms": {
                    "default": 60000,
                    "description": "acdc archive period in milliseconds",
                    "type": "integer"
                },
                "archive_window_s": {
                    "default": 3600,
                    "description": "acdc archive window in seconds",
                    "type": "integer"
                },
                "cleanup_period_ms": {
                    "default": 360000,
                    "description": "acdc cleanup period in milliseconds",
                    "type": "integer"
                },
                "cleanup_window_s": {
                    "default": 86400,
                    "description": "acdc cleanup window in seconds",
                    "type": "integer"
                },
                "default_agent_pause_timeout": {
                    "default": 600,
                    "description": "acdc default agent pause timeout",
                    "type": "integer"
                },
                "max_connect_failures": {
                    "default": 3,
                    "description": "acdc maximum connect failures",
                    "type": "integer"
                },
                "max_result_set": {
                    "default": 25,
                    "description": "acdc maximum result set",
                    "type": "integer"
                },
                "queue_collect_resp_timeout": {
                    "default": 2000,
                    "description": "acdc queue collect resp timeout",
                    "type": "integer"
                },
                "queue_worker_count": {
                    "default": 5,
                    "description": "acdc queue worker count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.alerts": {
            "description": "Schema for alerts system_config",
            "properties": {
                "enabled": {
                    "default": true,
                    "description": "alerts enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.ananke": {
            "description": "Schema for ananke system_config",
            "properties": {
                "schedules": {
                    "default": [],
                    "description": "ananke schedules",
                    "type": "array"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "properties": {
                                        "attempts": {
                                            "properties": {
                                                "default": 5,
                                                "description": "ananke attempts",
                                                "type": "string"
                                            }
                                        },
                                        "interval_s": {
                                            "properties": {
                                                "default": 300,
                                                "description": "ananke interval in seconds",
                                                "type": "string"
                                            }
                                        },
                                        "timeout_s": {
                                            "properties": {
                                                "default": 20,
                                                "description": "ananke timeout in seconds",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "system_config.auth": {
            "description": "Schema for auth system_config",
            "properties": {
                "default_multi_factor_provider": {
                    "description": "Default multi factor authentication provider name",
                    "type": "string"
                },
                "secret_for_user_signature": {
                    "description": "auth secret for user signature",
                    "type": "string"
                },
                "system_key": {
                    "description": "auth system key",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.auth.mfa": {
            "description": "Schema for auth.mfa system_config",
            "properties": {
                "default_provider": {
                    "description": "Default provider name for multi authentication factor",
                    "type": "string"
                }
            },
            "required": [
                "default_provider"
            ],
            "type": "object"
        },
        "system_config.blackhole": {
            "description": "Schema for blackhole system_config",
            "properties": {
                "acceptors": {
                    "default": 100,
                    "description": "blackhole acceptors",
                    "type": "integer"
                },
                "autoload_modules": {
                    "default": [
                        "bh_token_auth",
                        "bh_call",
                        "bh_object",
                        "bh_fax",
                        "bh_conference",
                        "bh_events",
                        "bh_authz_subscribe"
                    ],
                    "description": "blackhole autoload modules",
                    "type": "array"
                },
                "port": {
                    "default": 5555,
                    "description": "blackhole port",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.braintree": {
            "description": "Schema for braintree system_config",
            "properties": {
                "client_token_version": {
                    "default": "2",
                    "description": "braintree client token version",
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "braintree debug",
                    "type": "boolean"
                },
                "default_environment": {
                    "default": [],
                    "description": "braintree default environment",
                    "type": "string"
                },
                "default_merchant_id": {
                    "default": [],
                    "description": "braintree default merchant id",
                    "type": "string"
                },
                "default_private_key": {
                    "default": "",
                    "description": "braintree default private key",
                    "type": "string"
                },
                "default_public_key": {
                    "default": "",
                    "description": "braintree default public key",
                    "type": "string"
                },
                "max_amount": {
                    "default": 200.0,
                    "description": "braintree maximum amount",
                    "type": "number"
                },
                "min_amount": {
                    "default": 5.0,
                    "description": "braintree minimum amount",
                    "type": "number"
                },
                "should_prorate": {
                    "default": true,
                    "description": "braintree should prorate",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.call_command": {
            "description": "Schema for call_command system_config",
            "properties": {
                "application_timeout": {
                    "default": 500000,
                    "description": "call_command application timeout",
                    "type": "integer"
                },
                "bridge_timeout_extended_ms": {
                    "default": 20000,
                    "description": "call_command extended bridge timeout in ms",
                    "type": "integer"
                },
                "collect_timeout": {
                    "default": 5000,
                    "description": "call_command collect timeout",
                    "type": "integer"
                },
                "digit_timeout": {
                    "default": 3000,
                    "description": "call_command digit timeout",
                    "type": "integer"
                },
                "interdigit_timeout": {
                    "default": 2000,
                    "description": "call_command interdigit timeout",
                    "type": "integer"
                },
                "message_timeout": {
                    "default": 5000,
                    "description": "call_command message timeout",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.callflow": {
            "description": "Schema for callflow system_config",
            "properties": {
                "call_recording": {
                    "properties": {
                        "extension": {
                            "properties": {
                                "default": "mp3",
                                "description": "callflow extension",
                                "type": "string"
                            }
                        }
                    }
                },
                "calls_consume_tokens": {
                    "default": true,
                    "description": "callflow calls consume tokens",
                    "type": "boolean"
                },
                "default_pin_length": {
                    "default": 10,
                    "description": "callflow default pin length",
                    "type": "integer"
                },
                "default_use_account_caller_id": {
                    "default": true,
                    "description": "callflow default use account caller id",
                    "type": "boolean"
                },
                "ensure_valid_caller_id": {
                    "default": false,
                    "description": "callflow ensure valid caller id",
                    "type": "boolean"
                },
                "fax_detect_duration_s": {
                    "default": 5,
                    "description": "callflow fax detect duration in seconds",
                    "type": "integer"
                },
                "max_branch_count": {
                    "default": 50,
                    "description": "callflow maximum branch count",
                    "type": "integer"
                },
                "min_bucket_cost": {
                    "default": 5,
                    "description": "callflow minimum bucket cost",
                    "type": "integer"
                },
                "mwi_send_unsoliciated_updates": {
                    "default": true,
                    "description": "callflow mwi send unsoliciated updates",
                    "type": "boolean"
                },
                "operator_key": {
                    "default": "0",
                    "description": "callflow operator key",
                    "type": "string"
                },
                "post_answer_delay": {
                    "default": 100,
                    "description": "callflow post answer delay",
                    "type": "integer"
                },
                "ring_ready_offnet": {
                    "default": true,
                    "description": "callflow ring ready offnet",
                    "type": "boolean"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "callflow route win timeout",
                    "type": "integer"
                },
                "singular_call_hook_url": {
                    "default": "",
                    "description": "callflow singular call hook url",
                    "type": "string"
                },
                "voicemail": {
                    "properties": {
                        "delete_after_notify": {
                            "properties": {
                                "default": false,
                                "description": "callflow delete after notify",
                                "type": "boolean"
                            }
                        },
                        "extension": {
                            "properties": {
                                "default": "mp3",
                                "description": "callflow extension",
                                "type": "string"
                            }
                        },
                        "max_box_number_length": {
                            "properties": {
                                "default": 15,
                                "description": "callflow maximum box number length",
                                "type": "integer"
                            }
                        },
                        "max_login_attempts": {
                            "properties": {
                                "default": 3,
                                "description": "callflow max login attempts",
                                "type": "integer"
                            }
                        },
                        "max_message_count": {
                            "properties": {
                                "default": 100,
                                "description": "callflow maximum message count",
                                "type": "integer"
                            }
                        },
                        "max_message_length": {
                            "properties": {
                                "default": 500,
                                "description": "callflow maximum message length",
                                "type": "integer"
                            }
                        },
                        "max_pin_length": {
                            "properties": {
                                "default": 6,
                                "description": "callflow maximum pin length",
                                "type": "integer"
                            }
                        },
                        "message_retention_duration": {
                            "properties": {
                                "default": 93,
                                "description": "callflow message retention duration",
                                "type": "integer"
                            }
                        },
                        "migrate_interaccount_delay_ms": {
                            "properties": {
                                "default": 2000,
                                "description": "callflow migrate interaccount delay in milliseconds",
                                "type": "integer"
                            }
                        },
                        "migrate_max_bulk_insert": {
                            "properties": {
                                "default": 2000,
                                "description": "callflow migrate maximum bulk insert",
                                "type": "integer"
                            }
                        },
                        "migrate_max_worker": {
                            "properties": {
                                "default": 10,
                                "description": "callflow migrate max worker",
                                "type": "integer"
                            }
                        },
                        "min_message_size": {
                            "properties": {
                                "default": 500,
                                "description": "callflow minimum message size",
                                "type": "integer"
                            }
                        },
                        "save_after_notify": {
                            "properties": {
                                "default": false,
                                "description": "callflow save after notify",
                                "type": "boolean"
                            }
                        },
                        "vm_message_foraward_type": {
                            "properties": {
                                "default": "only_forward",
                                "description": "Enable or disable the ability to prepend a message when forwarding a voicemail message",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "system_config.callflow.call_forward": {
            "description": "Schema for callflow.call_forward system_config",
            "properties": {
                "callfwd_number_timeout": {
                    "default": 8000,
                    "description": "callflow.call_forward callfwd number timeout",
                    "type": "integer"
                },
                "keys": {
                    "properties": {
                        "menu_change_number": {
                            "properties": {
                                "default": "2",
                                "description": "callflow.call_forward menu change number",
                                "type": "string"
                            }
                        },
                        "menu_toggle_option": {
                            "properties": {
                                "default": "1",
                                "description": "callflow.call_forward menu toggle option",
                                "type": "string"
                            }
                        }
                    }
                },
                "max_callfwd_number_length": {
                    "default": 20,
                    "description": "callflow.call_forward maximum callfwd number length",
                    "type": "integer"
                },
                "min_callfwd_number_length": {
                    "default": 3,
                    "description": "callflow.call_forward minimum callfwd number length",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.callflow.dynamic_cid": {
            "description": "Schema for callflow.dynamic_cid system_config",
            "properties": {
                "accept_prompt": {
                    "default": "tone_stream://%(250,50,440)",
                    "description": "callflow.dynamic_cid accept prompt",
                    "type": "string"
                },
                "default_prompt": {
                    "default": "dynamic-cid-enter_cid",
                    "description": "callflow.dynamic_cid default prompt",
                    "type": "string"
                },
                "max_digits": {
                    "default": 10,
                    "description": "callflow.dynamic_cid max digits",
                    "type": "integer"
                },
                "min_digits": {
                    "default": 10,
                    "description": "callflow.dynamic_cid min digits",
                    "type": "integer"
                },
                "reject_prompt": {
                    "default": "dynamic-cid-invalid_using_default",
                    "description": "callflow.dynamic_cid reject prompt",
                    "type": "string"
                },
                "whitelist_regex": {
                    "default": "\\d+",
                    "description": "callflow.dynamic_cid whitelist regex",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.callflow.hotdesk": {
            "description": "Schema for callflow.hotdesk system_config",
            "properties": {
                "max_hotdesk_id_length": {
                    "default": 10,
                    "description": "callflow.hotdesk maximum hotdesk id length",
                    "type": "integer"
                },
                "max_login_attempts": {
                    "default": 3,
                    "description": "callflow.hotdesk maximum login attempts",
                    "type": "integer"
                },
                "max_pin_length": {
                    "default": 6,
                    "description": "callflow.hotdesk maximum pin length",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.callflow.menu": {
            "description": "Schema for callflow.menu system_config",
            "properties": {
                "min_greeting_length": {
                    "default": 1500,
                    "description": "callflow.menu minimum greeting length",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.callflow.park": {
            "description": "Schema for callflow.park system_config",
            "properties": {
                "db_doc_name": {
                    "default": "parked_calls",
                    "description": "callflow.park db doc name",
                    "type": "string"
                },
                "default_callback_timeout": {
                    "default": 30000,
                    "description": "callflow.park default callback timeout",
                    "type": "integer"
                },
                "default_ringback_timeout": {
                    "default": 120000,
                    "description": "callflow.park default ringback timeout",
                    "type": "integer"
                },
                "parked_presence_type": {
                    "default": "early",
                    "description": "callflow.park parked presence type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.callflow.resources": {
            "description": "Schema for callflow.resources system_config",
            "properties": {
                "default_emit_account_id": {
                    "default": false,
                    "description": "callflow.resources default emit account id",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.camper": {
            "description": "Schema for camper system_config",
            "properties": {
                "stop_after": {
                    "default": 31,
                    "description": "camper stop after",
                    "type": "integer"
                },
                "timeout": {
                    "default": 15,
                    "description": "camper timeout",
                    "type": "integer"
                },
                "tries": {
                    "default": 10,
                    "description": "camper tries",
                    "type": "integer"
                },
                "try_interval": {
                    "default": 3,
                    "description": "camper try interval",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.cb_modb": {
            "description": "Schema for cb_modb system_config",
            "properties": {
                "maybe_archive_modbs": {
                    "default": false,
                    "description": "cb_modb maybe archive modbs",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.cccp": {
            "description": "Schema for cccp system_config",
            "properties": {
                "allowed_callee_regex": {
                    "default": "^\\+?\\d{7,}$",
                    "description": "cccp allowed callee regex",
                    "type": "string"
                },
                "callback_delay": {
                    "default": 3,
                    "description": "cccp callback delay",
                    "type": "integer"
                },
                "cccp_cb_number": {
                    "description": "cccp cccp cb number"
                },
                "cccp_cc_number": {
                    "description": "cccp cccp cc number"
                },
                "last_number_redial_code": {
                    "default": "*0",
                    "description": "cccp last number redial code",
                    "type": "string"
                },
                "prompt_delay": {
                    "default": 1,
                    "description": "cccp prompt delay",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.cdr": {
            "description": "Schema for cdr system_config",
            "properties": {
                "ignore_apps": {
                    "default": [
                        "milliwatt"
                    ],
                    "description": "cdr ignore apps",
                    "type": "array"
                },
                "ignore_loopback_bowout": {
                    "default": true,
                    "description": "cdr ignore loopback bowout",
                    "type": "boolean"
                },
                "refresh_timeout": {
                    "default": 900,
                    "description": "time in seconds to to trigger cdrs view refresh",
                    "type": "integer"
                },
                "refresh_view_threshold": {
                    "default": 0,
                    "description": "number of cdrs to trigger view refresh",
                    "type": "integer"
                },
                "store_anonymous": {
                    "default": false,
                    "description": "cdr store anonymous",
                    "type": "boolean"
                },
                "v3_migrate_num_months": {
                    "default": 4,
                    "description": "cdr v3 migrate num months",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.conferences": {
            "description": "Schema for conferences system_config",
            "properties": {
                "bridge_password": {
                    "description": "conferences bridge password",
                    "type": "string"
                },
                "bridge_username": {
                    "description": "conferences bridge username",
                    "type": "string"
                },
                "entry_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                    "description": "conferences entry tone",
                    "type": "string"
                },
                "exit_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,440);v=-7;>=3;+=.1;%(800,0,349,440)",
                    "description": "conferences exit tone",
                    "type": "string"
                },
                "moderator_entry_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                    "description": "conferences moderator entry tone",
                    "type": "string"
                },
                "moderator_exit_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,440);v=-7;>=3;+=.1;%(800,0,349,440)",
                    "description": "conferences moderator exit tone",
                    "type": "string"
                },
                "number_timeout": {
                    "default": 5000,
                    "description": "conferences number timeout",
                    "type": "integer"
                },
                "pin_timeout": {
                    "default": 5000,
                    "description": "conferences pin timeout",
                    "type": "integer"
                },
                "profiles": {
                    "properties": {
                        "default": {
                            "properties": {
                                "default": {
                                    "caller-controls": "default",
                                    "comfort-noise": 1000,
                                    "energy-level": 20,
                                    "enter-sound": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                                    "interval": 20,
                                    "moh-sound": "$${hold_music}",
                                    "rate": 8000
                                },
                                "description": "conferences default",
                                "type": "object"
                            }
                        },
                        "page": {
                            "properties": {
                                "default": {
                                    "caller-controls": "default",
                                    "comfort-noise": 1000,
                                    "energy-level": 20,
                                    "enter-sound": "",
                                    "interval": 20,
                                    "moh-sound": "",
                                    "rate": 8000
                                },
                                "description": "conferences page",
                                "type": "object"
                            }
                        }
                    }
                },
                "review_name": {
                    "default": false,
                    "description": "conferences review name",
                    "type": "boolean"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "conferences route win timeout",
                    "type": "integer"
                },
                "support_name_announcement": {
                    "default": true,
                    "description": "conferences support name announcement",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar": {
            "description": "Schema for crossbar system_config",
            "properties": {
                "allow_tracing": {
                    "default": false,
                    "description": "crossbar allow tracing",
                    "type": "boolean"
                },
                "api_auth_tokens": {
                    "default": 35,
                    "description": "crossbar api auth tokens",
                    "type": "integer"
                },
                "autoload_modules": {
                    "description": "crossbar autoload modules"
                },
                "compress_response_body": {
                    "default": true,
                    "description": "crossbar compress response body",
                    "type": "boolean"
                },
                "default_allow_anonymous_quickcalls": {
                    "default": true,
                    "description": "crossbar default allow anonymous quickcalls",
                    "type": "boolean"
                },
                "default_language": {
                    "default": "en-US",
                    "description": "crossbar default language",
                    "type": "string"
                },
                "ensure_valid_schema": {
                    "default": true,
                    "description": "crossbar ensure valid schema",
                    "type": "boolean"
                },
                "expiry_percentage": {
                    "default": 75,
                    "description": "crossbar expiry percentage",
                    "type": "integer"
                },
                "ip": {
                    "description": "crossbar ip",
                    "type": "string"
                },
                "magic_path_patterns": {
                    "default": [
                        "/:version/accounts/:account_id/vmboxes/:box_id/messages/:message_id/raw",
                        "/:version/accounts/:account_id/faxes/:direction/:fax_id/attachment",
                        "/:version/accounts/:account_id/presence/:reportid"
                    ],
                    "description": "crossbar magic path patterns",
                    "type": "array"
                },
                "max_upload_size": {
                    "default": 8000000,
                    "description": "crossbar maximum upload size",
                    "type": "integer"
                },
                "maximum_range": {
                    "default": 2682000,
                    "description": "crossbar maximum range",
                    "type": "integer"
                },
                "pagination_page_size": {
                    "default": 50,
                    "description": "crossbar pagination page size",
                    "type": "integer"
                },
                "port": {
                    "default": 8000,
                    "description": "crossbar port",
                    "type": "integer"
                },
                "pretty_metrics": {
                    "default": true,
                    "description": "crossbar pretty metrics",
                    "type": "boolean"
                },
                "request_timeout_ms": {
                    "default": 10000,
                    "description": "crossbar request timeout in milliseconds",
                    "type": "integer"
                },
                "reset_id_size": {
                    "default": 137,
                    "description": "crossbar reset id size",
                    "type": "integer"
                },
                "reverse_proxies": {
                    "default": [],
                    "description": "crossbar reverse proxies",
                    "type": "array"
                },
                "schema_strict_validation": {
                    "default": false,
                    "description": "crossbar schema strict validation",
                    "type": "boolean"
                },
                "ssl_ca_cert": {
                    "description": "crossbar ssl ca cert",
                    "type": "string"
                },
                "ssl_cert": {
                    "description": "crossbar ssl cert",
                    "type": "string"
                },
                "ssl_key": {
                    "description": "crossbar ssl key",
                    "type": "string"
                },
                "ssl_password": {
                    "default": "",
                    "description": "crossbar ssl password",
                    "type": "string"
                },
                "ssl_port": {
                    "default": 8443,
                    "description": "crossbar ssl port",
                    "type": "integer"
                },
                "ssl_workers": {
                    "default": 100,
                    "description": "crossbar ssl workers",
                    "type": "integer"
                },
                "token_auth_expiry": {
                    "default": 3600,
                    "description": "crossbar token auth expiry",
                    "type": "integer"
                },
                "token_costs": {
                    "default": 1,
                    "description": "crossbar token costs",
                    "type": "integer"
                },
                "trace_path": {
                    "default": "/tmp",
                    "description": "crossbar trace path",
                    "type": "string"
                },
                "use_plaintext": {
                    "default": true,
                    "description": "crossbar use plaintext",
                    "type": "boolean"
                },
                "use_ssl": {
                    "default": false,
                    "description": "crossbar use ssl",
                    "type": "boolean"
                },
                "user_auth_tokens": {
                    "default": 35,
                    "description": "crossbar user auth tokens",
                    "type": "integer"
                },
                "workers": {
                    "default": 100,
                    "description": "crossbar workers",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.accounts": {
            "description": "Schema for crossbar.accounts system_config",
            "properties": {
                "account_realm_suffix": {
                    "default": "sip.2600hz.com",
                    "description": "crossbar.accounts account realm suffix",
                    "type": "string"
                },
                "allow_move": {
                    "default": "superduper_admin",
                    "description": "crossbar.accounts allow move",
                    "type": "string"
                },
                "allow_sibling_listing": {
                    "default": true,
                    "description": "crossbar.accounts allow sibling listing",
                    "type": "boolean"
                },
                "default_parent": {
                    "default": "",
                    "description": "crossbar.accounts default parent",
                    "type": "string"
                },
                "ensure_unique_name": {
                    "default": true,
                    "description": "crossbar.accounts ensure unique name",
                    "type": "boolean"
                },
                "expose_api_key": {
                    "default": false,
                    "description": "crossbar.accounts expose api key",
                    "type": "boolean"
                },
                "new_account_notify_delay_s": {
                    "default": 30,
                    "description": "crossbar.accounts new account notify delay in seconds",
                    "type": "integer"
                },
                "random_realm_strength": {
                    "default": 3,
                    "description": "crossbar.accounts random realm strength",
                    "type": "integer"
                },
                "trial_time": {
                    "default": 1209600,
                    "description": "crossbar.accounts trial time",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.auth": {
            "description": "Schema for crossbar.auth system_config",
            "properties": {
                "auth_modules": {
                    "default": {},
                    "description": "Default crossbar authentication modules configuration",
                    "type": "object"
                },
                "basic_auth_type": {
                    "default": "md5",
                    "description": "crossbar.auth basic auth type",
                    "type": "string"
                },
                "log_failed_login_attempts": {
                    "default": false,
                    "description": "Should log failed login attempts",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.braintree": {
            "description": "Schema for crossbar.braintree system_config",
            "properties": {
                "max_account_credit": {
                    "default": 500.0,
                    "description": "crossbar.braintree maximum account credit",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.callflows": {
            "description": "Schema for crossbar.callflows system_config",
            "properties": {
                "default_reconcile_numbers": {
                    "default": false,
                    "description": "crossbar.callflows default reconcile numbers",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.cdrs": {
            "description": "Schema for crossbar.cdrs system_config",
            "properties": {
                "cdr_stale_view": {
                    "default": false,
                    "description": "force cdr to return stale records only",
                    "type": "boolean"
                },
                "maximum_bulk": {
                    "default": 50,
                    "description": "crossbar.cdrs maximum bulk",
                    "type": "integer"
                },
                "maximum_range": {
                    "default": 2682000,
                    "description": "crossbar.cdrs maximum range",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.channels": {
            "description": "Schema for crossbar.channels system_config",
            "properties": {
                "system_wide_channels_list": {
                    "default": false,
                    "description": "crossbar.channels system wide channels list",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.contact_list": {
            "description": "Schema for crossbar.contact_list system_config",
            "properties": {
                "default_includes": {
                    "default": [],
                    "description": "crossbar.contact_list default includes",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.devices": {
            "description": "Schema for crossbar.devices system_config",
            "properties": {
                "allow_aggregates": {
                    "default": true,
                    "description": "crossbar.devices allow aggregates",
                    "type": "boolean"
                },
                "provisioner_host": {
                    "description": "crossbar.devices provisioner host",
                    "type": "string"
                },
                "provisioner_referer": {
                    "description": "crossbar.devices provisioner referer",
                    "type": "string"
                },
                "provisioning_host": {
                    "description": "crossbar.devices provisioning host",
                    "type": "string"
                },
                "provisioning_referer": {
                    "description": "crossbar.devices provisioning referer",
                    "type": "string"
                },
                "provisioning_type": {
                    "description": "crossbar.devices provisioning type"
                },
                "provisioning_url": {
                    "description": "crossbar.devices provisioning url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.freeswitch": {
            "description": "Schema for crossbar.freeswitch system_config",
            "properties": {
                "files_to_include": {
                    "default": [
                        "freeswitch_dialplan",
                        "freeswitch_chatplan"
                    ],
                    "description": "crossbar.freeswitch files to include",
                    "type": "array"
                },
                "offline_configuration_key": {
                    "description": "crossbar.freeswitch offline configuration key",
                    "type": "string"
                },
                "realm_templates_to_process": {
                    "default": [
                        "freeswitch_directory_realm"
                    ],
                    "description": "crossbar.freeswitch realm templates to process",
                    "type": "array"
                },
                "templates_to_process": {
                    "default": [
                        "freeswitch_directory"
                    ],
                    "description": "crossbar.freeswitch templates to process",
                    "type": "array"
                },
                "work_dir": {
                    "default": "/tmp/",
                    "description": "crossbar.freeswitch work dir",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.local_resources": {
            "description": "Schema for crossbar.local_resources system_config",
            "properties": {
                "allow_peers": {
                    "default": false,
                    "description": "crossbar.local_resources allow peers",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.media": {
            "description": "Schema for crossbar.media system_config",
            "properties": {
                "normalization_format": {
                    "default": "mp3",
                    "description": "crossbar.media normalization format",
                    "type": "string"
                },
                "normalize_media": {
                    "default": false,
                    "description": "crossbar.media normalize media",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.notifications": {
            "description": "Schema for crossbar.notifications system_config",
            "properties": {
                "notification_timeout_ms": {
                    "default": 5000,
                    "description": "crossbar.notifications notification timeout in milliseconds",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.onboard": {
            "description": "Schema for crossbar.onboard system_config",
            "properties": {
                "default_callflow_start_exten": {
                    "default": 2000,
                    "description": "crossbar.onboard default callflow start exten",
                    "type": "integer"
                },
                "default_extension_callflow": {
                    "default": "{\"data\": { \"id\": \"~s\" }, \"module\": \"user\", \"children\": { \"_\": { \"data\": { \"id\": \"~s\" }, \"module\": \"voicemail\", \"children\": {}}}}",
                    "description": "crossbar.onboard default extension callflow",
                    "type": "string"
                },
                "default_vm_start_exten": {
                    "default": 3000,
                    "description": "crossbar.onboard default vm start exten",
                    "type": "integer"
                },
                "device_pwd_strength": {
                    "default": 6,
                    "description": "crossbar.onboard device pwd strength",
                    "type": "integer"
                },
                "device_username_strength": {
                    "default": 3,
                    "description": "crossbar.onboard device username strength",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.phone_numbers": {
            "description": "Schema for crossbar.phone_numbers system_config",
            "properties": {
                "default_country": {
                    "default": "US",
                    "description": "crossbar.phone_numbers default country",
                    "type": "string"
                },
                "phonebook_url": {
                    "description": "crossbar.phone_numbers phonebook url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.port_requests": {
            "description": "Schema for crossbar.port_requests system_config",
            "properties": {
                "unfinished_port_request_lifetime_s": {
                    "default": 2592000,
                    "description": "crossbar.port_requests unfinished port request lifetime in seconds",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.presence": {
            "description": "Schema for crossbar.presence system_config",
            "properties": {
                "query_include_presentity": {
                    "default": false,
                    "description": "crossbar.presence query include presentity",
                    "type": "boolean"
                },
                "query_presence_timeout": {
                    "default": 5000,
                    "description": "crossbar.presence query presence timeout",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.resource_selectors": {
            "description": "Schema for crossbar.resource_selectors system_config",
            "properties": {
                "csv_config": {
                    "default": {
                        "selector_column": 1,
                        "value_column": 2
                    },
                    "description": "crossbar.resource_selectors csv config",
                    "type": "object"
                },
                "suppress_selectors_change_notice": {
                    "default": false,
                    "description": "crossbar.resource_selectors suppress selectors change notice",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.resources": {
            "description": "Schema for crossbar.resources system_config",
            "properties": {
                "job_recovery_threshold_s": {
                    "default": 3600,
                    "description": "crossbar.resources job recovery threshold in seconds",
                    "type": "integer"
                },
                "job_recovery_timeout_s": {
                    "default": 21600,
                    "description": "crossbar.resources job recovery timeout in seconds",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.services": {
            "description": "Schema for crossbar.services system_config",
            "properties": {
                "maximum_range": {
                    "default": 2682000,
                    "description": "crossbar.services maximum range",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.shared_auth": {
            "description": "Schema for crossbar.shared_auth system_config",
            "properties": {
                "authoritative_crossbar": {
                    "description": "crossbar.shared_auth authoritative crossbar",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.sms": {
            "description": "Schema for crossbar.sms system_config",
            "properties": {
                "api_e164_convert_from": {
                    "default": false,
                    "description": "crossbar.sms api e164 convert from",
                    "type": "boolean"
                },
                "api_e164_convert_to": {
                    "default": false,
                    "description": "crossbar.sms api e164 convert to",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.token_restrictions": {
            "description": "Schema for crossbar.token_restrictions system_config",
            "properties": {
                "_": {
                    "description": "crossbar.token_restrictions  ",
                    "type": "object"
                },
                "default_priv_level": {
                    "default": "admin",
                    "description": "crossbar.token_restrictions default priv level",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.crossbar.ubiquiti": {
            "description": "Schema for crossbar.ubiquiti system_config",
            "properties": {
                "api_secret": {
                    "description": "crossbar.ubiquiti api secret"
                },
                "api_token_expires_s": {
                    "default": 1800,
                    "description": "crossbar.ubiquiti api token expires in seconds",
                    "type": "integer"
                },
                "production": {
                    "properties": {
                        "sso_url": {
                            "properties": {
                                "default": "https://sso.ubnt.com/api/sso/v1/",
                                "description": "crossbar.ubiquiti sso url",
                                "type": "string"
                            }
                        }
                    }
                },
                "salt_length": {
                    "default": 20,
                    "description": "crossbar.ubiquiti salt length",
                    "type": "integer"
                },
                "sso_environment": {
                    "default": "staging",
                    "description": "crossbar.ubiquiti sso environment",
                    "type": "string"
                },
                "sso_provider_id": {
                    "description": "crossbar.ubiquiti sso provider id",
                    "type": "string"
                },
                "staging": {
                    "properties": {
                        "sso_url": {
                            "properties": {
                                "default": "https://sso-stage.ubnt.com/api/sso/v1/",
                                "description": "crossbar.ubiquiti sso url",
                                "type": "string"
                            }
                        }
                    }
                },
                "tokens_per_request": {
                    "default": 35,
                    "description": "crossbar.ubiquiti tokens per request",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.datamgr": {
            "description": "Schema for datamgr system_config",
            "properties": {
                "cache_policy": {
                    "default": {
                        "account": 900,
                        "aggregate": 900,
                        "deprecated": 900,
                        "modb": 900,
                        "numbers": 900,
                        "system": 900,
                        "system_config": "infinity",
                        "system_data": "infinity"
                    },
                    "description": "datamgr cache policy",
                    "type": "object"
                },
                "default_archive_folder": {
                    "default": "/tmp",
                    "description": "datamgr default archive folder",
                    "type": "string"
                },
                "no_caching_doc_types": {
                    "default": [
                        "media",
                        "private_media",
                        "call_recording",
                        "fax",
                        "mailbox_message"
                    ],
                    "description": "datamgr no caching doc types",
                    "type": "array"
                },
                "performance": {
                    "description": "datamgr performance"
                }
            },
            "type": "object"
        },
        "system_config.doodle": {
            "description": "Schema for doodle system_config",
            "properties": {
                "api_preserve_caller_id": {
                    "default": true,
                    "description": "doodle.api preserve caller id",
                    "type": "boolean"
                },
                "connections": {
                    "description": "doodle connections"
                },
                "default_test_from_number": {
                    "default": "15552220001",
                    "description": "doodle default test from number",
                    "type": "string"
                },
                "default_test_route_id": {
                    "default": "syneverse",
                    "description": "doodle default test route id",
                    "type": "string"
                },
                "inbound_broker": {
                    "description": "doodle inbound broker",
                    "type": "string"
                },
                "inbound_exchange": {
                    "default": "sms",
                    "description": "doodle inbound exchange",
                    "type": "string"
                },
                "inbound_exchange_options": {
                    "default": {
                        "passive": true
                    },
                    "description": "doodle inbound exchange options",
                    "type": "object"
                },
                "inbound_exchange_type": {
                    "default": "topic",
                    "description": "doodle inbound exchange type",
                    "type": "string"
                },
                "inbound_queue_name": {
                    "description": "doodle inbound queue name",
                    "type": "string"
                },
                "min_bucket_cost": {
                    "default": 1,
                    "description": "doodle minimum bucket cost",
                    "type": "integer"
                },
                "reschedule": {
                    "default": {},
                    "description": "doodle reschedule",
                    "type": "object"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "doodle route win timeout",
                    "type": "integer"
                },
                "unavailable_message": {
                    "default": {
                        "en-US": "sms service unavailable"
                    },
                    "description": "doodle unavailable message",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "system_config.ecallmgr": {
            "description": "Schema for ecallmgr system_config",
            "properties": {
                "acls": {
                    "default": {},
                    "description": "ecallmgr acls",
                    "type": "object"
                },
                "authz_default_action": {
                    "default": "deny",
                    "description": "ecallmgr authz default action",
                    "type": "string"
                },
                "authz_dry_run": {
                    "default": false,
                    "description": "ecallmgr authz dry run",
                    "type": "boolean"
                },
                "authz_enabled": {
                    "default": false,
                    "description": "ecallmgr authz enabled",
                    "type": "boolean"
                },
                "authz_local_resources": {
                    "default": false,
                    "description": "ecallmgr authz local resources",
                    "type": "boolean"
                },
                "balance_crawler_cycle_ms": {
                    "default": 60000,
                    "description": "ecallmgr balance crawler cycle in milliseconds",
                    "type": "integer"
                },
                "balance_crawler_enabled": {
                    "default": false,
                    "description": "ecallmgr balance crawler enabled",
                    "type": "boolean"
                },
                "balance_crawler_fetch_timeout_ms": {
                    "default": 10000,
                    "description": "ecallmgr balance crawler fetch timeout in milliseconds",
                    "type": "integer"
                },
                "balance_crawler_interaccount_delay_ms": {
                    "default": 10,
                    "description": "ecallmgr balance crawler interaccount delay in milliseconds",
                    "type": "integer"
                },
                "call_routing_bindings": {
                    "default": [
                        "context_2"
                    ],
                    "description": "ecallmgr call routing bindings",
                    "type": "array"
                },
                "capabilities": {
                    "default": [
                        {
                            "capability": "conference",
                            "is_loaded": false,
                            "module": "mod_conference"
                        },
                        {
                            "capability": "channel_move",
                            "is_loaded": false,
                            "module": "mod_channel_move"
                        },
                        {
                            "capability": "http_cache",
                            "is_loaded": false,
                            "module": "mod_http_cache"
                        },
                        {
                            "capability": "dialplan",
                            "is_loaded": false,
                            "module": "mod_dptools"
                        },
                        {
                            "capability": "sip",
                            "is_loaded": false,
                            "module": "mod_sofia"
                        },
                        {
                            "capability": "fax",
                            "is_loaded": false,
                            "module": "mod_spandsp"
                        },
                        {
                            "capability": "tts",
                            "is_loaded": false,
                            "module": "mod_flite"
                        },
                        {
                            "capability": "freetdm",
                            "is_loaded": false,
                            "module": "mod_freetdm"
                        },
                        {
                            "capability": "skype",
                            "is_loaded": false,
                            "module": "mod_skypopen"
                        },
                        {
                            "capability": "xmpp",
                            "is_loaded": false,
                            "module": "mod_dingaling"
                        },
                        {
                            "capability": "skinny",
                            "is_loaded": false,
                            "module": "mod_skinny"
                        },
                        {
                            "capability": "sms",
                            "is_loaded": false,
                            "module": "mod_sms"
                        }
                    ],
                    "description": "ecallmgr capabilities",
                    "type": "array"
                },
                "debug_channel": {
                    "default": false,
                    "description": "ecallmgr debug channel",
                    "type": "boolean"
                },
                "default_fax_extension": {
                    "default": ".tiff",
                    "description": "ecallmgr default fax extension",
                    "type": "string"
                },
                "default_realm": {
                    "default": "nodomain.com",
                    "description": "ecallmgr default realm",
                    "type": "string"
                },
                "default_recording_extension": {
                    "default": ".mp3",
                    "description": "ecallmgr default recording extension",
                    "type": "string"
                },
                "default_ringback": {
                    "description": "ecallmgr default ringback"
                },
                "event_stream_idle_alert": {
                    "default": 0,
                    "description": "ecallmgr event stream idle alert",
                    "type": "integer"
                },
                "expandable_macros": {
                    "default": {
                        "{account_id}": "${ecallmgr_Account-ID}",
                        "{billing_id}": "${ecallmgr_Billing-ID}",
                        "{caller_id_name}": "${caller_id_name}",
                        "{caller_id_number}": "${caller_id_number}",
                        "{reseller_id}": "${ecallmgr_Reseller-ID}"
                    },
                    "description": "macros that will be expanded at call-time, for use in custom SIP headers",
                    "type": "object"
                },
                "expires_deviation_time": {
                    "default": 180,
                    "description": "ecallmgr expires deviation time",
                    "type": "integer"
                },
                "fax_file_path": {
                    "default": "/tmp/",
                    "description": "ecallmgr fax file path",
                    "type": "string"
                },
                "fetch_timeout": {
                    "default": 2600,
                    "description": "ecallmgr fetch timeout",
                    "type": "integer"
                },
                "freeswitch_context": {
                    "default": "context_2",
                    "description": "ecallmgr freeswitch context",
                    "type": "string"
                },
                "fs_cmds": {
                    "default": [
                        {
                            "load": "mod_sofia"
                        },
                        {
                            "reloadacl": ""
                        }
                    ],
                    "description": "ecallmgr fs cmds",
                    "type": "array"
                },
                "fs_cmds_wait_ms": {
                    "default": 5000,
                    "description": "ecallmgr fs cmds wait in milliseconds",
                    "type": "integer"
                },
                "fs_node_uptime_s": {
                    "default": 600,
                    "description": "ecallmgr fs node uptime in seconds",
                    "type": "integer"
                },
                "fs_nodes": {
                    "default": [],
                    "description": "ecallmgr fs nodes",
                    "type": "array"
                },
                "fs_profiles": {
                    "default": {},
                    "description": "ecallmgr fs profiles",
                    "type": "object"
                },
                "fs_reconnect_cmds": {
                    "description": "ecallmgr fs reconnect cmds"
                },
                "gateways": {
                    "default": {},
                    "description": "ecallmgr gateways",
                    "type": "object"
                },
                "insert_fetched_registration_locally": {
                    "default": false,
                    "description": "ecallmgr insert fetched registration locally",
                    "type": "boolean"
                },
                "max_channel_cleanup_timeout_ms": {
                    "default": 60000,
                    "description": "ecallmgr maximum channel cleanup timeout in milliseconds",
                    "type": "integer"
                },
                "max_channel_uptime_s": {
                    "default": 0,
                    "description": "ecallmgr maximum channel uptime in seconds",
                    "type": "integer"
                },
                "max_timeout_for_node_restart": {
                    "default": 10000,
                    "description": "ecallmgr maximum timeout for node restart",
                    "type": "integer"
                },
                "network_map": {
                    "default": {},
                    "description": "ecallmgr network map",
                    "type": "object"
                },
                "node_commands": {
                    "properties": {
                        "send_http": {
                            "properties": {
                                "delete_on_success": {
                                    "properties": {
                                        "default": false,
                                        "description": "ecallmgr delete on success",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "node_down_grace_period": {
                    "default": 10000,
                    "description": "ecallmgr node down grace period",
                    "type": "integer"
                },
                "process_gateways": {
                    "default": false,
                    "description": "ecallmgr process gateways",
                    "type": "boolean"
                },
                "publish_channel_reconnect": {
                    "default": false,
                    "description": "ecallmgr publish channel reconnect",
                    "type": "boolean"
                },
                "publish_channel_state": {
                    "default": true,
                    "description": "ecallmgr publish channel state",
                    "type": "boolean"
                },
                "publish_conference_event": {
                    "default": [
                        "conference-create",
                        "conference-destroy",
                        "lock",
                        "unlock",
                        "add-member",
                        "del-member",
                        "stop-talking",
                        "start-talking",
                        "mute-member",
                        "unmute-member",
                        "deaf-member",
                        "undeaf-member"
                    ],
                    "description": "ecallmgr publish conference event",
                    "type": "array"
                },
                "record_sample_rate": {
                    "default": 8000,
                    "description": "ecallmgr record sample rate",
                    "type": "integer"
                },
                "record_stereo_sample_rate": {
                    "default": 16000,
                    "description": "ecallmgr record stereo sample rate",
                    "type": "integer"
                },
                "record_waste_resources": {
                    "default": false,
                    "description": "ecallmgr record waste resources",
                    "type": "boolean"
                },
                "recording_file_path": {
                    "default": "/tmp/",
                    "description": "ecallmgr recording file path",
                    "type": "string"
                },
                "recording_software_name": {
                    "default": "2600Hz, Inc.'s Kazoo",
                    "description": "ecallmgr recording software name",
                    "type": "string"
                },
                "redirect_via_proxy": {
                    "default": true,
                    "description": "ecallmgr redirect via proxy",
                    "type": "boolean"
                },
                "restrict_channel_state_publisher": {
                    "default": false,
                    "description": "ecallmgr restrict channel state publisher",
                    "type": "boolean"
                },
                "should_detect_inband_dtmf": {
                    "description": "ecallmgr should detect inband dtmf",
                    "type": "boolean"
                },
                "sofia_conf": {
                    "description": "ecallmgr sofia conf"
                },
                "tcp_packet_type": {
                    "default": 2,
                    "description": "ecallmgr tcp packet type",
                    "type": "integer"
                },
                "text_routing_bindings": {
                    "default": [
                        "context_2"
                    ],
                    "description": "ecallmgr text routing bindings",
                    "type": "array"
                },
                "use_bypass_media_after_bridge": {
                    "default": false,
                    "description": "ecallmgr use bypass media after bridge",
                    "type": "boolean"
                },
                "use_http_cache": {
                    "default": true,
                    "description": "ecallmgr use http cache",
                    "type": "boolean"
                },
                "use_shout": {
                    "default": false,
                    "description": "ecallmgr use shout",
                    "type": "boolean"
                },
                "use_vlc": {
                    "default": false,
                    "description": "ecallmgr use vlc",
                    "type": "boolean"
                },
                "user_cache_time_in_ms": {
                    "default": 3600000,
                    "description": "ecallmgr user cache time in in milliseconds",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.fax": {
            "description": "Schema for fax system_config",
            "properties": {
                "allow_all_addresses_when_empty": {
                    "default": false,
                    "description": "fax allow all addresses when empty",
                    "type": "boolean"
                },
                "allowed_content_types": {
                    "default": [
                        "application/pdf",
                        "image/tiff",
                        {
                            "prefix": "image"
                        },
                        {
                            "prefix": "application/vnd.openxmlformats-officedocument."
                        },
                        {
                            "prefix": "application/vnd.oasis.opendocument."
                        },
                        "application/msword",
                        "application/vnd.ms-excel",
                        "application/vnd.ms-powerpoint"
                    ],
                    "description": "fax allowed content types",
                    "type": "array"
                },
                "cloud_registration_pool_interval": {
                    "default": 5000,
                    "description": "fax cloud registration pool interval",
                    "type": "integer"
                },
                "conversion_image_command": {
                    "default": "convert -density 204x98 -units PixelsPerInch -size 1728x1078 ~s ~s > /dev/null && echo -n success",
                    "description": "fax conversion image command",
                    "type": "string"
                },
                "conversion_openoffice_document_command": {
                    "default": "unoconv -c ~s -f pdf --stdout ~s | /usr/bin/gs -q -r204x98 -g1728x1078 -dNOPAUSE -dBATCH -dSAFER -sDEVICE=tiffg3 -sOutputFile=~s - > /dev/null&& echo -n success",
                    "description": "fax conversion openoffice document command",
                    "type": "string"
                },
                "conversion_pdf_command": {
                    "default": "/usr/bin/gs -q -r204x98 -g1728x1078 -dNOPAUSE -dBATCH -dSAFER -sDEVICE=tiffg3 -sOutputFile=~s -- ~s > /dev/null && echo -n success",
                    "description": "fax conversion pdf command",
                    "type": "string"
                },
                "count_pages_command": {
                    "default": "echo -n `tiffinfo ~s | grep 'Page Number' | grep -c 'P'`",
                    "description": "fax count pages command",
                    "type": "string"
                },
                "default_compare_field": {
                    "default": "result_cause",
                    "description": "fax default compare field",
                    "type": "string"
                },
                "default_fax_extension": {
                    "default": ".tiff",
                    "description": "fax default fax extension",
                    "type": "string"
                },
                "default_retry_count": {
                    "default": 3,
                    "description": "fax default retry count",
                    "type": "integer"
                },
                "default_retry_period": {
                    "default": 300,
                    "description": "fax default retry period",
                    "type": "integer"
                },
                "default_smtp_domain": {
                    "default": "fax.kazoo.io",
                    "description": "fax defaultsmtp domain",
                    "type": "string"
                },
                "delete_empty_faxes": {
                    "default": false,
                    "description": "fax delete empty faxes",
                    "type": "boolean"
                },
                "denied_content_types": {
                    "default": [
                        {
                            "prefix": "image/"
                        }
                    ],
                    "description": "fax denied content types",
                    "type": "array"
                },
                "endpoint_timeout": {
                    "default": 40,
                    "description": "fax endpoint timeout",
                    "type": "integer"
                },
                "ensure_valid_caller_id": {
                    "default": true,
                    "description": "fax ensure valid caller id",
                    "type": "boolean"
                },
                "fax_file_path": {
                    "default": "/tmp/",
                    "description": "fax fax file path",
                    "type": "string"
                },
                "fax_settings": {
                    "default": {
                        "override_callee_number": false,
                        "override_fax_identity": true
                    },
                    "description": "fax fax settings",
                    "type": "object"
                },
                "file_cache_path": {
                    "default": "/tmp/",
                    "description": "fax file cache path",
                    "type": "string"
                },
                "ignore_early_media": {
                    "default": false,
                    "description": "fax ignore early media",
                    "type": "boolean"
                },
                "image_min_size": {
                    "default": "700x10",
                    "description": "fax image minimum size",
                    "type": "string"
                },
                "image_size_cmd_format": {
                    "default": "echo -n `identify -format \"%[fx:w]x%[fx:h]\" ~s`",
                    "description": "fax image size cmd format",
                    "type": "string"
                },
                "inbound_t38_default": {
                    "default": true,
                    "description": "fax inbound t38 default",
                    "type": "string"
                },
                "log_faxbox_errors": {
                    "default": true,
                    "description": "fax log faxbox errors",
                    "type": "boolean"
                },
                "max_outbound": {
                    "default": 10,
                    "description": "fax max outbound",
                    "type": "integer"
                },
                "max_storage_retry": {
                    "default": 5,
                    "description": "fax maximum storage retry",
                    "type": "integer"
                },
                "openoffice_server": {
                    "default": "'socket,host=localhost,port=2002;urp;StarOffice.ComponentContext'",
                    "description": "fax openoffice server",
                    "type": "string"
                },
                "port": {
                    "default": 30950,
                    "description": "fax port",
                    "type": "integer"
                },
                "report_anonymous_system_errors": {
                    "default": false,
                    "description": "fax report anonymous system errors",
                    "type": "boolean"
                },
                "report_faxbox_system_errors": {
                    "default": true,
                    "description": "fax report faxbox system errors",
                    "type": "boolean"
                },
                "reschedule": {
                    "default": {},
                    "description": "fax reschedule",
                    "type": "object"
                },
                "smtp_max_msg_size": {
                    "default": 10485670,
                    "description": "fax smtp maximum msg size",
                    "type": "integer"
                },
                "smtp_port": {
                    "default": 19025,
                    "description": "fax smtp port",
                    "type": "integer"
                },
                "smtp_sessions": {
                    "default": 50,
                    "description": "fax smtp sessions",
                    "type": "integer"
                },
                "wait_for_fax_timeout_ms": {
                    "default": 3600000,
                    "description": "fax wait for fax timeout in milliseconds",
                    "type": "integer"
                },
                "workers": {
                    "default": 50,
                    "description": "fax workers",
                    "type": "integer"
                },
                "xmpp_interval": {
                    "default": 600000,
                    "description": "fax xmpp interval",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.frontier": {
            "description": "Schema for frontier system_config",
            "properties": {
                "rate_limits": {
                    "default": {
                        "account": {
                            "per_minute": {
                                "invites": 200,
                                "registrations": 100,
                                "total_packets": 2000
                            },
                            "per_second": {
                                "invites": 50,
                                "registrations": 20,
                                "total_packets": 100
                            }
                        },
                        "device": {
                            "per_minute": {
                                "invites": 100,
                                "registrations": 20,
                                "total_packets": 1000
                            },
                            "per_second": {
                                "invites": 5,
                                "registrations": 2,
                                "total_packets": 20
                            }
                        }
                    },
                    "description": "frontier rate limits",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "system_config.hangups": {
            "description": "Schema for hangups system_config",
            "properties": {
                "hangups_to_monitor": {
                    "default": [
                        "CALL_REJECTED",
                        "MANDATORY_IE_MISSING",
                        "NO_ROUTE_DESTINATION",
                        "PROGRESS_TIMEOUT",
                        "RECOVERY_ON_TIMER_EXPIRE",
                        "WRONG_CALL_STATE"
                    ],
                    "description": "hangups hangups to monitor",
                    "type": "array"
                },
                "ignore_hangup_causes": {
                    "default": [
                        "ALLOTTED_TIMEOUT",
                        "ATTENDED_TRANSFER",
                        "LOSE_RACE",
                        "NORMAL_CLEARING",
                        "NO_ANSWER",
                        "NO_USER_RESPONSE",
                        "ORIGINATOR_CANCEL",
                        "USER_BUSY",
                        "PICKED_OFF"
                    ],
                    "description": "hangups ignore hangup causes",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.hotornot": {
            "description": "Schema for hotornot system_config",
            "properties": {
                "default_rate_cost": {
                    "default": 0.0,
                    "description": "default cost per minute for rate",
                    "type": "number"
                },
                "default_rate_increment": {
                    "default": 60,
                    "description": "default increment time for rate",
                    "type": "integer"
                },
                "default_rate_internal_cost": {
                    "default": 0.0,
                    "description": "default internal cost per minute for rate",
                    "type": "number"
                },
                "default_rate_minimum": {
                    "default": 60,
                    "description": "default minimal duration for rate",
                    "type": "integer"
                },
                "default_rate_nocharge_time": {
                    "default": 0,
                    "description": "default nocharge time for rate",
                    "type": "integer"
                },
                "default_rate_surcharge": {
                    "default": 0.0,
                    "description": "default surcharge amount for rate",
                    "type": "number"
                },
                "default_ratedeck": {
                    "default": "ratedeck",
                    "description": "default ratedeck database to use",
                    "type": "string"
                },
                "filter_list": {
                    "default": [
                        "direction",
                        "route_options",
                        "routes"
                    ],
                    "description": "List of filters for rates",
                    "type": "array"
                },
                "rate_version": {
                    "description": "If defined, use rates with this version",
                    "type": "string"
                },
                "sort_by_weight": {
                    "default": true,
                    "description": "sort rates by weight (true) or cost (false)",
                    "type": "boolean"
                },
                "trie_build_timeout_ms": {
                    "default": 60000,
                    "description": "build timeout (ms) for trie",
                    "type": "integer"
                },
                "use_trie": {
                    "default": false,
                    "description": "whether to use the trie to store rates in the VM",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.jonny5": {
            "description": "Schema for jonny5 system_config",
            "properties": {
                "default_inbound_trunks": {
                    "description": "jonny5 default inbound trunks"
                },
                "default_twoway_trunks": {
                    "description": "jonny5 default twoway trunks"
                },
                "flat_rate_blacklist": {
                    "default": "^\\+1(684|264|268|242|246|441|284|345|767|809|829|849|473|671|876|664|670|787|939|869|758|784|721|868|649|340|900|800|888|877|866|855|844)\\d{7}$",
                    "description": "jonny5 flat rate blacklist",
                    "type": "string"
                },
                "flat_rate_whitelist": {
                    "default": "^\\+1\\d{10}$",
                    "description": "jonny5 flat rate whitelist",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.kapps_controller": {
            "description": "Schema for kapps_controller system_config",
            "properties": {
                "kapps": {
                    "default": [
                        "blackhole",
                        "callflow",
                        "cdr",
                        "conference",
                        "crossbar",
                        "fax",
                        "hangups",
                        "media_mgr",
                        "milliwatt",
                        "omnipresence",
                        "pivot",
                        "registrar",
                        "reorder",
                        "stepswitch",
                        "sysconf",
                        "teletype",
                        "trunkstore",
                        "webhooks"
                    ],
                    "description": "kapps_controller kapps",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.kapps_maintenance": {
            "description": "Schema for kapps_maintenance system_config",
            "properties": {
                "migrate_current_version": {
                    "default": "3.22",
                    "description": "kapps_maintenance migrate current version",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.kazoo.pdf": {
            "description": "Schema for kazoo.pdf system_config",
            "properties": {
                "html2pdf": {
                    "default": "/usr/bin/htmldoc --quiet --webpage -f $pdf$ $html$",
                    "description": "kazoo.pdf html2pdf",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.kazoo_couch": {
            "description": "Schema for kazoo_couch system_config",
            "properties": {
                "allow_maintenance_db_delete": {
                    "default": false,
                    "description": "kazoo_couch allow maintenance db delete",
                    "type": "boolean"
                },
                "autocompaction_check": {
                    "default": 60000,
                    "description": "kazoo_couch autocompaction check",
                    "type": "integer"
                },
                "compact_automatically": {
                    "default": true,
                    "description": "kazoo_couch compact automatically",
                    "type": "boolean"
                },
                "default_chunk_size": {
                    "default": 1000,
                    "description": "kazoo_couch default chunk size",
                    "type": "integer"
                },
                "max_compacting_shards": {
                    "default": 2,
                    "description": "kazoo_couch maximum compacting shards",
                    "type": "integer"
                },
                "max_compacting_views": {
                    "default": 2,
                    "description": "kazoo_couch maximum compacting views",
                    "type": "integer"
                },
                "max_concurrent_docs_to_archive": {
                    "default": 500,
                    "description": "kazoo_couch maximum concurrent docs to archive",
                    "type": "integer"
                },
                "max_wait_for_compaction_pids": {
                    "default": 360000,
                    "description": "kazoo_couch maximum wait for compaction pids",
                    "type": "integer"
                },
                "min_data_size": {
                    "default": 131072,
                    "description": "kazoo_couch minimum data size",
                    "type": "integer"
                },
                "min_ratio": {
                    "default": 1.2,
                    "description": "kazoo_couch minimum ratio",
                    "type": "number"
                },
                "sleep_between_compaction": {
                    "default": 60000,
                    "description": "kazoo_couch sleep between compaction",
                    "type": "integer"
                },
                "sleep_between_poll": {
                    "default": 3000,
                    "description": "kazoo_couch sleep between poll",
                    "type": "integer"
                },
                "sleep_between_views": {
                    "default": 2000,
                    "description": "kazoo_couch sleep between views",
                    "type": "integer"
                },
                "use_bigcouch_direct": {
                    "default": true,
                    "description": "kazoo_couch use bigcouch direct",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.kazoo_endpoint": {
            "description": "Schema for kazoo_endpoint system_config",
            "properties": {
                "custom_sip_interface": {
                    "description": "kazoo_endpoint custom sip interface"
                },
                "default_caller_id_name": {
                    "description": "kazoo_endpoint default caller id name",
                    "type": "string"
                },
                "default_caller_id_number": {
                    "description": "kazoo_endpoint default caller id number",
                    "type": "string"
                },
                "default_can_text_self": {
                    "default": true,
                    "description": "kazoo_endpoint default can text self",
                    "type": "boolean"
                },
                "default_ignore_completed_elsewhere": {
                    "default": true,
                    "description": "kazoo_endpoint default ignore completed elsewhere",
                    "type": "boolean"
                },
                "restrict_to_known_types": {
                    "default": false,
                    "description": "kazoo_endpoint restrict to known types",
                    "type": "boolean"
                },
                "should_add_diversion_header": {
                    "default": false,
                    "description": "kazoo_endpoint should add diversion header",
                    "type": "boolean"
                },
                "sip_transport": {
                    "description": "kazoo_endpoint sip transport"
                }
            },
            "type": "object"
        },
        "system_config.kazoo_endpoint.mobile": {
            "description": "Schema for kazoo_endpoint.mobile system_config",
            "properties": {
                "codecs": {
                    "default": [
                        "PCMU"
                    ],
                    "description": "kazoo_endpoint.mobile codecs",
                    "type": "array"
                },
                "create_sip_endpoint": {
                    "default": false,
                    "description": "kazoo_endpoint.mobile create sip endpoint",
                    "type": "boolean"
                },
                "custom_sip_interface": {
                    "description": "kazoo_endpoint.mobile custom sip interface",
                    "type": "string"
                },
                "formatter": {
                    "default": "^\\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$",
                    "description": "kazoo_endpoint.mobile formatter",
                    "type": "string"
                },
                "path": {
                    "default": "",
                    "description": "kazoo_endpoint.mobile path",
                    "type": "string"
                },
                "prefix": {
                    "default": "",
                    "description": "kazoo_endpoint.mobile prefix",
                    "type": "string"
                },
                "realm": {
                    "default": "mobile.k.zswitch.net",
                    "description": "kazoo_endpoint.mobile realm",
                    "type": "string"
                },
                "sms": {
                    "properties": {
                        "connections": {
                            "properties": {
                                "default": {
                                    "default": {
                                        "exchange": "sms",
                                        "options": {
                                            "passive": true
                                        },
                                        "route": "sprint",
                                        "type": "topic"
                                    }
                                },
                                "description": "kazoo_endpoint.mobile connections",
                                "type": "object"
                            }
                        }
                    }
                },
                "sms_interface": {
                    "default": "amqp",
                    "description": "kazoo_endpoint.mobile sms interface",
                    "type": "string"
                },
                "suffix": {
                    "default": "",
                    "description": "kazoo_endpoint.mobile suffix",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.konami": {
            "description": "Schema for konami system_config",
            "properties": {
                "event_cleanup_timeout_ms": {
                    "default": 3600000,
                    "description": "konami event cleanup timeout in milliseconds",
                    "type": "integer"
                },
                "transfer": {
                    "properties": {
                        "default_takeback_dtmf": {
                            "properties": {
                                "default": "*1",
                                "description": "konami default takeback dtmf",
                                "type": "string"
                            }
                        },
                        "default_target_timeout_ms": {
                            "properties": {
                                "default": 20000,
                                "description": "konami default target timeout in milliseconds",
                                "type": "integer"
                            }
                        }
                    }
                },
                "use_fast_rearm": {
                    "default": false,
                    "description": "konami use fast rearm",
                    "type": "boolean"
                },
                "webseq_enabled": {
                    "default": false,
                    "description": "konami webseq enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.kzt_twiml_util": {
            "description": "Schema for kzt_twiml_util system_config",
            "properties": {
                "max_length": {
                    "default": 3600,
                    "description": "kzt_twiml_util maximum length",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.media": {
            "description": "Schema for media system_config",
            "properties": {
                "authenticated_playback": {
                    "default": false,
                    "description": "media authenticated playback",
                    "type": "boolean"
                },
                "authenticated_store": {
                    "default": true,
                    "description": "media authenticated store",
                    "type": "boolean"
                },
                "call_recording": {
                    "properties": {
                        "extension": {
                            "properties": {
                                "default": "mp3",
                                "description": "media extension",
                                "type": "string"
                            }
                        },
                        "storage_retry_times": {
                            "properties": {
                                "default": 5,
                                "description": "media storage retry times",
                                "type": "integer"
                            }
                        }
                    }
                },
                "default_language": {
                    "description": "media default language"
                },
                "fix_media_names": {
                    "default": true,
                    "description": "media fix media names",
                    "type": "boolean"
                },
                "max_recording_time_limit": {
                    "default": 3600,
                    "description": "media maximum recording time limit",
                    "type": "integer"
                },
                "normalize_destination_args": {
                    "default": "-r 8000",
                    "description": "media normalize destination args",
                    "type": "string"
                },
                "normalize_executable": {
                    "default": "sox",
                    "description": "media normalize executable",
                    "type": "string"
                },
                "normalize_source_args": {
                    "default": "",
                    "description": "media normalize source args",
                    "type": "string"
                },
                "proxy_hostname": {
                    "description": "media proxy hostname to be used with haproxy",
                    "type": "string"
                },
                "proxy_ip": {
                    "description": "media proxy ip",
                    "type": "string"
                },
                "proxy_listeners": {
                    "default": 25,
                    "description": "media proxy listeners",
                    "type": "integer"
                },
                "proxy_password": {
                    "description": "media proxy password",
                    "type": "string"
                },
                "proxy_port": {
                    "default": 24517,
                    "description": "media proxy port",
                    "type": "string"
                },
                "proxy_store_acls": {
                    "default": [
                        "127.0.0.0/24"
                    ],
                    "description": "media proxy store acls",
                    "type": "array"
                },
                "proxy_store_authenticate": {
                    "default": true,
                    "description": "media proxy store authenticate",
                    "type": "boolean"
                },
                "proxy_username": {
                    "description": "media proxy username",
                    "type": "string"
                },
                "record_min_sec": {
                    "default": 0,
                    "description": "media record minimum sec",
                    "type": "integer"
                },
                "ssl_cert": {
                    "description": "media ssl cert",
                    "type": "string"
                },
                "ssl_key": {
                    "description": "media ssl key",
                    "type": "string"
                },
                "ssl_password": {
                    "default": "",
                    "description": "media ssl password",
                    "type": "string"
                },
                "ssl_port": {
                    "default": 24518,
                    "description": "media ssl port",
                    "type": "integer"
                },
                "store_recordings": {
                    "default": false,
                    "description": "media store recordings",
                    "type": "boolean"
                },
                "support_account_overrides": {
                    "default": true,
                    "description": "media support account overrides",
                    "type": "boolean"
                },
                "tts_cache": {
                    "default": 3600000,
                    "description": "media tts cache",
                    "type": "integer"
                },
                "use_https": {
                    "default": false,
                    "description": "media use https",
                    "type": "boolean"
                },
                "use_plaintext": {
                    "default": true,
                    "description": "media use plaintext",
                    "type": "boolean"
                },
                "use_ssl_proxy": {
                    "default": false,
                    "description": "media use ssl proxy",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.metaflows": {
            "description": "Schema for metaflows system_config",
            "properties": {
                "binding_digit": {
                    "default": "*",
                    "description": "metaflows binding digit",
                    "type": "string"
                },
                "default_metaflow": {
                    "default": {},
                    "description": "metaflows default metaflow",
                    "type": "object"
                },
                "digit_timeout_ms": {
                    "default": 800,
                    "description": "metaflows digit timeout in milliseconds",
                    "type": "integer"
                },
                "listen_on": {
                    "default": "a",
                    "description": "metaflows listen on",
                    "type": "string"
                },
                "numbers": {
                    "default": {
                        "2": {
                            "data": {
                                "text": "hi"
                            },
                            "module": "say"
                        }
                    },
                    "description": "metaflows numbers",
                    "type": "object"
                },
                "patterns": {
                    "default": {
                        "^2$": {
                            "data": {
                                "text": "hi"
                            },
                            "module": "say"
                        }
                    },
                    "description": "metaflows patterns",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "system_config.milliwatt": {
            "description": "Schema for milliwatt system_config",
            "properties": {
                "echo": {
                    "default": {
                        "caller_id": [],
                        "number": [
                            "5555555552"
                        ]
                    },
                    "description": "milliwatt echo",
                    "type": "object"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "milliwatt route win timeout",
                    "type": "integer"
                },
                "tone": {
                    "default": {
                        "caller_id": [],
                        "number": [
                            "5555555551"
                        ]
                    },
                    "description": "milliwatt tone",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "system_config.mobile_manager": {
            "description": "Schema for mobile_manager system_config",
            "properties": {
                "url": {
                    "description": "mobile_manager url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.modb": {
            "description": "Schema for modb system_config",
            "properties": {
                "active_modbs": {
                    "default": 6,
                    "description": "modb active modbs",
                    "type": "integer"
                },
                "routines": {
                    "default": [],
                    "description": "modb routines",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.notify": {
            "description": "Schema for notify system_config",
            "properties": {
                "autoload_modules": {
                    "default": [
                        "teletype_account_zone_change",
                        "teletype_cnam_request",
                        "teletype_customer_update",
                        "teletype_denied_emergency_bridge",
                        "teletype_deregister",
                        "teletype_fax_inbound_error_to_email",
                        "teletype_fax_inbound_to_email",
                        "teletype_fax_outbound_error_to_email",
                        "teletype_fax_outbound_to_email",
                        "teletype_first_occurrence",
                        "teletype_low_balance",
                        "teletype_new_account",
                        "teletype_new_user",
                        "teletype_password_recovery",
                        "teletype_port_cancel",
                        "teletype_port_comment",
                        "teletype_ported",
                        "teletype_port_pending",
                        "teletype_port_rejected",
                        "teletype_port_request_admin",
                        "teletype_port_request",
                        "teletype_port_scheduled",
                        "teletype_port_unconfirmed",
                        "teletype_service_added",
                        "teletype_system_alert",
                        "teletype_template_skel",
                        "teletype_topup",
                        "teletype_transaction",
                        "teletype_voicemail_full",
                        "teletype_voicemail_to_email",
                        "teletype_webhook_disabled"
                    ],
                    "description": "teletype modules to start when teletype is started",
                    "type": "array"
                },
                "backoff_fudge_ms": {
                    "default": 5000,
                    "description": "notify backoff fudge in milliseconds",
                    "type": "integer"
                },
                "notification_app": {
                    "default": "teletype",
                    "description": "notify notification app",
                    "type": "string"
                },
                "search_rep_email": {
                    "default": true,
                    "description": "notify search rep email",
                    "type": "boolean"
                },
                "use_federated_listener": {
                    "default": false,
                    "description": "notify use federated listener",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.notify.account_crawler": {
            "description": "Schema for notify.account_crawler system_config",
            "properties": {
                "crawl_for_first_occurrence": {
                    "default": true,
                    "description": "notify.account_crawler crawl for first occurrence",
                    "type": "boolean"
                },
                "crawl_for_low_balance": {
                    "default": true,
                    "description": "notify.account_crawler crawl for low balance",
                    "type": "boolean"
                },
                "interaccount_delay": {
                    "default": 10000,
                    "description": "notify.account_crawler interaccount delay",
                    "type": "integer"
                },
                "low_balance_repeat_s": {
                    "default": 86400,
                    "description": "notify.account_crawler low balance repeat in seconds",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.cnam_request": {
            "description": "Schema for notify.cnam_request system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.cnam_request default to",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.deregister": {
            "description": "Schema for notify.deregister system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.deregister default to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.deregister html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.deregister text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.fax": {
            "description": "Schema for notify.fax system_config",
            "properties": {
                "attachment_format": {
                    "default": "pdf",
                    "description": "notify.fax attachment format",
                    "type": "string"
                },
                "tiff_to_pdf_conversion_command": {
                    "default": "tiff2pdf -o ~s ~s &> /dev/null && echo -n \"success\"",
                    "description": "notify.fax tiff to pdf conversion command",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.fax_inbound_error_to_email": {
            "description": "Schema for notify.fax_inbound_error_to_email system_config",
            "properties": {
                "default_enabled": {
                    "default": false,
                    "description": "notify.fax_inbound_error_to_email default enabled",
                    "type": "boolean"
                },
                "default_to": {
                    "description": "notify.fax_inbound_error_to_email default to"
                },
                "filter_error_codes": {
                    "default": [
                        "0",
                        "49"
                    ],
                    "description": "notify.fax_inbound_error_to_email filter error codes",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.notify.fax_inbound_to_email": {
            "description": "Schema for notify.fax_inbound_to_email system_config",
            "properties": {
                "default_to": {
                    "description": "notify.fax_inbound_to_email default to"
                }
            },
            "type": "object"
        },
        "system_config.notify.fax_outbound_error_to_email": {
            "description": "Schema for notify.fax_outbound_error_to_email system_config",
            "properties": {
                "default_enabled": {
                    "default": true,
                    "description": "notify.fax_outbound_error_to_email default enabled",
                    "type": "boolean"
                },
                "default_to": {
                    "description": "notify.fax_outbound_error_to_email default to"
                }
            },
            "type": "object"
        },
        "system_config.notify.fax_outbound_to_email": {
            "description": "Schema for notify.fax_outbound_to_email system_config",
            "properties": {
                "default_to": {
                    "description": "notify.fax_outbound_to_email default to"
                }
            },
            "type": "object"
        },
        "system_config.notify.first_occurrence": {
            "description": "Schema for notify.first_occurrence system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.first_occurrence default to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.first_occurrence html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.first_occurrence text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.low_balance": {
            "description": "Schema for notify.low_balance system_config",
            "properties": {
                "default_enabled": {
                    "default": false,
                    "description": "notify.low_balance default enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.notify.new_account": {
            "description": "Schema for notify.new_account system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.new_account default to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.new_account html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.new_account text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.password_recovery": {
            "description": "Schema for notify.password_recovery system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.password_recovery default to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.password_recovery html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.password_recovery text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.port_cancel": {
            "description": "Schema for notify.port_cancel system_config",
            "properties": {
                "default_from": {
                    "description": "notify.port_cancel default from",
                    "type": "string"
                },
                "default_to": {
                    "default": "",
                    "description": "notify.port_cancel default to",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.port_request": {
            "description": "Schema for notify.port_request system_config",
            "properties": {
                "default_from": {
                    "description": "notify.port_request default from",
                    "type": "string"
                },
                "default_to": {
                    "default": "",
                    "description": "notify.port_request default to",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.port_request_admin": {
            "description": "Schema for notify.port_request_admin system_config",
            "properties": {
                "default_to": {
                    "description": "notify.port_request_admin default to"
                }
            },
            "type": "object"
        },
        "system_config.notify.ported": {
            "description": "Schema for notify.ported system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.ported default to",
                    "type": "string"
                },
                "send_from_admin_email": {
                    "default": true,
                    "description": "notify.ported send from admin email",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.notify.system_alert": {
            "description": "Schema for notify.system_alert system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.system_alert default to",
                    "type": "string"
                },
                "enable_email_alerts": {
                    "default": true,
                    "description": "notify.system_alert enable email alerts",
                    "type": "boolean"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.system_alert html content transfer encoding",
                    "type": "string"
                },
                "subscriber_url": {
                    "description": "notify.system_alert subscriber url",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.system_alert text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.topup": {
            "description": "Schema for notify.topup system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.topup default to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.topup html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.topup text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.transaction": {
            "description": "Schema for notify.transaction system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.transaction default to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.transaction html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.transaction text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.notify.voicemail_full": {
            "description": "Schema for notify.voicemail_full system_config",
            "properties": {
                "default_enabled": {
                    "default": false,
                    "description": "notify.voicemail_full default enabled",
                    "type": "boolean"
                },
                "default_to": {
                    "description": "notify.voicemail_full default to"
                }
            },
            "type": "object"
        },
        "system_config.notify.voicemail_to_email": {
            "description": "Schema for notify.voicemail_to_email system_config",
            "properties": {
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.voicemail_to_email html content transfer encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.voicemail_to_email text content transfer encoding",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.number_manager": {
            "description": "Schema for number_manager system_config",
            "properties": {
                "allow_port_transition_from_submitted_to_scheduled": {
                    "default": false,
                    "description": "Should number ports be allowed to transition from submitted to scheduled?",
                    "type": "boolean"
                },
                "available_module_name": {
                    "default": "knm_local",
                    "description": "number_manager available module name",
                    "type": "string"
                },
                "carrier_modules": {
                    "default": [
                        "knm_local"
                    ],
                    "description": "number_manager carrier modules",
                    "type": "array"
                },
                "classifiers": {
                    "default": {
                        "caribbean": {
                            "friendly_name": "Caribbean",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+?1((?:684|264|268|242|246|441|284|345|767|809|829|849|473|671|876|664|670|787|939|869|758|784|721|868|649|340)\\d{7})$"
                        },
                        "did_us": {
                            "friendly_name": "US DID",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$"
                        },
                        "emergency": {
                            "emergency": true,
                            "friendly_name": "Emergency Dispatcher",
                            "regex": "^(911)$"
                        },
                        "international": {
                            "friendly_name": "International",
                            "regex": "^(011\\d*)$|^(00\\d*)$"
                        },
                        "toll_us": {
                            "friendly_name": "US Toll",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+1(900\\d{7})$"
                        },
                        "tollfree_us": {
                            "friendly_name": "US TollFree",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+1((?:800|88\\d|877|866|855|844|833|822)\\d{7})$"
                        },
                        "unknown": {
                            "friendly_name": "Unknown",
                            "regex": "^(.*)$"
                        }
                    },
                    "description": "number_manager classifiers",
                    "type": "object"
                },
                "converters": {
                    "default": [
                        "regex"
                    ],
                    "description": "number_manager converters",
                    "type": "array"
                },
                "default_force_outbound": {
                    "default": false,
                    "description": "number_manager default force outbound",
                    "type": "boolean"
                },
                "e164_converters": {
                    "description": "number_manager e164 converters"
                },
                "features": {
                    "properties": {
                        "allow": {
                            "properties": {
                                "description": "Number features a number is allowed to enable or disable"
                            }
                        }
                    }
                },
                "fetch_account_from_ports": {
                    "default": true,
                    "description": "number_manager fetch account from ports",
                    "type": "boolean"
                },
                "force_local_outbound": {
                    "default": true,
                    "description": "number_manager force local outbound",
                    "type": "boolean"
                },
                "force_port_in_outbound": {
                    "default": true,
                    "description": "number_manager force port in outbound",
                    "type": "boolean"
                },
                "force_port_out_outbound": {
                    "default": true,
                    "description": "number_manager force port out outbound",
                    "type": "boolean"
                },
                "local_feature_override": {
                    "default": false,
                    "description": "overrides the filtering of external features for local numbers",
                    "type": "boolean"
                },
                "maximum_search_quantity": {
                    "default": 500,
                    "description": "maximum number of returned DIDs in search query",
                    "type": "integer"
                },
                "number_search_timeout_ms": {
                    "default": 5000,
                    "description": "number manager number search timeout in milliseconds",
                    "type": "integer"
                },
                "port_in_module_name": {
                    "default": "knm_local",
                    "description": "the kazoo number manager module name that completed port request numbers should be created with",
                    "type": "string"
                },
                "providers": {
                    "description": "Number features sub accounts are allowed to enable or disable"
                },
                "reconcile_regex": {
                    "default": "^\\+?1?\\d{10}$|^\\+[2-9]\\d{7,}$|^011\\d*$|^00\\d*$",
                    "description": "number_manager reconcile regex",
                    "type": "string"
                },
                "released_state": {
                    "default": "available",
                    "description": "number_manager released state",
                    "type": "string"
                },
                "should_age": {
                    "default": false,
                    "description": "number_manager should age",
                    "type": "boolean"
                },
                "should_permanently_delete": {
                    "description": "number_manager should permanently delete",
                    "type": "boolean"
                },
                "time_between_accounts_ms": {
                    "default": 1000,
                    "description": "number_manager time between accounts in milliseconds",
                    "type": "integer"
                },
                "time_between_numbers_ms": {
                    "default": 1000,
                    "description": "number_manager time between numbers in milliseconds",
                    "type": "integer"
                },
                "unauthorized_numbers_lookup": {
                    "default": false,
                    "description": "number_manager unauthorized numbers lookup",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.bandwidth": {
            "description": "Schema for number_manager.bandwidth system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "number_manager.bandwidth debug",
                    "type": "boolean"
                },
                "developer_key": {
                    "default": "",
                    "description": "number_manager.bandwidth developer key",
                    "type": "string"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth enable provisioning",
                    "type": "boolean"
                },
                "endpoints": {
                    "description": "number_manager.bandwidth endpoints"
                },
                "numbers_api_url": {
                    "default": "https://api.bandwidth.com/public/v2/numbers.api",
                    "description": "number_manager.bandwidth numbers api url",
                    "type": "string"
                },
                "order_name_prefix": {
                    "default": "Kazoo",
                    "description": "number_manager.bandwidth order name prefix",
                    "type": "string"
                },
                "sandbox_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth sandbox provisioning",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.bandwidth2": {
            "description": "Schema for number_manager.bandwidth2 system_config",
            "properties": {
                "account_id": {
                    "default": "",
                    "description": "number_manager.bandwidth2 account id",
                    "type": "string"
                },
                "api_password": {
                    "default": "",
                    "description": "number_manager.bandwidth2 api password",
                    "type": "string"
                },
                "api_username": {
                    "default": "",
                    "description": "number_manager.bandwidth2 api username",
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "number_manager.bandwidth2 debug",
                    "type": "boolean"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth2 enable provisioning",
                    "type": "boolean"
                },
                "max_search_quantity": {
                    "default": 500,
                    "description": "number_manager.bandwidth2 max search quantity",
                    "type": "integer"
                },
                "order_name_prefix": {
                    "default": "Kazoo",
                    "description": "number_manager.bandwidth2 order name prefix",
                    "type": "string"
                },
                "sandbox_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth2 sandbox provisioning",
                    "type": "boolean"
                },
                "sip_peer": {
                    "default": "",
                    "description": "number_manager.bandwidth2 sip peer",
                    "type": "string"
                },
                "site_id": {
                    "default": "",
                    "description": "number_manager.bandwidth2 site id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.dash_e911": {
            "description": "Schema for number_manager.dash_e911 system_config",
            "properties": {
                "auth_password": {
                    "default": "",
                    "description": "number_manager.dash_e911 auth password",
                    "type": "string"
                },
                "auth_username": {
                    "default": "",
                    "description": "number_manager.dash_e911 auth username",
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "number_manager.dash_e911 debug",
                    "type": "boolean"
                },
                "emergency_provisioning_url": {
                    "default": "https://service.dashcs.com/dash-api/xml/emergencyprovisioning/v1",
                    "description": "number_manager.dash_e911 emergency provisioning url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.locality": {
            "description": "Schema for number_manager.locality system_config",
            "properties": {
                "url": {
                    "description": "number_manager.locality url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.other": {
            "description": "Schema for number_manager.other system_config",
            "properties": {
                "default_country": {
                    "default": "US",
                    "description": "number_manager.other default country",
                    "type": "string"
                },
                "endpoints": {
                    "description": "number_manager.other endpoints"
                },
                "phonebook_url": {
                    "description": "number_manager.other phonebook url"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.port_request": {
            "description": "Schema for number_manager.port_request system_config",
            "properties": {
                "crawler_delay_time_ms": {
                    "default": 60000,
                    "description": "number_manager.port_request crawler delay time in milliseconds",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.simwood": {
            "description": "Schema for number_manager.simwood system_config",
            "properties": {
                "auth_password": {
                    "default": "",
                    "description": "number_manager.simwood auth password",
                    "type": "string"
                },
                "auth_username": {
                    "default": "",
                    "description": "number_manager.simwood auth username",
                    "type": "string"
                },
                "numbers_api_url": {
                    "default": "https://api.simwood.com/v3/numbers",
                    "description": "number_manager.simwood numbers api url",
                    "type": "string"
                },
                "simwood_account_id": {
                    "default": "",
                    "description": "number_manager.simwood simwood account id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.telnyx": {
            "description": "Schema for number_manager.telnyx system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "number_manager.telnyx debug",
                    "type": "boolean"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.telnyx enable provisioning",
                    "type": "boolean"
                },
                "monthly_recurring_cost": {
                    "default": 1.0,
                    "description": "number_manager.telnyx monthly recurring cost",
                    "type": "number"
                },
                "sandbox_provisioning": {
                    "default": false,
                    "description": "number_manager.telnyx sandbox provisioning",
                    "type": "boolean"
                },
                "should_filter_rates": {
                    "default": false,
                    "description": "number_manager.telnyx should filter rates",
                    "type": "boolean"
                },
                "should_keep_best_effort": {
                    "default": false,
                    "description": "number_manager.telnyx should keep best effort",
                    "type": "boolean"
                },
                "token": {
                    "description": "number_manager.telnyx token",
                    "type": "string"
                },
                "upfront_cost": {
                    "default": 1.0,
                    "description": "number_manager.telnyx upfront cost",
                    "type": "number"
                },
                "user": {
                    "description": "number_manager.telnyx user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.vitelity": {
            "description": "Schema for number_manager.vitelity system_config",
            "properties": {
                "api_uri": {
                    "default": "http://api.vitelity.net/api.php",
                    "description": "number_manager.vitelity api uri",
                    "type": "string"
                },
                "routesip": {
                    "description": "number_manager.vitelity routesip"
                }
            },
            "type": "object"
        },
        "system_config.number_manager.voip_innovations": {
            "description": "Schema for number_manager.voip_innovations system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "number_manager.voip_innovations debug",
                    "type": "boolean"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.voip_innovations enable provisioning",
                    "type": "boolean"
                },
                "endpoint_group": {
                    "default": "",
                    "description": "number_manager.voip_innovations endpoint group",
                    "type": "string"
                },
                "login": {
                    "default": "",
                    "description": "number_manager.voip_innovations login",
                    "type": "string"
                },
                "password": {
                    "default": "",
                    "description": "number_manager.voip_innovations password",
                    "type": "string"
                },
                "sandbox_provisioning": {
                    "default": false,
                    "description": "number_manager.voip_innovations sandbox provisioning",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.omnipresence": {
            "description": "Schema for omnipresence system_config",
            "properties": {
                "dialog_subscribed_mwi_prefix": {
                    "default": "*98",
                    "description": "prefix used when subsribing vm updates for dialog",
                    "type": "string"
                },
                "expire_check_ms": {
                    "default": 1000,
                    "description": "omnipresence expire check in milliseconds",
                    "type": "integer"
                },
                "expires_fudge_s": {
                    "default": 20,
                    "description": "omnipresence expires fudge in seconds",
                    "type": "integer"
                },
                "subscriptions_sync_enabled": {
                    "default": false,
                    "description": "omnipresence subscriptions sync enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.pivot": {
            "description": "Schema for pivot system_config",
            "properties": {
                "tts_texts_size": {
                    "default": 4000,
                    "description": "pivot tts texts size",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.privacy": {
            "description": "Schema for privacy system_config",
            "properties": {
                "block_anonymous_caller_id": {
                    "default": false,
                    "description": "Controls blocking of anonymous calls",
                    "type": "boolean"
                },
                "privacy_mode": {
                    "default": "kazoo",
                    "description": "Default privacy mode for anonymous calls",
                    "type": "string"
                },
                "privacy_name": {
                    "default": "anonymous",
                    "description": "Default Caller ID Name should be shown for anonymous calls",
                    "type": "string"
                },
                "privacy_number": {
                    "default": "0000000000",
                    "description": "Default Caller ID Number should be shown for anonymous calls",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.provisioner": {
            "description": "Schema for provisioner system_config",
            "properties": {
                "cluster_id": {
                    "description": "provisioner cluster id",
                    "type": "string"
                },
                "feature_keys": {
                    "default": {
                        "cisco": {
                            "_": {
                                "parking": "",
                                "personal_parking": "",
                                "presence": "",
                                "speed_dial": ""
                            }
                        },
                        "polycom": {
                            "_": {
                                "parking": "automata",
                                "personal_parking": "automata",
                                "presence": "normal",
                                "speed_dial": "normal"
                            }
                        },
                        "yealink": {
                            "_": {
                                "parking": "10",
                                "personal_parking": "10",
                                "presence": "16",
                                "speed_dial": "13"
                            }
                        }
                    },
                    "description": "provisioner feature keys",
                    "type": "object"
                },
                "provisioning_type": {
                    "description": "provisioner provisioning type"
                },
                "provisioning_url": {
                    "description": "provisioner provisioning url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.pusher": {
            "description": "Schema for pusher system_config",
            "properties": {
                "User-Agents": {
                    "default": {},
                    "description": "pusher User-Agents",
                    "type": "object"
                },
                "apple": {
                    "description": "pusher apple",
                    "type": "string"
                },
                "google": {
                    "description": "pusher google",
                    "type": "string"
                },
                "modules": {
                    "default": [],
                    "description": "pusher modules",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.registrar": {
            "description": "Schema for registrar system_config",
            "properties": {
                "device_enabled_default": {
                    "default": true,
                    "description": "registrar device enabled default",
                    "type": "boolean"
                },
                "listeners": {
                    "default": 1,
                    "description": "registrar listeners",
                    "type": "integer"
                },
                "owner_enabled_default": {
                    "default": true,
                    "description": "registrar owner enabled default",
                    "type": "boolean"
                },
                "use_aggregate": {
                    "default": true,
                    "description": "registrar use aggregate",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.reorder": {
            "description": "Schema for reorder system_config",
            "properties": {
                "assume_inbound_e164": {
                    "description": "reorder assume inbound e164",
                    "type": "boolean"
                },
                "known-error-code": {
                    "default": "686",
                    "description": "reorder known-error-code",
                    "type": "string"
                },
                "known-error-message": {
                    "default": "PEBCAK",
                    "description": "reorder known-error-message",
                    "type": "string"
                },
                "unknown-error-code": {
                    "default": "604",
                    "description": "reorder unknown-error-code",
                    "type": "string"
                },
                "unknown-error-message": {
                    "default": "Nope Nope Nope",
                    "description": "reorder unknown-error-message",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.servers": {
            "description": "Schema for servers system_config",
            "properties": {
                "clock_timezone": {
                    "default": "UTC",
                    "description": "servers clock timezone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.services": {
            "description": "Schema for services system_config",
            "properties": {
                "default_allow_updates": {
                    "default": true,
                    "description": "services default allow updates",
                    "type": "boolean"
                },
                "master_account_bookkeeper": {
                    "default": "kz_bookkeeper_local",
                    "description": "services master account bookkeeper",
                    "type": "string"
                },
                "modules": {
                    "description": "services modules"
                },
                "scan_rate": {
                    "default": 20000,
                    "description": "services scan rate",
                    "type": "integer"
                },
                "should_save_master_audit_logs": {
                    "default": false,
                    "description": "services should save master audit logs",
                    "type": "boolean"
                },
                "support_billing_id": {
                    "default": true,
                    "description": "services support billing id",
                    "type": "boolean"
                },
                "sync_buffer_period": {
                    "default": 600,
                    "description": "services sync buffer period",
                    "type": "integer"
                },
                "sync_services": {
                    "default": false,
                    "description": "services sync services",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.services.http_sync": {
            "description": "Schema for services.http_sync system_config",
            "properties": {
                "authorization_header": {
                    "default": "",
                    "description": "services http sync authorization header",
                    "type": "string"
                },
                "connect_timeout_ms": {
                    "default": 10000,
                    "description": "services http sync connect timeout in milliseconds",
                    "type": "integer"
                },
                "http_url": {
                    "default": "",
                    "description": "services http sync http url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.sms": {
            "description": "Schema for sms system_config",
            "properties": {
                "outbound": {
                    "properties": {
                        "options": {
                            "properties": {
                                "default": {
                                    "delivery_mode": 2,
                                    "mandatory": true
                                },
                                "description": "sms options",
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "system_config.sms_command": {
            "description": "Schema for sms_command system_config",
            "properties": {
                "application_timeout": {
                    "default": 500000,
                    "description": "sms_command application timeout",
                    "type": "integer"
                },
                "collect_timeout": {
                    "default": 60000,
                    "description": "sms_command collect timeout",
                    "type": "integer"
                },
                "message_timeout": {
                    "default": 60000,
                    "description": "sms_command message timeout",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.smtp_client": {
            "description": "Schema for smtp_client system_config",
            "properties": {
                "auth": {
                    "default": "never",
                    "description": "smtp_client auth",
                    "type": "string"
                },
                "no_mx_lookups": {
                    "default": true,
                    "description": "smtp_client no mx lookups",
                    "type": "boolean"
                },
                "password": {
                    "default": "",
                    "description": "smtp_client password",
                    "type": "string"
                },
                "port": {
                    "default": 25,
                    "description": "smtp_client port",
                    "type": "integer"
                },
                "relay": {
                    "default": "localhost",
                    "description": "smtp_client relay",
                    "type": "string"
                },
                "retries": {
                    "default": 1,
                    "description": "smtp_client retries",
                    "type": "integer"
                },
                "tls": {
                    "description": "smtp_client tls"
                },
                "use_ssl": {
                    "default": false,
                    "description": "smtp_client use ssl",
                    "type": "boolean"
                },
                "username": {
                    "default": "",
                    "description": "smtp_client username",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.speech": {
            "description": "Schema for speech system_config",
            "properties": {
                "asr_api_key": {
                    "default": "",
                    "description": "speech asr api key",
                    "type": "string"
                },
                "asr_content_types": {
                    "default": [
                        "application/mpeg",
                        "application/wav"
                    ],
                    "description": "speech asr content types",
                    "type": "array"
                },
                "asr_freeform_url": {
                    "default": "http://api.ispeech.org/api/rest",
                    "description": "speech asr freeform url",
                    "type": "string"
                },
                "asr_prefered_content_type": {
                    "default": "application/mpeg",
                    "description": "speech asr prefered content type",
                    "type": "string"
                },
                "asr_provider": {
                    "default": "ispeech",
                    "description": "speech asr provider",
                    "type": "string"
                },
                "asr_url": {
                    "default": "http://api.ispeech.org/api/json",
                    "description": "speech asr url",
                    "type": "string"
                },
                "temporary_storage_path": {
                    "default": "/tmp",
                    "description": "speech temporary storage path",
                    "type": "string"
                },
                "tts_api_key": {
                    "default": "",
                    "description": "speech tts api key",
                    "type": "string"
                },
                "tts_args_encode": {
                    "default": "multipart",
                    "description": "speech tts args encode",
                    "type": "string"
                },
                "tts_default_voice": {
                    "default": "female/en-US",
                    "description": "speech tts default voice",
                    "type": "string"
                },
                "tts_end_padding": {
                    "default": 0,
                    "description": "speech tts end padding",
                    "type": "integer"
                },
                "tts_language": {
                    "default": "en-US",
                    "description": "speech tts language",
                    "type": "string"
                },
                "tts_provider": {
                    "default": "flite",
                    "description": "speech tts provider",
                    "type": "string"
                },
                "tts_speed": {
                    "default": 0,
                    "description": "speech tts speed",
                    "type": "integer"
                },
                "tts_start_padding": {
                    "default": 1,
                    "description": "speech tts start padding",
                    "type": "integer"
                },
                "tts_url_ispeech": {
                    "default": "http://api.ispeech.org/api/json",
                    "description": "speech TTS URL for iSpeech provider",
                    "type": "string"
                },
                "tts_url_voicefabric": {
                    "default": "https://voicefabric.ru/WSServer/ws/tts",
                    "description": "speech TTS URL for VoiceFabric provider",
                    "type": "string"
                },
                "tts_voice": {
                    "default": "male",
                    "description": "speech tts voice",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.stepswitch": {
            "description": "Schema for stepswitch system_config",
            "properties": {
                "assume_inbound_e164": {
                    "default": false,
                    "description": "stepswitch assume inbound e164",
                    "type": "boolean"
                },
                "cid_rules_honor_diversions": {
                    "default": false,
                    "description": "stepswitch cid rules honor diversions",
                    "type": "boolean"
                },
                "default_audio_codecs": {
                    "default": [],
                    "description": "stepswitch default audio codecs",
                    "type": "array"
                },
                "default_bypass_media": {
                    "default": false,
                    "description": "stepswitch default bypass media",
                    "type": "boolean"
                },
                "default_caller_id_type": {
                    "default": "external",
                    "description": "stepswitch default caller id type",
                    "type": "string"
                },
                "default_codecs": {
                    "default": [],
                    "description": "stepswitch default codecs",
                    "type": "array"
                },
                "default_emergency_cid_number": {
                    "description": "stepswitch default emergency cid number"
                },
                "default_formatters": {
                    "description": "stepswitch default formatters"
                },
                "default_prefix": {
                    "default": "",
                    "description": "stepswitch default prefix",
                    "type": "string"
                },
                "default_progress_timeout": {
                    "default": 8,
                    "description": "stepswitch default progress timeout",
                    "type": "integer"
                },
                "default_route": {
                    "description": "stepswitch default route",
                    "type": "string"
                },
                "default_suffix": {
                    "default": "",
                    "description": "stepswitch default suffix",
                    "type": "string"
                },
                "default_video_codecs": {
                    "default": [],
                    "description": "stepswitch default video codecs",
                    "type": "array"
                },
                "default_weight": {
                    "default": 3,
                    "description": "stepswitch default weight",
                    "type": "integer"
                },
                "deny_emergency_bridge_cause": {
                    "default": "Emergency service not configured",
                    "description": "stepswitch deny emergency bridge cause",
                    "type": "string"
                },
                "deny_emergency_bridge_code": {
                    "default": 486,
                    "description": "stepswitch deny emergency bridge code",
                    "type": "string"
                },
                "deny_emergency_bridge_media": {
                    "default": "prompt://system_media/stepswitch-emergency_not_configured/",
                    "description": "stepswitch deny emergency bridge media",
                    "type": "string"
                },
                "deny_invalid_emergency_cid": {
                    "default": false,
                    "description": "stepswitch deny invalid emergency cid",
                    "type": "boolean"
                },
                "ensure_valid_emergency_cid": {
                    "default": false,
                    "description": "stepswitch ensure valid emergency cid",
                    "type": "boolean"
                },
                "format_from_uri": {
                    "default": false,
                    "description": "stepswitch format from uri",
                    "type": "boolean"
                },
                "max_shortdial_correction": {
                    "default": 5,
                    "description": "stepswitch maximum shortdial correction",
                    "type": "integer"
                },
                "min_shortdial_correction": {
                    "default": 2,
                    "description": "stepswitch minimum shortdial correction",
                    "type": "integer"
                },
                "route_by": {
                    "default": "stepswitch_resources",
                    "description": "stepswitch route by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.stepswitch.cnam": {
            "description": "Schema for stepswitch.cnam system_config",
            "properties": {
                "cnam_expires": {
                    "default": 900,
                    "description": "stepswitch.cnam cnam expires",
                    "type": "integer"
                },
                "disable_normalize": {
                    "default": false,
                    "description": "stepswitch.cnam disable normalize",
                    "type": "boolean"
                },
                "http_accept_header": {
                    "default": "text/pbx,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                    "description": "stepswitch.cnam http accept header",
                    "type": "string"
                },
                "http_basic_auth_password": {
                    "default": "",
                    "description": "stepswitch.cnam http basic auth password",
                    "type": "string"
                },
                "http_basic_auth_username": {
                    "default": "",
                    "description": "stepswitch.cnam http basic auth username",
                    "type": "string"
                },
                "http_body": {
                    "default": "",
                    "description": "stepswitch.cnam http body",
                    "type": "string"
                },
                "http_connect_timeout_ms": {
                    "default": 500,
                    "description": "stepswitch.cnam http connect timeout in milliseconds",
                    "type": "integer"
                },
                "http_content_type_header": {
                    "default": "application/json",
                    "description": "stepswitch.cnam http content type header",
                    "type": "string"
                },
                "http_method": {
                    "default": "get",
                    "description": "stepswitch.cnam http method",
                    "type": "string"
                },
                "http_url": {
                    "default": "https://api.opencnam.com/v2/phone/{{phone_number}}",
                    "description": "stepswitch.cnam http url",
                    "type": "string"
                },
                "http_user_agent_header": {
                    "default": "Kazoo Stepswitch CNAM",
                    "description": "stepswitch.cnam http user agent header",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.sysconf": {
            "description": "Schema for sysconf system_config",
            "properties": {
                "acl_request_timeout_fudge_ms": {
                    "default": 100,
                    "description": "sysconf acl request timeout fudge in milliseconds",
                    "type": "integer"
                },
                "acl_request_timeout_ms": {
                    "default": 2000,
                    "description": "sysconf acl request timeout in milliseconds",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.tasks": {
            "description": "Schema for tasks system_config",
            "properties": {
                "aging_expiry_d": {
                    "default": 90,
                    "description": "tasks aging expiry in days",
                    "type": "integer"
                },
                "browse_dbs_interval_s": {
                    "default": 86400,
                    "description": "tasks browse dbs interval in seconds",
                    "type": "integer"
                },
                "crawler_delay_time_ms": {
                    "default": 60000,
                    "description": "tasks crawler delay time in milliseconds",
                    "type": "integer"
                },
                "crawler_timer_ms": {
                    "default": 86400000,
                    "description": "tasks crawler timer in milliseconds",
                    "type": "integer"
                },
                "cycle_delay_time_ms": {
                    "default": 300000,
                    "description": "tasks cycle delay time in milliseconds",
                    "type": "integer"
                },
                "discovery_expiry_d": {
                    "default": 1,
                    "description": "tasks discovery expiry in days",
                    "type": "integer"
                },
                "interaccount_delay_ms": {
                    "default": 10000,
                    "description": "tasks interaccount delay in milliseconds",
                    "type": "integer"
                },
                "low_balance_repeat_s": {
                    "default": 86400,
                    "description": "tasks low balance repeat in seconds",
                    "type": "integer"
                },
                "send_progress_after_processed": {
                    "default": 1000,
                    "description": "tasks send progress after processed",
                    "type": "integer"
                },
                "should_archive_modbs": {
                    "default": false,
                    "description": "tasks should archive modbs",
                    "type": "boolean"
                },
                "should_crawl_for_first_occurrence": {
                    "default": true,
                    "description": "tasks should crawl for first occurrence",
                    "type": "boolean"
                },
                "should_crawl_for_low_balance": {
                    "default": true,
                    "description": "tasks should crawl for low balance",
                    "type": "boolean"
                },
                "soft_delete_pause_ms": {
                    "default": 10000,
                    "description": "tasks soft delete pause in milliseconds",
                    "type": "integer"
                },
                "unfinished_port_request_lifetime_s": {
                    "default": 2592000,
                    "description": "tasks unfinished port request lifetime in seconds",
                    "type": "integer"
                },
                "wait_after_row_ms": {
                    "default": 500,
                    "description": "tasks wait after row in milliseconds",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.tasks.numbers": {
            "description": "Schema for tasks.numbers system_config",
            "properties": {
                "import_defaults_to_carrier": {
                    "default": "knm_local",
                    "description": "carrier module to use if none provided during numbers import",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.teletype": {
            "description": "Schema for teletype system_config",
            "properties": {
                "iterate_over_bcc": {
                    "default": true,
                    "description": "teletype iterate over bcc",
                    "type": "boolean"
                },
                "render_farm_workers": {
                    "default": 50,
                    "description": "teletype render farm workers",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "system_config.token_buckets": {
            "description": "Schema for token_buckets system_config",
            "properties": {
                "default": {
                    "properties": {
                        "max_bucket_tokens": {
                            "properties": {
                                "default": 100,
                                "description": "token_buckets maximum bucket tokens",
                                "type": "integer"
                            }
                        }
                    }
                },
                "inactivity_timeout_s": {
                    "default": 600,
                    "description": "token_buckets inactivity timeout in seconds",
                    "type": "integer"
                },
                "tokens_fill_rate": {
                    "default": 10,
                    "description": "token_buckets tokens fill rate",
                    "type": "integer"
                },
                "tokens_fill_time": {
                    "default": "second",
                    "description": "token_buckets tokens fill time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "system_config.topup": {
            "description": "Schema for topup system_config",
            "properties": {
                "enable": {
                    "default": false,
                    "description": "topup enable",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.trunkstore": {
            "description": "Schema for trunkstore system_config",
            "properties": {
                "default_caller_id_number": {
                    "description": "trunkstore default caller id number",
                    "type": "string"
                },
                "default_hunt_non_reconcilable": {
                    "default": false,
                    "description": "trunkstore default hunt non reconcilable",
                    "type": "boolean"
                },
                "ensure_valid_caller_id": {
                    "default": false,
                    "description": "trunkstore ensure valid caller id",
                    "type": "boolean"
                },
                "honor_diversions_by_cid_validation": {
                    "default": false,
                    "description": "trunkstore honor diversions by cid validation",
                    "type": "boolean"
                },
                "ring_ready_offnet": {
                    "default": true,
                    "description": "trunkstore ring ready offnet",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "system_config.webhooks": {
            "description": "Schema for webhooks system_config",
            "properties": {
                "attempt_failure_count": {
                    "default": 6,
                    "description": "webhooks attempt failure count",
                    "type": "integer"
                },
                "attempt_failure_expiry_ms": {
                    "default": 60000,
                    "description": "webhooks attempt failure expiry in milliseconds",
                    "type": "integer"
                },
                "connect_timeout_ms": {
                    "default": 10000,
                    "description": "webhooks connect timeout in milliseconds",
                    "type": "integer"
                },
                "disable_disabler": {
                    "default": false,
                    "description": "if true webhooks will not be automatically disabled",
                    "type": "boolean"
                },
                "log_successful_attempts": {
                    "default": false,
                    "description": "webhooks log successful attempts",
                    "type": "boolean"
                },
                "object_types": {
                    "description": "webhooks object types",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "system_config.whitelabel": {
            "description": "Schema for whitelabel system_config",
            "properties": {
                "domains": {
                    "description": "whitelabel domains"
                }
            },
            "type": "object"
        },
        "tasks": {
            "additionalProperties": true,
            "description": "Input data to go through as part of a background task",
            "properties": {
                "file_name": {
                    "description": "Human-readable name of a task's input file",
                    "type": "string"
                },
                "records": {
                    "description": "List the rows of input data",
                    "items": {
                        "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "temporal_rules": {
            "description": "Schema for a temporal rules",
            "properties": {
                "cycle": {
                    "description": "The recurrence cycle for this rule",
                    "enum": [
                        "date",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                    ],
                    "required": true,
                    "type": "string"
                },
                "days": {
                    "description": "The recurrence days for this rule",
                    "items": {
                        "maximum": 31,
                        "minimum": 1,
                        "required": false,
                        "type": "integer"
                    },
                    "required": false,
                    "type": "array"
                },
                "interval": {
                    "default": 1,
                    "description": "The recurrence interval for this rule",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "month": {
                    "description": "The recurrence month for this rule",
                    "maximum": 12,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "A friendly name for the temporal rule",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "ordinal": {
                    "description": "The recurrence ordinal for this rule",
                    "enum": [
                        "every",
                        "first",
                        "second",
                        "third",
                        "fourth",
                        "fifth",
                        "last"
                    ],
                    "required": false,
                    "type": "string"
                },
                "start_date": {
                    "default": 62586115200,
                    "description": "The date that any recurrence should be calculated as starting on",
                    "required": false,
                    "type": "integer"
                },
                "time_window_start": {
                    "description": "Seconds from the start of a day to stop considering this rule valid",
                    "maximum": 86400,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "wdays": {
                    "description": "The recurrence weekdays for this rule",
                    "items": {
                        "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "wensday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                        ],
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "temporal_rules_sets": {
            "description": "Schema for a temporal rules sets",
            "properties": {
                "name": {
                    "description": "A friendly name for the temporal rule set",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "temporal_rules": {
                    "description": "Temporal Rules",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "token_restrictions": {
            "description": "Schema for token restrictions",
            "properties": {
                "restrictions": {
                    "patternProperties": {
                        "^\\w+$": {
                            "description": "Name of athentication metod used when creating token. \"_\" for match any auth method",
                            "patternProperties": {
                                "^\\w+$": {
                                    "description": "User privelege level. \"_\" for match any priv level",
                                    "patternProperties": {
                                        "^\\w+$": {
                                            "items": {
                                                "description": "Endpoint (first path token) to wich apply restrictions. \"_\" for match any endpoint",
                                                "properties": {
                                                    "allowed_accounts": {
                                                        "description": "Account allowed to match this item",
                                                        "items": {
                                                            "required": false,
                                                            "type": "string"
                                                        },
                                                        "required": false,
                                                        "type": "array",
                                                        "uniqueItems": true
                                                    },
                                                    "rules": {
                                                        "description": "Rules applied to endpoint parameters",
                                                        "patternProperties": {
                                                            "^[\\w/#*]+$": {
                                                                "description": "verbs",
                                                                "items": {
                                                                    "enum": [
                                                                        "GET",
                                                                        "PUT",
                                                                        "POST",
                                                                        "PATCH",
                                                                        "DELETE",
                                                                        "_"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "required": false,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            }
                                                        },
                                                        "required": false,
                                                        "type": "object"
                                                    }
                                                },
                                                "required": false,
                                                "type": "object"
                                            },
                                            "required": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": true,
                                    "type": "object"
                                }
                            },
                            "required": true,
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "trunkstore": {
            "description": "Trunkstore configuration document - this is old stuff; do not recommend building off this if possible",
            "properties": {
                "account": {
                    "description": "Information that applies to the account as a whole",
                    "properties": {
                        "auth_realm": {
                            "description": "The realm any device in the account will use to authenticate with",
                            "minLength": 1,
                            "required": true,
                            "type": "string"
                        },
                        "caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "credits": {
                            "properties": {
                                "prepay": {
                                    "required": true,
                                    "type": "number"
                                }
                            },
                            "required": true,
                            "type": "object"
                        },
                        "emergency_caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "trunks": {
                            "description": "The number of two-way trunks this account has purchased",
                            "minimum": 0,
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Trunk level call restrictions for each available number classification",
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "Human-friendly name of the trunkstore account",
                    "type": "string"
                },
                "servers": {
                    "default": [],
                    "desciption": "What servers will be allowed to make/receive calls via this account",
                    "items": {
                        "properties": {
                            "DIDs": {
                                "patternProperties": {
                                    "^\\+1(\\d{10})$": {
                                        "properties": {
                                            "caller_id": {
                                                "properties": {
                                                    "cid_name": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    },
                                                    "cid_number": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failover": {
                                                "description": "Route inbound call to another destination if this server fails to handle the call",
                                                "properties": {
                                                    "e164": {
                                                        "description": "An E.164 formatted DID to dial for failover",
                                                        "type": "string"
                                                    },
                                                    "sip": {
                                                        "description": "A SIP URI (sip:user@host) to call for failover",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "force_outbound": {
                                                "default": false,
                                                "type": "boolean"
                                            },
                                            "options": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "auth": {
                                "properties": {
                                    "auth_method": {
                                        "description": "What type of auth mechanism to use",
                                        "enum": [
                                            "password"
                                        ],
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_password": {
                                        "description": "Password of the user@auth_realm",
                                        "minLength": 1,
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_user": {
                                        "description": "Username for authentication",
                                        "minLength": 1,
                                        "required": true,
                                        "type": "string"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "name": {
                                "description": "Human-friendly name of the server",
                                "minLength": 1,
                                "type": "string"
                            },
                            "options": {
                                "caller_id": {
                                    "properties": {
                                        "cid_name": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "cid_number": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delay": {
                                    "default": 0,
                                    "description": "The time, in seconds, to wait before attempting to call the server",
                                    "type": "integer"
                                },
                                "enabled": {
                                    "default": true,
                                    "description": "Is the server ready for sending and receiving calls",
                                    "type": "boolean"
                                },
                                "failover": {
                                    "description": "Route inbound call to another destination if this server fails to handle the call",
                                    "properties": {
                                        "e164": {
                                            "description": "An E.164 formatted DID to dial for failover",
                                            "type": "string"
                                        },
                                        "sip": {
                                            "description": "A SIP URI (sip:user@host) to call for failover",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "force_outbound": {
                                    "default": false,
                                    "description": "If true, will send the call over configured carriers instead of to the server (as opposed to the 'enabled' flag, which will reject the calls)",
                                    "type": "boolean"
                                },
                                "ignore_early_media": {
                                    "type": "boolean"
                                },
                                "inbound_format": {
                                    "default": "npan",
                                    "description": "Determines how the INVITE is sent to the server",
                                    "enum": [
                                        "e164",
                                        "npan",
                                        "1npan",
                                        "username"
                                    ],
                                    "type": "string"
                                },
                                "media_handling": {
                                    "default": "bypass",
                                    "description": "Determine whether the switch should be in the media path or not",
                                    "enum": [
                                        "process",
                                        "bypass"
                                    ],
                                    "type": "string"
                                },
                                "progress_timeout": {
                                    "description": "The time, in seconds, to wait for the server to progress in the call, before trying an optionally defined failover route or terminating the call",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "sip_headers": {
                                    "description": "List of arbitrary SIP headers to add to the INVITE",
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "description": "The time, in seconds, to wait for an answer from the server",
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "The type of the document (pvt_type in Crossbar docs)",
                    "enum": [
                        "sys_info"
                    ],
                    "required": true,
                    "type": "string"
                }
            }
        },
        "ubiquiti_auth": {
            "description": "Provides an auth-token via Ubiquiti's SSO",
            "properties": {
                "password": {
                    "description": "Ubiquiti SSO Password",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "username": {
                    "description": "Ubiquiti SSO Username",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth": {
            "description": "Provides an auth-token via user credentials",
            "properties": {
                "account_name": {
                    "description": "The account name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "account_realm": {
                    "description": "The account realm of the user",
                    "format": "uri",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "credentials": {
                    "description": "A hash of the uses credentials",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "method": {
                    "default": "md5",
                    "description": "The hash method",
                    "enum": [
                        "md5",
                        "sha"
                    ],
                    "required": false,
                    "type": "string"
                },
                "phone_number": {
                    "description": "A phone number assigned to the users account",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth_recovery": {
            "description": "Send a reset-your-password email via user credentials",
            "properties": {
                "account_name": {
                    "description": "The account name of the user",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "account_realm": {
                    "description": "The account realm of the user",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "phone_number": {
                    "description": "A phone number assigned to the user's account",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "ui_url": {
                    "description": "The UI's root URL",
                    "maxLength": 2000,
                    "minLength": 14,
                    "required": true,
                    "type": "string"
                },
                "username": {
                    "description": "The user's username",
                    "maxLength": 254,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth_recovery_reset": {
            "description": "Request a password reset from a trusted source",
            "properties": {
                "reset_id": {
                    "description": "The UUID that is part of the password-reset link",
                    "pattern": "^[a-fA-F0-9]{40,250}$",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "users": {
            "description": "Schema for a user",
            "properties": {
                "call_forward": {
                    "description": "The device call forward parameters",
                    "properties": {
                        "direct_calls_only": {
                            "default": false,
                            "description": "Determines if the calls that are not directly sent to the device should be forwarded",
                            "required": false,
                            "type": "boolean"
                        },
                        "enabled": {
                            "default": false,
                            "description": "Determines if the call forwarding should be used",
                            "required": false,
                            "type": "boolean"
                        },
                        "failover": {
                            "default": false,
                            "description": "Enable the call-forwarding parameters if the device is offline",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "default": true,
                            "description": "The option to determine if early media from the call forwarded number should ignored",
                            "required": false,
                            "type": "boolean"
                        },
                        "keep_caller_id": {
                            "default": true,
                            "description": "Determines if the caller id is kept when the call is forwarded, if not the devices caller id is used",
                            "required": false,
                            "type": "boolean"
                        },
                        "number": {
                            "description": "The number to forward calls to",
                            "maxLength": 35,
                            "required": false,
                            "type": "string"
                        },
                        "require_keypress": {
                            "default": true,
                            "description": "Determines if the callee is prompted to press 1 to accept the call",
                            "required": false,
                            "type": "boolean"
                        },
                        "substitute": {
                            "default": true,
                            "description": "Determines if the call forwarding replaces the device",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Device level call restrictions for each available number classification",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The device caller ID parameters",
                    "required": false,
                    "type": "object"
                },
                "contact_list": {
                    "default": {},
                    "description": "Contect List Parameters",
                    "properties": {
                        "exclude": {
                            "description": "If set to true the device is excluded from the contact list",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of rules used to modify dialed numbers",
                    "required": false,
                    "type": "object"
                },
                "directories": {
                    "description": "Provides the mappings for what directory the user is a part of (the key), and what callflow (the value) to invoke if the user is selected by the caller.",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "description": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "Is do-not-disturb enabled for this user?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "email": {
                    "description": "The email of the user",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the user is currently enabled",
                    "required": false,
                    "type": "boolean"
                },
                "feature_level": {
                    "description": "The user level for assigning feature sets",
                    "required": false,
                    "type": "string"
                },
                "first_name": {
                    "description": "The first name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "hotdesk": {
                    "default": {},
                    "description": "The user hotdesk parameters",
                    "properties": {
                        "enabled": {
                            "default": false,
                            "description": "Determines if the user has hotdesking enabled",
                            "required": false,
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The users hotdesk id",
                            "maxLength": 15,
                            "required": false,
                            "type": "string"
                        },
                        "keep_logged_in_elsewhere": {
                            "default": false,
                            "description": "Determines if user should be able to login to mutliple phones simultaneously",
                            "required": false,
                            "type": "boolean"
                        },
                        "pin": {
                            "description": "The users hotdesk pin number",
                            "maxLength": 15,
                            "minLength": 4,
                            "required": false,
                            "type": "string"
                        },
                        "require_pin": {
                            "default": false,
                            "description": "Determines if user requires a pin to change the hotdesk state",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "language": {
                    "description": "The language for this user",
                    "required": false,
                    "type": "string"
                },
                "last_name": {
                    "description": "The last name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The audio media parameters",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of audio codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "enum": [
                                true,
                                false,
                                "auto"
                            ],
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "warning": "The string type is deprecated, please use this as a boolean"
                        },
                        "encryption": {
                            "default": {},
                            "description": "Encryption Parameters",
                            "properties": {
                                "enforce_security": {
                                    "default": false,
                                    "description": "Is Encryption Enabled?",
                                    "required": false,
                                    "type": "boolean"
                                },
                                "methods": {
                                    "default": [],
                                    "description": "Supported Encryption Types",
                                    "items": {
                                        "enum": [
                                            "zrtp",
                                            "srtp"
                                        ],
                                        "required": false,
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "fax_option": {
                            "description": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "description": "The option to determine if early media from the device should always be ignored",
                            "required": false,
                            "type": "boolean"
                        },
                        "progress_timeout": {
                            "description": "The progress timeout to apply to the device (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "video": {
                            "default": {},
                            "description": "The video media parameters",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of video codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "H261",
                                            "H263",
                                            "H264",
                                            "VP8"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "metaflows": {
                    "$ref": "metaflows",
                    "description": "The device metaflow parameters"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters used if not a property of the device owner",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "password": {
                    "description": "The GUI login password",
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "Static presence ID (used instead of SIP username)",
                    "required": false,
                    "type": "string"
                },
                "priv_level": {
                    "default": "user",
                    "description": "The privilege level of the user",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "required": false,
                    "type": "string"
                },
                "profile": {
                    "$ref": "profile",
                    "default": {},
                    "description": "User's profile data",
                    "required": false,
                    "type": "object"
                },
                "pronounced_name": {
                    "description": "Name pronounced by user to introduce himself to conference members",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "require_password_update": {
                    "default": false,
                    "description": "UI flag that the user should update their password.",
                    "required": false,
                    "type": "boolean"
                },
                "ringtones": {
                    "default": {},
                    "description": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "timezone": {
                    "description": "User's timezone",
                    "required": false,
                    "type": "string"
                },
                "username": {
                    "description": "The GUI login username - alpha-numeric, dashes, at symbol, periods, plusses, and underscores allowed",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "^([+@.\\w_-]+)$",
                    "required": false,
                    "type": "string"
                },
                "verified": {
                    "default": false,
                    "description": "Determines if the user has been verified",
                    "required": false,
                    "type": "boolean"
                },
                "vm_to_email_enabled": {
                    "default": true,
                    "description": "Determines if the user would like voicemails emailed to them",
                    "type": "boolean"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "$ref": "notify.callback"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "vmboxes": {
            "description": "Schema for a voicemail box",
            "properties": {
                "check_if_owner": {
                    "default": true,
                    "description": "Determines if when the user calls their own voicemail they should be prompted to sign in",
                    "required": false,
                    "type": "boolean"
                },
                "delete_after_notify": {
                    "default": false,
                    "description": "Delete the voicemail after the notification has been sent",
                    "required": false,
                    "type": "boolean",
                    "warning": "Voicemail is not stored in the database if this option is selected"
                },
                "is_setup": {
                    "default": false,
                    "description": "Determines if the user has completed the initial configuration",
                    "required": false,
                    "type": "boolean"
                },
                "mailbox": {
                    "description": "The voicemail box number",
                    "maxLength": 30,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The media (prompt) parameters",
                    "properties": {
                        "unavailable": {
                            "description": "The ID of a media object that should be used as the unavailable greeting",
                            "maxLength": 32,
                            "minLength": 32,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the voicemail box",
                    "maxLength": 128,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "not_configurable": {
                    "default": false,
                    "description": "Determines if the user can configure this voicemail.",
                    "required": false,
                    "type": "boolean"
                },
                "notify": {
                    "properties": {
                        "callback": {
                            "$ref": "notify.callback"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "notify_email_addresses": {
                    "default": [],
                    "description": "List of email addresses to send notifications to (in addition to owner's email, if any)",
                    "items": {
                        "format": "email",
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "owner_id": {
                    "description": "The ID of the user object that 'owns' the voicemail box",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": false,
                    "type": "string"
                },
                "pin": {
                    "description": "The pin number for the voicemail box",
                    "maxLength": 15,
                    "minLength": 4,
                    "required": false,
                    "type": "string"
                },
                "require_pin": {
                    "default": false,
                    "description": "Determines if a pin is required to check the voicemail from the users devices",
                    "required": false,
                    "type": "boolean"
                },
                "save_after_notify": {
                    "default": false,
                    "description": "Save the voicemail after the notification has been sent",
                    "required": false,
                    "type": "boolean",
                    "warning": "This setting will override delete_after_notify"
                },
                "skip_greeting": {
                    "default": false,
                    "description": "Determines if the greeting should be skipped",
                    "required": false,
                    "type": "boolean"
                },
                "skip_instructions": {
                    "default": false,
                    "description": "Determines if the instructions after the greeting and prior to composing a message should be played",
                    "required": false,
                    "type": "boolean"
                },
                "timezone": {
                    "description": "The default timezone",
                    "maxLength": 32,
                    "minLength": 5,
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "webhook_attempts": {
            "description": "Log of an attempt to send a webhook to a third-party server",
            "properties": {
                "client_error": {
                    "description": "Kazoo-side error string, if any",
                    "type": "string"
                },
                "hook_id": {
                    "description": "Id of the hook attempted",
                    "required": true,
                    "type": "string"
                },
                "reason": {
                    "description": "short reason for the failure",
                    "type": "string"
                },
                "response_body": {
                    "description": "HTTP response body received, if any",
                    "type": "string"
                },
                "response_code": {
                    "description": "HTTP response code received, if any",
                    "type": "string"
                },
                "result": {
                    "description": "Whether the attempt succeeded or not",
                    "enum": [
                        "success",
                        "failure"
                    ],
                    "required": true,
                    "type": "string"
                },
                "retries_left": {
                    "description": "How many retries were left after this attempt",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "webhooks": {
            "description": "Web Hooks are subscriptions to allowed events that, when the event occurs, the event data is sent to the uri set in the Web Hook document.",
            "properties": {
                "custom_data": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "These properties will be added to the event and will overwrite existing values.",
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Is the webhook enabled and running",
                    "required": false,
                    "type": "boolean"
                },
                "hook": {
                    "description": "The trigger event for a request being made to 'callback_uri'.",
                    "required": true,
                    "type": "string"
                },
                "http_verb": {
                    "default": "post",
                    "description": "What HTTP method to use when contacting the server",
                    "enum": [
                        "get",
                        "post"
                    ],
                    "type": "string"
                },
                "include_subaccounts": {
                    "description": "Should the webhook be fired for subaccount events.",
                    "required": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "A friendly name for the webhook",
                    "required": true,
                    "type": "string"
                },
                "retries": {
                    "default": 2,
                    "description": "Retry the request this many times (if it fails)",
                    "maximum": 4,
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "uri": {
                    "description": "The 3rd party URI to call out to an event",
                    "format": "uri",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "whitelabel": {
            "description": "Whitelabel settings",
            "properties": {
                "company_name": {
                    "description": "The company name to display to users",
                    "required": false,
                    "type": "string"
                },
                "domain": {
                    "description": "This is the whitelabeled domain that users will be entering to reach the UI",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                },
                "fake_api_url": {
                    "description": "This is a whitelabeled API URL, primarily used by the developer application",
                    "format": "uri",
                    "required": false,
                    "type": "string"
                },
                "hide_credits": {
                    "default": false,
                    "description": "When checkef this hides the credits",
                    "required": false,
                    "type": "boolean"
                },
                "hide_powered": {
                    "default": false,
                    "description": "When checked this hides the powered by 2600hz on the bottom right",
                    "required": false,
                    "type": "boolean"
                },
                "hide_registration": {
                    "default": false,
                    "description": "When checked this hides the ability to register for a new account",
                    "required": false,
                    "type": "boolean"
                },
                "inbound_trunks_price": {
                    "description": "The price to show for inbound trunks, this is currently only for display purposes",
                    "required": false,
                    "type": "string"
                },
                "nav": {
                    "description": "Properties related to navigation in the UI",
                    "properties": {
                        "help": {
                            "description": "The URL to use when the help link is clicked",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        },
                        "learn_more": {
                            "description": "The URL to use when the 'Learn More!' link is clicked",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "outbound_trunks_price": {
                    "description": "The price to show for outbound trunks, this is currently only for display purposes",
                    "required": false,
                    "type": "string"
                },
                "port": {
                    "description": "Parameters releated to whitelabeling port requests",
                    "properties": {
                        "features": {
                            "description": "The URL to use when the features link is clicked",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        },
                        "loa": {
                            "description": "The URL to use when the LOA link is clicked",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        },
                        "resporg": {
                            "description": "The URL to use when the resporg link is clicked",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        },
                        "support_email": {
                            "description": "The support email address to display to the user",
                            "format": "email",
                            "required": false,
                            "type": "string"
                        },
                        "terms": {
                            "description": "The URL to use when the terms and conditions link is clicked",
                            "format": "uri",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "twoway_trunks_price": {
                    "description": "The price to show for twoway trunks, this is currently only for display purposes",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        }
    },
    "externalDocs": {
        "description": "Kazoo documentation's Git repository",
        "url": "https://github.com/2600hz/kazoo/tree/master/applications/crossbar/doc"
    },
    "host": "localhost:8000",
    "info": {
        "description": "The Crossbar APIs",
        "license": {
            "name": "Mozilla Public License 1.1"
        },
        "title": "Crossbar",
        "version": "v2"
    },
    "parameters": {
        "account_id": {
            "$ref": "#/parameters/id",
            "name": "{ACCOUNT_ID}"
        },
        "address_id": {
            "$ref": "#/parameters/id",
            "name": "{ADDRESS_ID}"
        },
        "alert_id": {
            "$ref": "#/parameters/id",
            "name": "{ALERT_ID}"
        },
        "app_id": {
            "$ref": "#/parameters/id",
            "name": "{APP_ID}"
        },
        "app_screenshot_index": {
            "in": "path",
            "name": "{APP_SCREENSHOT_INDEX}",
            "pattern": "^[0-9]+$",
            "required": true,
            "type": "string"
        },
        "args": {
            "in": "path",
            "name": "{ARGS}",
            "required": true,
            "type": "string"
        },
        "attachment_id": {
            "in": "path",
            "name": "{ATTACHMENT_ID}",
            "required": true,
            "type": "string"
        },
        "attempt_id": {
            "in": "path",
            "name": "{ATTEMPT_ID}",
            "required": true,
            "type": "string"
        },
        "auth_token": {
            "$ref": "#/parameters/id",
            "name": "{AUTH_TOKEN}"
        },
        "auth_token_header": {
            "in": "header",
            "minLength": 32,
            "name": "X-Auth-Token",
            "type": "string"
        },
        "blacklist_id": {
            "$ref": "#/parameters/id",
            "name": "{BLACKLIST_ID}"
        },
        "c2c_id": {
            "$ref": "#/parameters/id",
            "name": "{C2C_ID}"
        },
        "call_id": {
            "in": "path",
            "name": "{CALL_ID}",
            "required": true,
            "type": "string"
        },
        "callflow_id": {
            "$ref": "#/parameters/id",
            "name": "{CALLFLOW_ID}"
        },
        "card_id": {
            "$ref": "#/parameters/id",
            "name": "{CARD_ID}"
        },
        "cccp_id": {
            "$ref": "#/parameters/id",
            "name": "{CCCP_ID}"
        },
        "cdr_id": {
            "in": "path",
            "maxLength": 39,
            "minLength": 39,
            "name": "{CDR_ID}",
            "pattern": "^[0-9a-f-]+$",
            "required": true,
            "type": "string"
        },
        "comment_id": {
            "in": "path",
            "name": "{COMMENT_ID}",
            "required": true,
            "type": "string"
        },
        "conference_id": {
            "$ref": "#/parameters/id",
            "name": "{CONFERENCE_ID}"
        },
        "config_id": {
            "$ref": "#/parameters/id",
            "name": "{CONFIG_ID}"
        },
        "connectivity_id": {
            "$ref": "#/parameters/id",
            "name": "{CONNECTIVITY_ID}"
        },
        "device_id": {
            "$ref": "#/parameters/id",
            "name": "{DEVICE_ID}"
        },
        "directory_id": {
            "$ref": "#/parameters/id",
            "name": "{DIRECTORY_ID}"
        },
        "extension": {
            "in": "path",
            "name": "{EXTENSION}",
            "required": true,
            "type": "string"
        },
        "fax_id": {
            "$ref": "#/parameters/id",
            "name": "{FAX_ID}"
        },
        "fax_job_id": {
            "in": "path",
            "name": "{FAX_JOB_ID}",
            "required": true,
            "type": "string"
        },
        "faxbox_id": {
            "$ref": "#/parameters/id",
            "name": "{FAXBOX_ID}"
        },
        "function": {
            "in": "path",
            "name": "{FUNCTION}",
            "pattern": "^[a-zA-Z0-9]+$",
            "required": true,
            "type": "string"
        },
        "group_id": {
            "$ref": "#/parameters/id",
            "name": "{GROUP_ID}"
        },
        "id": {
            "in": "path",
            "maxLength": 32,
            "minLength": 32,
            "name": "id",
            "pattern": "^[0-9a-f]+$",
            "required": true,
            "type": "string"
        },
        "interaction_id": {
            "in": "path",
            "name": "{INTERACTION_ID}",
            "required": true,
            "type": "string"
        },
        "ip_address": {
            "in": "path",
            "maxLength": 15,
            "minLength": 7,
            "name": "{IP_ADDRESS}",
            "pattern": "^[0-9.]+$",
            "required": true,
            "type": "string"
        },
        "job_id": {
            "in": "path",
            "name": "{JOB_ID}",
            "required": true,
            "type": "string"
        },
        "language": {
            "in": "path",
            "name": "{LANGUAGE}",
            "required": true,
            "type": "string"
        },
        "ledger_entry_id": {
            "in": "path",
            "name": "{LEDGER_ENTRY_ID}",
            "required": true,
            "type": "string"
        },
        "ledger_id": {
            "$ref": "#/parameters/id",
            "name": "{LEDGER_ID}"
        },
        "list_entry_id": {
            "$ref": "#/parameters/id",
            "name": "{LIST_ENTRY_ID}"
        },
        "list_id": {
            "$ref": "#/parameters/id",
            "name": "{LIST_ID}"
        },
        "media_id": {
            "$ref": "#/parameters/id",
            "name": "{MEDIA_ID}"
        },
        "menu_id": {
            "$ref": "#/parameters/id",
            "name": "{MENU_ID}"
        },
        "module": {
            "in": "path",
            "name": "{MODULE}",
            "pattern": "^[a-zA-Z0-9]+$",
            "required": true,
            "type": "string"
        },
        "node": {
            "in": "path",
            "name": "{NODE}",
            "pattern": "^[a-zA-Z0-9]+@[a-zA-Z0-9]+$",
            "required": true,
            "type": "string"
        },
        "notification_id": {
            "$ref": "#/parameters/id",
            "name": "{NOTIFICATION_ID}"
        },
        "participant_id": {
            "in": "path",
            "name": "{PARTICIPANT_ID}",
            "pattern": "^[0-9]+$",
            "required": true,
            "type": "string"
        },
        "phone_number": {
            "in": "path",
            "minLength": 13,
            "name": "{PHONE_NUMBER}",
            "pattern": "^%2[Bb][0-9]+$",
            "required": true,
            "type": "string"
        },
        "plan_id": {
            "in": "path",
            "name": "{PLAN_ID}",
            "required": true,
            "type": "string"
        },
        "port_request_id": {
            "$ref": "#/parameters/id",
            "name": "{PORT_REQUEST_ID}"
        },
        "prompt_id": {
            "in": "path",
            "name": "{PROMPT_ID}",
            "required": true,
            "type": "string"
        },
        "queue_id": {
            "$ref": "#/parameters/id",
            "name": "{QUEUE_ID}"
        },
        "rate_id": {
            "$ref": "#/parameters/id",
            "name": "{RATE_ID}"
        },
        "recording_id": {
            "in": "path",
            "maxLength": 39,
            "minLength": 39,
            "name": "{RECORDING_ID}",
            "pattern": "^[0-9a-f-]+$",
            "required": true,
            "type": "string"
        },
        "resource_id": {
            "$ref": "#/parameters/id",
            "name": "{RESOURCE_ID}"
        },
        "resource_template_id": {
            "$ref": "#/parameters/id",
            "name": "{RESOURCE_TEMPLATE_ID}"
        },
        "schema_name": {
            "in": "path",
            "name": "{SCHEMA_NAME}",
            "pattern": "^[a-z0-9._-]+$",
            "required": true,
            "type": "string"
        },
        "selector_name": {
            "in": "path",
            "name": "{SELECTOR_NAME}",
            "required": true,
            "type": "string"
        },
        "sms_id": {
            "$ref": "#/parameters/id",
            "name": "{SMS_ID}"
        },
        "smtp_log_id": {
            "in": "path",
            "name": "{SMTP_LOG_ID}",
            "required": true,
            "type": "string"
        },
        "socket_id": {
            "in": "path",
            "name": "{SOCKET_ID}",
            "required": true,
            "type": "string"
        },
        "storage_plan_id": {
            "$ref": "#/parameters/id",
            "name": "{STORAGE_PLAN_ID}"
        },
        "system_config_id": {
            "in": "path",
            "name": "{SYSTEM_CONFIG_ID}",
            "required": true,
            "type": "string"
        },
        "task_id": {
            "in": "path",
            "maxLength": 15,
            "minLength": 15,
            "name": "{TASK_ID}",
            "pattern": "^[0-9a-f]+$",
            "required": true,
            "type": "string"
        },
        "template_id": {
            "$ref": "#/parameters/id",
            "name": "{TEMPLATE_ID}"
        },
        "template_name": {
            "in": "path",
            "name": "{TEMPLATE_NAME}",
            "required": true,
            "type": "string"
        },
        "temporal_rule_id": {
            "$ref": "#/parameters/id",
            "name": "{TEMPORAL_RULE_ID}"
        },
        "temporal_rule_set": {
            "$ref": "#/parameters/id",
            "name": "{TEMPORAL_RULE_SET}"
        },
        "thing": {
            "in": "path",
            "name": "{THING}",
            "required": true,
            "type": "string"
        },
        "transaction_id": {
            "in": "path",
            "name": "{TRANSACTION_ID}",
            "required": true,
            "type": "string"
        },
        "user_id": {
            "$ref": "#/parameters/id",
            "name": "{USER_ID}"
        },
        "username": {
            "in": "path",
            "name": "{USERNAME}",
            "required": true,
            "type": "string"
        },
        "uuid": {
            "in": "path",
            "name": "{UUID}",
            "pattern": "^[a-f0-9-]+$",
            "required": true,
            "type": "string"
        },
        "vm_box_id": {
            "$ref": "#/parameters/id",
            "name": "{VM_BOX_ID}"
        },
        "vm_msg_id": {
            "in": "path",
            "name": "{VM_MSG_ID}",
            "required": true,
            "type": "string"
        },
        "webhook_id": {
            "$ref": "#/parameters/id",
            "name": "{WEBHOOK_ID}"
        },
        "whitelabel_domain": {
            "in": "path",
            "name": "{WHITELABEL_DOMAIN}",
            "required": true,
            "type": "string"
        }
    },
    "paths": {
        "/about": {
            "get": {}
        },
        "/accounts": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "accounts",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts"
                        }
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "accounts",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts"
                        }
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "accounts",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts"
                        }
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/access_lists": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "access_lists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/access_lists"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/acls": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents/stats": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents/status": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents/status/{USER_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents/{USER_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents/{USER_ID}/queue_status": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/agents/{USER_ID}/status": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/alerts": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/alerts/{ALERT_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/alert_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/alert_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/allotments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "allotments",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/allotments"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/allotments/consumed": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/api_key": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/apps_link/authorize": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/apps_store": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/apps_store/blacklist": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/apps_store/{APP_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/app_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/app_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/app_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/app_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/apps_store/{APP_ID}/icon": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/app_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/apps_store/{APP_ID}/screenshot/{APP_SCREENSHOT_INDEX}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/app_screenshot_index"
                    },
                    {
                        "$ref": "#/parameters/app_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/blacklists": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "blacklists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blacklists"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/blacklists/{BLACKLIST_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/blacklist_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/blacklist_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/blacklist_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "blacklists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blacklists"
                        }
                    },
                    {
                        "$ref": "#/parameters/blacklist_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/addresses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/addresses/{ADDRESS_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/address_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/address_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/address_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/cards": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/cards/{CARD_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/card_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/card_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/card_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/client_token": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/credits": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/customer": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/transactions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/braintree/transactions/{TRANSACTION_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/transaction_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/bulk": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/call_inspector": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/call_inspector/{CALL_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/call_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/callflows": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "callflows",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/callflows"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/callflows/{CALLFLOW_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/callflow_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/callflow_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/callflow_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "callflows",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/callflows"
                        }
                    },
                    {
                        "$ref": "#/parameters/callflow_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cccps": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "cccps",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cccps"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cccps/{CCCP_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/cccp_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/cccp_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "cccps",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cccps"
                        }
                    },
                    {
                        "$ref": "#/parameters/cccp_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "cccps",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cccps"
                        }
                    },
                    {
                        "$ref": "#/parameters/cccp_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cdrs": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cdrs/interaction": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cdrs/legs/{INTERACTION_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/interaction_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cdrs/summary": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/cdrs/{CDR_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/cdr_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/channels": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/channels/{UUID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/children": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/clicktocall": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "clicktocall",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clicktocall"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/clicktocall/{C2C_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "clicktocall",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clicktocall"
                        }
                    },
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/clicktocall/{C2C_ID}/connect": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "clicktocall",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clicktocall"
                        }
                    },
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/clicktocall/{C2C_ID}/history": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/c2c_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/comments": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/comments/{COMMENT_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/comment_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/comment_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/comment_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/conferences": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "conferences",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conferences"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/conferences/{CONFERENCE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "conferences",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conferences"
                        }
                    },
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "conferences",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conferences"
                        }
                    },
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/conferences/{CONFERENCE_ID}/participants": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "conferences",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conferences"
                        }
                    },
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/conferences/{CONFERENCE_ID}/participants/{PARTICIPANT_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/participant_id"
                    },
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "conferences",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conferences"
                        }
                    },
                    {
                        "$ref": "#/parameters/participant_id"
                    },
                    {
                        "$ref": "#/parameters/conference_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/configs/{CONFIG_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/connectivity": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "connectivity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connectivity"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/connectivity/{CONNECTIVITY_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/connectivity_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/connectivity_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/connectivity_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "connectivity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connectivity"
                        }
                    },
                    {
                        "$ref": "#/parameters/connectivity_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/contact_list": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/descendants": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/devices": {
            "get": {
                "description": "Summary listing of devices for the account",
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A listing of devices created for the account"
                    }
                }
            },
            "put": {
                "description": "Create a new device",
                "parameters": [
                    {
                        "in": "body",
                        "name": "devices",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created device object"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/status": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}": {
            "delete": {
                "description": "Remove the device from the account",
                "parameters": [
                    {
                        "$ref": "#/parameters/device_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The removed device object"
                    }
                }
            },
            "get": {
                "description": "Get the device details",
                "parameters": [
                    {
                        "$ref": "#/parameters/device_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The device object, in full"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/device_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "description": "Edit the device object",
                "parameters": [
                    {
                        "in": "body",
                        "name": "devices",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices"
                        }
                    },
                    {
                        "$ref": "#/parameters/device_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The edited device object, in full"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}/quickcall/{PHONE_NUMBER}": {
            "get": {
                "description": "Execute quickcall to {NUMBER}",
                "parameters": [
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/device_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call initialization details"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}/sync": {
            "post": {
                "description": "Reset the device by sending a check-sync SIP NOTIFY",
                "parameters": [
                    {
                        "in": "body",
                        "name": "devices",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices"
                        }
                    },
                    {
                        "$ref": "#/parameters/device_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Notice that the check-sync has been sent"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/dialplans": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/directories": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "directories",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/directories"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/directories/{DIRECTORY_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/directory_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/directory_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/directory_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "directories",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/directories"
                        }
                    },
                    {
                        "$ref": "#/parameters/directory_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxboxes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxboxes/{FAXBOX_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/faxbox_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/faxbox_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/faxbox_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/faxbox_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "faxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/inbox": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/inbox/{FAX_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "faxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/inbox/{FAX_ID}/attachment": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/incoming": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/incoming/{FAX_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/outbox": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/outbox/{FAX_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "faxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/outbox/{FAX_ID}/attachment": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/outgoing": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "faxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/outgoing/{FAX_JOB_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/fax_job_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/smtplog": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/faxes/smtplog/{ATTEMPT_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/attempt_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/freeswitch": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/global_provisioner_templates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/global_provisioner_templates/{TEMPLATE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/global_provisioner_templates/{TEMPLATE_ID}/image": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/groups": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "groups",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groups"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/groups/{GROUP_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/group_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/group_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/group_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "groups",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groups"
                        }
                    },
                    {
                        "$ref": "#/parameters/group_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/hotdesks": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ips": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "ips",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ips"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ips/assigned": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ips/hosts": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ips/zones": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ips/{IP_ADDRESS}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/ip_address"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/ip_address"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "ips",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ips"
                        }
                    },
                    {
                        "$ref": "#/parameters/ip_address"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ledgers": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ledgers/credit": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "ledgers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ledgers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ledgers/debit": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "ledgers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ledgers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ledgers/{LEDGER_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/ledger_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/ledgers/{LEDGER_ID}/{LEDGER_ENTRY_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/ledger_id"
                    },
                    {
                        "$ref": "#/parameters/ledger_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/limits": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "limits",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/limits"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/lists": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "lists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lists"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "lists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lists"
                        }
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}/entries": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "lists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lists"
                        }
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}/entries/{LIST_ENTRY_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/list_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/list_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/list_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "lists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lists"
                        }
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/list_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}/entries/{LIST_ENTRY_ID}/photo": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "lists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lists"
                        }
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/list_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}/entries/{LIST_ENTRY_ID}/vcard": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/list_entry_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/local_provisioner_templates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/local_provisioner_templates/{TEMPLATE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/local_provisioner_templates/{TEMPLATE_ID}/image": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "media",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media/languages": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media/languages/{LANGUAGE}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/language"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media/prompts": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media/prompts/{PROMPT_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/prompt_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media/{MEDIA_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/media_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/media_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "media",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media"
                        }
                    },
                    {
                        "$ref": "#/parameters/media_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/media/{MEDIA_ID}/raw": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/media_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "media",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media"
                        }
                    },
                    {
                        "$ref": "#/parameters/media_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/menus": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "menus",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menus"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/menus/{MENU_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/menu_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/menu_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/menu_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "menus",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menus"
                        }
                    },
                    {
                        "$ref": "#/parameters/menu_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/metaflows": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "metaflows",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metaflows"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/move": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "accounts",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/multi_factor": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/multi_factor/attempts": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/multi_factor/attempts/{ATTEMPT_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/attempt_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/multi_factor/{CONFIG_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/config_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/notifications": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "notifications",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notifications"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/notifications/customer_update/message": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "notifications",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notifications"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/notifications/smtplog": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/notifications/smtplog/{SMTP_LOG_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/smtp_log_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/notifications/{NOTIFICATION_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/notification_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/notification_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "notifications",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notifications"
                        }
                    },
                    {
                        "$ref": "#/parameters/notification_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/notifications/{NOTIFICATION_ID}/preview": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "notifications",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notifications"
                        }
                    },
                    {
                        "$ref": "#/parameters/notification_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/onboard": {
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/parents": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/parked_calls": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/check": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/classifiers": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/classifiers/{PHONE_NUMBER}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/collection": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/collection/activate": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/fix": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/fix/{PHONE_NUMBER}": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/locality": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/prefix": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONE_NUMBER}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONE_NUMBER}/activate": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONE_NUMBER}/identify": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONE_NUMBER}/port": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONE_NUMBER}/reserve": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "phone_numbers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/phone_numbers"
                        }
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/pivot/debug": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/pivot/debug/{UUID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "port_requests",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/port_requests"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/canceled": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/completed": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/pending": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/rejected": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/scheduled": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/submitted": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/unconfirmed": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "port_requests",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/port_requests"
                        }
                    },
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/attachments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "port_requests",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/port_requests"
                        }
                    },
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/attachments/{ATTACHMENT_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "port_requests",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/port_requests"
                        }
                    },
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/canceled": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/completed": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/loa": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/pending": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/rejected": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/scheduled": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORT_REQUEST_ID}/submitted": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/port_request_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/presence": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/presence/report-{REPORT_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/presence/{EXTENSION}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/extension"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/extension"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/queues": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "queues",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/queues"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/queues/eavesdrop": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "queues",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/queues"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/queues/stats": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/queues/{QUEUE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "queues",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/queues"
                        }
                    },
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/queues/{QUEUE_ID}/eavesdrop": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "queues",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/queues"
                        }
                    },
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/queues/{QUEUE_ID}/roster": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "queues",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/queues"
                        }
                    },
                    {
                        "$ref": "#/parameters/queue_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/rate_limits": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/recordings": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/recordings/{RECORDING_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/recording_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/registrations": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/registrations/count": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/registrations/{USERNAME}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/username"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/reseller": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "accounts",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/name": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/name/{SELECTOR_NAME}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/selector_name"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/name/{SELECTOR_NAME}/resource/{RESOURCE_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/selector_name"
                    },
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/resource": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/resource/{RESOURCE_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/resource/{RESOURCE_ID}/name/{SELECTOR_NAME}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/selector_name"
                    },
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/rules": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resource_selectors",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource_selectors"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/{UUID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resource_selectors",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource_selectors"
                        }
                    },
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_templates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resource_templates/{RESOURCE_TEMPLATE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_template_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resources": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resources"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resources/collection": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resources"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resources"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resources/jobs": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resources"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resources/jobs/{JOB_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/job_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/resources/{RESOURCE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "resources",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resources"
                        }
                    },
                    {
                        "$ref": "#/parameters/resource_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/search": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/search/multi": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "service_plans",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plans"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/available": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/available/{PLAN_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/current": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/override": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "service_plans",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plans"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/reconciliation": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "service_plans",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plans"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/synchronization": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "service_plans",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plans"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/service_plans/{PLAN_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "service_plans",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plans"
                        }
                    },
                    {
                        "$ref": "#/parameters/plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/services": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/services/audit": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/services/plan": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/services/status": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/siblings": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/signup": {
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/signup/{THING}": {
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/thing"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/skels": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/skels/{THING}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/thing"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/thing"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/thing"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/thing"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/sms": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "sms",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sms"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/sms/{SMS_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/sms_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/sms_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/storage": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "storage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "storage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/storage/plans": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "storage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/storage/plans/{STORAGE_PLAN_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/storage_plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/storage_plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/storage_plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "storage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage"
                        }
                    },
                    {
                        "$ref": "#/parameters/storage_plan_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/tasks": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "tasks",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/tasks/{TASK_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/task_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/task_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/task_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/tasks/{TASK_ID}/input": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/task_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/tasks/{TASK_ID}/output": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/task_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "temporal_rules",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/temporal_rules"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules/{TEMPORAL_RULE_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/temporal_rule_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/temporal_rule_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/temporal_rule_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "temporal_rules",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/temporal_rules"
                        }
                    },
                    {
                        "$ref": "#/parameters/temporal_rule_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules_sets": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "temporal_rules_sets",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/temporal_rules_sets"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules_sets/{TEMPORAL_RULE_SET}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/temporal_rule_set"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/temporal_rule_set"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/temporal_rule_set"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "temporal_rules_sets",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/temporal_rules_sets"
                        }
                    },
                    {
                        "$ref": "#/parameters/temporal_rule_set"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/token_restrictions": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "token_restrictions",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token_restrictions"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/transactions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/transactions/credit": {
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/transactions/current_balance": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/transactions/debit": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/transactions/monthly_recurring": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/transactions/subscriptions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/tree": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/users": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "users",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "users",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users"
                        }
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}/photo": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "users",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users"
                        }
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}/quickcall/{PHONE_NUMBER}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/phone_number"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}/vcard": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes": {
            "get": {
                "description": "Summary listing of voicemail boxes for the account",
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A listing of voicemail boxes for the account"
                    }
                }
            },
            "put": {
                "description": "Create a new voicemail box",
                "parameters": [
                    {
                        "in": "body",
                        "name": "vmboxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vmboxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created voicemail box"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/messages": {
            "get": {
                "description": "Listing of all messages on an account",
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VM_BOX_ID}": {
            "delete": {
                "description": "Deletes the voicemail box from the account",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "description": "Details of the voicemail box",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A voicemail box document"
                    }
                }
            },
            "patch": {
                "description": "Patch an existing voicemail box",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated voicemail box"
                    }
                }
            },
            "post": {
                "description": "Edit an existing voicemail box",
                "parameters": [
                    {
                        "in": "body",
                        "name": "vmboxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vmboxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated voicemail box"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VM_BOX_ID}/messages": {
            "delete": {
                "description": "Remove all or a list of messages from a voicemail box",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listing of messages, if any are left"
                    }
                }
            },
            "get": {
                "description": "Listing of messages contained in the voicemail box",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            },
            "post": {
                "description": "Change a list message",
                "parameters": [
                    {
                        "in": "body",
                        "name": "vmboxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vmboxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VM_BOX_ID}/messages/raw": {
            "post": {
                "description": "Fetch raw aduio of a list message id",
                "parameters": [
                    {
                        "in": "body",
                        "name": "vmboxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vmboxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP file containing the raw audio of voicemail messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VM_BOX_ID}/messages/{VM_MSG_ID}": {
            "delete": {
                "description": "Remove the message from the voicemail box",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_msg_id"
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The removed message object"
                    }
                }
            },
            "get": {
                "description": "Get a specific message object",
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_msg_id"
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The message object"
                    }
                }
            },
            "post": {
                "description": "Change a message",
                "parameters": [
                    {
                        "in": "body",
                        "name": "vmboxes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vmboxes"
                        }
                    },
                    {
                        "$ref": "#/parameters/vm_msg_id"
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VM_BOX_ID}/messages/{VM_MSG_ID}/raw": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/vm_msg_id"
                    },
                    {
                        "$ref": "#/parameters/vm_box_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks": {
            "get": {
                "description": "Summary listing of webhooks for the account",
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A listing of webhooks created for the account"
                    }
                }
            },
            "patch": {
                "description": "Re-enable the collection of webhooks",
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of reenabling hooks"
                    }
                }
            },
            "put": {
                "description": "Create a new webhook",
                "parameters": [
                    {
                        "in": "body",
                        "name": "webhooks",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhooks"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created webhook object"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks/attempts": {
            "get": {
                "description": "List the attempts Kazoo has made to the external servers",
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects representing webhook attempts made"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks/{WEBHOOK_ID}": {
            "delete": {
                "description": "Remove the webhook from the account",
                "parameters": [
                    {
                        "$ref": "#/parameters/webhook_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The removed webhook object"
                    }
                }
            },
            "get": {
                "description": "Get the webhook details",
                "parameters": [
                    {
                        "$ref": "#/parameters/webhook_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The webhook object, in full"
                    }
                }
            },
            "patch": {
                "description": "Patch the webhook object",
                "parameters": [
                    {
                        "$ref": "#/parameters/webhook_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The patched webhook object, in full"
                    }
                }
            },
            "post": {
                "description": "Edit the webhook object",
                "parameters": [
                    {
                        "in": "body",
                        "name": "webhooks",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhooks"
                        }
                    },
                    {
                        "$ref": "#/parameters/webhook_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The edited webhook object, in full"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks/{WEBHOOK_ID}/attempts": {
            "get": {
                "description": "List the attempts Kazoo has made to the external servers for this webhook",
                "parameters": [
                    {
                        "$ref": "#/parameters/webhook_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects representing webhook attempts made for this webhook"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/websockets": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/websockets/{SOCKET_ID}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/socket_id"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "whitelabel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whitelabel"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "whitelabel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whitelabel"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/domains": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "whitelabel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whitelabel"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/icon": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "whitelabel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whitelabel"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/logo": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "whitelabel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whitelabel"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/welcome": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "whitelabel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whitelabel"
                        }
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{WHITELABEL_DOMAIN}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/whitelabel_domain"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{WHITELABEL_DOMAIN}/icon": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/whitelabel_domain"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{WHITELABEL_DOMAIN}/logo": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/whitelabel_domain"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{WHITELABEL_DOMAIN}/welcome": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/whitelabel_domain"
                    },
                    {
                        "$ref": "#/parameters/auth_token_header",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/account_id"
                    }
                ]
            }
        },
        "/api_auth": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "api_auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_auth"
                        }
                    }
                ]
            }
        },
        "/auth/authorize": {
            "put": {}
        },
        "/auth/callback": {
            "put": {}
        },
        "/auth/links": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/auth/tokeninfo": {
            "get": {}
        },
        "/google_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "google_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/google_auth"
                    }
                }
            }
        },
        "/ip_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "ip_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ip_auth"
                    }
                }
            }
        },
        "/rates": {
            "get": {
                "description": "Listing of available rate docs",
                "responses": {
                    "200": {
                        "description": "A list of available rate docs"
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "rates",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rates"
                        }
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "rates",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rates"
                        }
                    }
                ]
            }
        },
        "/rates/number/{PHONE_NUMBER}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/phone_number"
                    }
                ]
            }
        },
        "/rates/{RATE_ID}": {
            "delete": {
                "description": "Delete the rate doc",
                "parameters": [
                    {
                        "$ref": "#/parameters/rate_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The now-deleted rate doc"
                    }
                }
            },
            "get": {
                "description": "Get the rate doc",
                "parameters": [
                    {
                        "$ref": "#/parameters/rate_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The rate doc"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rate_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "rates",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rates"
                        }
                    },
                    {
                        "$ref": "#/parameters/rate_id"
                    }
                ]
            }
        },
        "/schemas": {
            "get": {
                "description": "Listing of installed schemas available",
                "responses": {
                    "200": {
                        "description": "A list of schemas installed"
                    }
                }
            }
        },
        "/schemas/{SCHEMA_NAME}": {
            "get": {
                "description": "Get the JSON schema definition",
                "parameters": [
                    {
                        "$ref": "#/parameters/schema_name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The schema definition"
                    }
                }
            }
        },
        "/schemas/{SCHEMA_NAME}/validation": {
            "put": {
                "description": "Perform a test validation",
                "parameters": [
                    {
                        "$ref": "#/parameters/schema_name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The results of the validation"
                    }
                }
            }
        },
        "/shared_auth": {
            "get": {},
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "shared_auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shared_auth"
                        }
                    }
                ]
            }
        },
        "/sup/{MODULE}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/module"
                    }
                ]
            }
        },
        "/sup/{MODULE}/{FUNCTION}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/module"
                    },
                    {
                        "$ref": "#/parameters/function"
                    }
                ]
            }
        },
        "/sup/{MODULE}/{FUNCTION}/{ARGS}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/module"
                    },
                    {
                        "$ref": "#/parameters/function"
                    },
                    {
                        "$ref": "#/parameters/args"
                    }
                ]
            }
        },
        "/system_configs": {
            "get": {}
        },
        "/system_configs/{SYSTEM_CONFIG_ID}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    }
                ]
            }
        },
        "/system_configs/{SYSTEM_CONFIG_ID}/{NODE}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    },
                    {
                        "$ref": "#/parameters/node"
                    }
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    },
                    {
                        "$ref": "#/parameters/node"
                    }
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    },
                    {
                        "$ref": "#/parameters/node"
                    }
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/system_config_id"
                    },
                    {
                        "$ref": "#/parameters/node"
                    }
                ]
            }
        },
        "/templates": {
            "get": {}
        },
        "/templates/{TEMPLATE_NAME}": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_name"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/template_name"
                    }
                ]
            }
        },
        "/token_auth": {
            "delete": {},
            "get": {}
        },
        "/ubiquiti_auth": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "ubiquiti_auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ubiquiti_auth"
                        }
                    }
                ]
            }
        },
        "/user_auth": {
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "user_auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_auth"
                        }
                    }
                ]
            }
        },
        "/user_auth/recovery": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "user_auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_auth"
                        }
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "user_auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_auth"
                        }
                    }
                ]
            }
        },
        "/user_auth/{AUTH_TOKEN}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/auth_token"
                    }
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "swagger": "2.0"
}
