{
    "basePath": "/v2",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "access_lists": {
            "additionalProperties": true,
            "description": "Access Control List entries for device or account",
            "name": "ACL Entry",
            "properties": {
                "cidrs": {
                    "description": "Classless Inter-Domain Routing IP notation for use on the access lists",
                    "items": {
                        "description": "CIDR IP to use on access lists",
                        "type": "string"
                    },
                    "name": "CIDR",
                    "required": true,
                    "type": "array"
                },
                "order": {
                    "description": "Allow-Deny or Deny-Allow?",
                    "enum": [
                        "allow,deny",
                        "deny,allow"
                    ],
                    "name": "order",
                    "required": true,
                    "type": "string"
                },
                "user_agent": {
                    "description": "RegExp to match valid user agent strings",
                    "name": "User-Agent",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "account_rate_limits": {
            "additionalProperties": true,
            "description": "describe limits for SIP requests",
            "name": "Rate limits",
            "properties": {
                "account": {
                    "$ref": "device_rate_limits"
                },
                "device": {
                    "$ref": "device_rate_limits"
                }
            },
            "required": true,
            "type": "object"
        },
        "accounts": {
            "description": "Accounts represent tenants or customers on the system. Each account represents an individual dataset or sandbox that only one tenant can access. The data set is architecturally independent from other tenants.",
            "name": "Account",
            "properties": {
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Account level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The account default caller ID parameters",
                    "name": "Default Caller ID",
                    "required": false,
                    "type": "object"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of default rules used to modify dialed numbers",
                    "name": "Default Dialplan",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "name": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "The default value for do-not-disturb",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the account is currently enabled",
                    "name": "Is Enabled?",
                    "required": false,
                    "type": "boolean"
                },
                "language": {
                    "default": "en-us",
                    "description": "The language for this account",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "metaflows": {
                    "$ref": "metaflows"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The default music on hold parameters",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the default music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the account",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "org": {
                    "description": "Full legal name of the organization",
                    "name": "Organizational name",
                    "required": false,
                    "type": "string"
                },
                "preflow": {
                    "additionalProperties": false,
                    "default": {},
                    "description": "Each property provides functionality that can be applied to calls using the callflow application",
                    "name": "Preflows",
                    "properties": {
                        "always": {
                            "description": "The ID of a callflow to always execute prior to processing the callflow with numbers/patterns matching the request",
                            "name": "Callflow ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "realm": {
                    "description": "The realm of the account, ie: 'account1.2600hz.com'",
                    "format": "uri",
                    "maxLength": 253,
                    "minLength": 4,
                    "name": "Realm",
                    "pattern": "^([.\\w_-]+)$",
                    "required": false,
                    "type": "string"
                },
                "ringtones": {
                    "default": {},
                    "name": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "name": "External",
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "name": "Internal",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "timezone": {
                    "default": "America/Los_Angeles",
                    "description": "The default timezone",
                    "maxLength": 32,
                    "minLength": 5,
                    "name": "Default Timezone",
                    "required": false,
                    "type": "string"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "$ref": "notify.callback"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "acls": {
            "additionalProperties": false,
            "description": "Access Control List entries",
            "name": "ACL Entry",
            "properties": {
                "cidr": {
                    "description": "Classless Inter-Domain Routing IP notation for use on the ACL",
                    "name": "CIDR",
                    "required": true,
                    "type": "string"
                },
                "description": {
                    "description": "Will be added as a comment for quick identification later",
                    "maxLen": 30,
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "network-list-name": {
                    "description": "The trusted list should represent anything that can issue calls without authorization.  The authoritative list should indicate inter-network routing equipment (SBC, etc).",
                    "enum": [
                        "authoritative",
                        "trusted"
                    ],
                    "name": "ACL List",
                    "required": true,
                    "type": "string"
                },
                "type": {
                    "default": "allow",
                    "description": "Allow or deny this CIDR",
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "name": "Type",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "allotments": {
            "description": "",
            "name": "Allotments",
            "patternProperties": {
                "^\\w+$": {
                    "properties": {
                        "amount": {
                            "minimum": 0,
                            "name": "Amount",
                            "required": true,
                            "type": "integer"
                        },
                        "cycle": {
                            "enum": [
                                "minutely",
                                "hourly",
                                "daily",
                                "weekly",
                                "monthly"
                            ],
                            "name": "Cycle",
                            "required": true,
                            "type": "string"
                        },
                        "group_consume": {
                            "items": {
                                "type": "string"
                            },
                            "name": "Group consuming",
                            "requred": false,
                            "type": "array"
                        },
                        "increment": {
                            "minimym": 1,
                            "name": "Increment",
                            "requred": false,
                            "type": "integer"
                        },
                        "minimum": {
                            "minimym": 0,
                            "name": "Increment",
                            "requred": false,
                            "type": "integer"
                        },
                        "no_consume_time": {
                            "minimym": 0,
                            "name": "No consume time",
                            "requred": false,
                            "type": "integer"
                        }
                    }
                },
                "description": "Allotment object.",
                "name": "Allotment object",
                "required": false,
                "type": "object"
            },
            "required": true,
            "type": "object"
        },
        "api_auth": {
            "additionalProperties": false,
            "description": "Provides an auth-token via an Account API key",
            "name": "API Auth",
            "properties": {
                "api_key": {
                    "description": "The Accounts API key",
                    "maxLength": 64,
                    "minLength": 64,
                    "name": "API Key",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "app": {
            "additionalProperties": false,
            "description": "Appstore applications",
            "name": "Application",
            "properties": {
                "api_url": {
                    "description": "Application api url",
                    "format": "uri",
                    "name": "Api url",
                    "required": true,
                    "type": "string"
                },
                "author": {
                    "description": "Application author",
                    "maxLength": 64,
                    "minLength": 2,
                    "name": "Author",
                    "required": true,
                    "type": "string"
                },
                "i18n": {
                    "description": "Application source url",
                    "name": "i18n",
                    "patternProperties": {
                        "[a-z]{2}\\-[A-Z]{2}": {
                            "properties": {
                                "description": {
                                    "minLength": 3,
                                    "name": "Description",
                                    "required": true,
                                    "type": "string"
                                },
                                "extended_description": {
                                    "name": "Extended Description",
                                    "required": false,
                                    "type": "string"
                                },
                                "features": {
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Features",
                                    "required": false,
                                    "type": "array"
                                },
                                "label": {
                                    "maxLength": 64,
                                    "minLength": 3,
                                    "name": "Label",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "required": true,
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "icon": {
                    "description": "Application icon",
                    "name": "Icon",
                    "required": true,
                    "type": "string"
                },
                "license": {
                    "description": "Application license",
                    "name": "License",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Application name",
                    "maxLength": 64,
                    "minLength": 3,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "price": {
                    "description": "Application price",
                    "minimum": 0,
                    "name": "Price",
                    "required": true,
                    "type": "integer"
                },
                "screenshots": {
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Screenshots",
                    "required": false,
                    "type": "array"
                },
                "source_url": {
                    "description": "Application source url",
                    "format": "uri",
                    "name": "Source Url",
                    "required": false,
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Tags",
                    "required": false,
                    "type": "array"
                },
                "urls": {
                    "name": "Urls",
                    "required": false,
                    "type": "object"
                },
                "version": {
                    "description": "Application version",
                    "name": "Version",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "audit_logs": {
            "description": "Audit log of what caused a billing event to occur",
            "name": "Audit Log",
            "properties": {
                "audit": {
                    "description": "Contains the accounts involved in the billable event (initial account and resellers)",
                    "patternProperties": {
                        "^[0-9a-zA-Z]{32}$": {
                            "description": "The account's quantity changes for the billing event",
                            "properties": {
                                "account_name": {
                                    "description": "The name of the account (for historical purposes)",
                                    "required": true,
                                    "type": "string"
                                },
                                "account_quantities": {
                                    "description": "The account's quantities as a result of the billing event",
                                    "type": "object"
                                },
                                "cascade_quantities": {
                                    "description": "The account's cascaded quantities as a result of the billing event",
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "authenticating_user": {
                    "description": "Information about the requestor who caused the billing event",
                    "properties": {
                        "account_id": {
                            "required": true,
                            "type": "string"
                        },
                        "account_name": {
                            "required": true,
                            "type": "string"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "user_id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tree": {
                    "description": "The account's tree (including the account), ordered from ancestor to account",
                    "items": {
                        "type": "string"
                    },
                    "required": true,
                    "type": "array"
                }
            },
            "required": false,
            "type": "object"
        },
        "blacklists": {
            "description": "Schema for a blacklists",
            "name": "Blacklists",
            "properties": {
                "name": {
                    "description": "A friendly name for the temporal rule set",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "numbers": {
                    "default": {},
                    "description": "Map of caller id number to block",
                    "properties": {},
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "bookkeepers": {
            "description": "The bookkeeper modules provided by Kazoo",
            "name": "Bookkeepers",
            "properties": {
                "braintree": {
                    "type": "object"
                },
                "local": {
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "call_waiting": {
            "description": "Parameters for server-side call waiting",
            "name": "Call waiting",
            "properties": {
                "enabled": {
                    "description": "Determines if server side call waiting is enabled/disabled",
                    "name": "Is Enabled?",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": false,
            "type": "object"
        },
        "caller_id": {
            "description": "Defines caller ID settings based on the type of call being made",
            "name": "Caller ID",
            "properties": {
                "emergency": {
                    "description": "The caller ID used when a resource is flagged as 'emergency'",
                    "name": "Emergency",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "external": {
                    "description": "The default caller ID used when dialing external numbers",
                    "name": "External",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "internal": {
                    "description": "The default caller ID used when dialing internal extensions",
                    "name": "Internal",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "callflows": {
            "description": "Call flows describe steps to take in order to process a phone call. They are trees of information related to a phone call such as \"answer, play file, record file\" etc. that are logically grouped together and ordered.",
            "name": "Callflow",
            "properties": {
                "featurecode": {
                    "description": "When the callflow is used as a featurecode this object tracks the intended match of the pattern and name of the feature",
                    "name": "Feature Code Parameters",
                    "properties": {
                        "name": {
                            "maxLength": 128,
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "maxLength": 30,
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "flow": {
                    "description": "A callflow node defines a module to execute, data to provide to that module, and one or more children to branch to",
                    "name": "Callflow",
                    "properties": {
                        "children": {
                            "default": {},
                            "description": "Children callflows",
                            "name": "Children Callflows",
                            "required": false,
                            "type": "object"
                        },
                        "data": {
                            "default": {},
                            "description": "The data/arguments of the callflow module",
                            "name": "Module Data",
                            "required": true,
                            "type": "object"
                        },
                        "module": {
                            "description": "The name of the callflow module to excute at this node",
                            "maxLength": 64,
                            "minLength": 1,
                            "name": "Module Name",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "metaflow": {
                    "$ref": "metaflows",
                    "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)"
                },
                "numbers": {
                    "default": [],
                    "description": "A list of static numbers that the callflow should execute for",
                    "items": {
                        "maxLength": 36,
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "name": "Numbers",
                    "required": false,
                    "type": "array"
                },
                "patterns": {
                    "default": [],
                    "description": "A list of regular expressions that the callflow should execute for, with optional capture groups",
                    "items": {
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "name": "Patterns",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.acdc_agent": {
            "description": "Validator for the acdc_agent callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                },
                "presence_id": {
                    "description": "",
                    "type": "string"
                },
                "presence_state": {
                    "description": ""
                },
                "sip": {
                    "properties": {
                        "username": {
                            "description": ""
                        }
                    },
                    "type": "object"
                },
                "timeout": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.acdc_member": {
            "description": "Validator for the acdc_member callflow's data object",
            "properties": {
                "priority": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.acdc_queue": {
            "description": "Validator for the acdc_queue callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.after_bridge": {
            "description": "Validator for the after_bridge callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                },
                "data": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.branch_bnumber": {
            "description": "Validator for the branch_bnumber callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.branch_variable": {
            "description": "Validator for the branch_variable callflow's data object",
            "properties": {
                "variable": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.call_forward": {
            "description": "Validator for the call_forward callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.call_waiting": {
            "description": "Validator for the call_waiting callflow's data object",
            "properties": {
                "action": {
                    "default": "toggle",
                    "description": "",
                    "type": "string"
                },
                "scope": {
                    "default": "device",
                    "description": "",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.callflow": {
            "description": "Validator for the callflow callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.camping_feature": {
            "description": "Validator for the camping_feature callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.check_cid": {
            "description": "Validator for the check_cid callflow's data object",
            "properties": {
                "caller_id": {
                    "properties": {
                        "external": {
                            "properties": {
                                "name": {
                                    "description": ""
                                },
                                "number": {
                                    "description": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "regex": {
                    "default": ".*",
                    "description": "",
                    "type": "string"
                },
                "use_absolute_mode": {
                    "default": false,
                    "description": "",
                    "type": "boolean"
                },
                "user_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.cidlistmatch": {
            "description": "Validator for the cidlistmatch callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.collect_dtmf": {
            "description": "Validator for the Collect DTMF callflow element",
            "properties": {
                "collection_name": {
                    "description": "Store collected DTMF in a named key",
                    "name": "Collection Name",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "How long, in milliseconds, to wait for the next DTMF",
                    "minimum": 1,
                    "name": "Interdigit Timeout",
                    "required": false,
                    "type": "integer"
                },
                "max_digits": {
                    "default": 1,
                    "description": "How many DTMFs to collect from the caller",
                    "minimum": 1,
                    "name": "Max DTMFs",
                    "required": false,
                    "type": "integer"
                },
                "terminator": {
                    "default": "#",
                    "description": "What DTMF will terminate collection before the timeout occurs",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "0",
                        "#",
                        "*"
                    ],
                    "name": "Terminator",
                    "required": false,
                    "type": "string"
                },
                "terminators": {
                    "description": "What DTMFs will terminate collection before the timeout occurs",
                    "items": {
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "0",
                            "#",
                            "*"
                        ],
                        "type": "string"
                    },
                    "name": "Terminators",
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "timeout": {
                    "default": 5000,
                    "description": "How long, in milliseconds, to wait for the first DTMF",
                    "minimum": 1,
                    "name": "Timeout",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.conference": {
            "description": "Validator for the Conference callflow element",
            "properties": {
                "config": {
                    "$schema": "conferences.json",
                    "description": "Build an ad-hoc conference using the conferences JSON schema",
                    "name": "Ad-Hoc Config",
                    "required": false,
                    "type": "object"
                },
                "id": {
                    "description": "Kazoo ID of the conference",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Conference ID",
                    "required": false,
                    "type": "string"
                },
                "moderator": {
                    "default": false,
                    "description": "Is the caller entering the conference as a moderator",
                    "name": "Moderator",
                    "required": false,
                    "type": "boolean"
                },
                "play_entry_tone": {
                    "default": true,
                    "description": "Should the Entry Tone be played",
                    "name": "Play Entry Tone",
                    "required": false,
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "play_exit_tone": {
                    "default": true,
                    "description": "Should the Exit Tone be played",
                    "name": "Play Exit Tone",
                    "required": false,
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "welcome_prompt": {
                    "description": "Describes how the caller is greeted on entering a conference",
                    "name": "Welcome Prompt",
                    "properties": {
                        "media_id": {
                            "description": "Media to play, either Kazoo media ID or URL",
                            "name": "Media",
                            "required": false,
                            "type": "string"
                        },
                        "play": {
                            "default": true,
                            "description": "Should the Welcome Prompt be played",
                            "name": "Play Welcome Prompt",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.dead_air": {
            "description": "Validator for the dead_air callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.device": {
            "description": "Validator for the device callflow's data object",
            "properties": {
                "can_call_self": {
                    "default": false,
                    "description": "Permits a user to call from one self-owned device to another",
                    "required": false,
                    "type": "boolean"
                },
                "can_text_self": {
                    "default": false,
                    "description": "Permits a user to send a text from one self-owned device to another",
                    "required": false,
                    "type": "boolean"
                },
                "delay": {
                    "default": 0,
                    "description": "",
                    "type": "integer"
                },
                "fail_on_single_reject": {
                    "descripption": "Should the call be ended on first REJECT (when multiple endpoints are being tried",
                    "required": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "The device ID",
                    "maxLength": 32,
                    "minLength": 32,
                    "required": true,
                    "type": "string"
                },
                "skype": {
                    "description": "Skype configuration options",
                    "properties": {},
                    "required": false,
                    "type": "object"
                },
                "source": {
                    "description": ""
                },
                "static_invite": {
                    "description": "Override SIP To header with this value",
                    "required": false,
                    "type": "string"
                },
                "suppress_clid": {
                    "description": "If true, does not set Caller ID attributes on the endpoint",
                    "required": false,
                    "type": "boolean"
                },
                "timeout": {
                    "default": 0,
                    "description": "How long, in seconds, to ring the endpoint(s)",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.directory": {
            "description": "Validator for the directory callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.disa": {
            "description": "Validator for the disa callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.do_not_disturb": {
            "description": "Validator for the do_not_disturb callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.dynamic_cid": {
            "description": "Validator for the dynamic_cid callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                },
                "enforce_call_restriction": {
                    "default": true,
                    "description": "",
                    "type": "boolean"
                },
                "id": {
                    "description": ""
                },
                "idx_name": {
                    "description": ""
                },
                "interdigit_timeout": {
                    "description": "",
                    "type": "integer"
                },
                "media_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.eavesdrop": {
            "description": "Validator for the eavesdrop callflow's data object",
            "properties": {
                "device_id": {
                    "description": ""
                },
                "user_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.eavesdrop_feature": {
            "description": "Validator for the eavesdrop_feature callflow's data object",
            "properties": {
                "group_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.fax_detect": {
            "description": "Validator for the fax_detect callflow's data object",
            "properties": {
                "duration": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.faxbox": {
            "description": "Validator for the faxbox callflow's data object",
            "properties": {
                "media": {
                    "properties": {
                        "fax_option": {
                            "description": ""
                        }
                    },
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.group": {
            "description": "Validator for the group callflow's data object",
            "properties": {
                "endpoints": {
                    "default": [],
                    "description": "",
                    "type": "array"
                },
                "fail_on_single_reject": {
                    "description": ""
                },
                "ignore_forward": {
                    "default": true,
                    "description": "",
                    "type": "boolean"
                },
                "repeats": {
                    "default": 1,
                    "description": "",
                    "type": "integer"
                },
                "ringback": {
                    "description": ""
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "",
                    "type": "string"
                },
                "timeout": {
                    "default": 20,
                    "description": "",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.group_pickup": {
            "description": "Validator for the group_pickup callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": ""
                },
                "approved_group_id": {
                    "description": ""
                },
                "approved_user_id": {
                    "description": ""
                },
                "device_id": {
                    "description": ""
                },
                "group_id": {
                    "description": ""
                },
                "user_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.group_pickup_feature": {
            "description": "Validator for the group_pickup_feature callflow's data object",
            "properties": {
                "type": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.hangup": {
            "description": "Validator for the hangup callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.hotdesk": {
            "description": "Validator for the hotdesk callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                },
                "interdigit_timeout": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.intercept": {
            "description": "Validator for the intercept callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": ""
                },
                "approved_group_id": {
                    "description": ""
                },
                "approved_user_id": {
                    "description": ""
                },
                "device_id": {
                    "description": ""
                },
                "group_id": {
                    "description": ""
                },
                "user_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.intercept_feature": {
            "description": "Validator for the intercept_feature callflow's data object",
            "properties": {
                "approved_device_id": {
                    "description": ""
                },
                "approved_group_id": {
                    "description": ""
                },
                "approved_user_id": {
                    "description": ""
                },
                "type": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.intercom": {
            "description": "Validator for the intercom callflow's data object",
            "properties": {
                "barge_calls": {
                    "description": "",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.language": {
            "description": "Validator for the Language callflow element",
            "properties": {
                "language": {
                    "description": "The language to default to for the rest of the call",
                    "name": "Language",
                    "pattern": "^[A-Za-z]{2}(-[A-Za-z]{2})?$",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.lookupcidname": {
            "description": "Validator for the Lookup callflow element",
            "properties": {
                "lists": {
                    "default": [],
                    "description": "Array of list ids",
                    "items": {
                        "type": "string"
                    },
                    "name": "Array of list ids",
                    "required": "true",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.manual_presence": {
            "description": "Validator for the Manual Presence callflow action",
            "properties": {
                "presence_id": {
                    "description": "The Presence ID to send a presence notification about",
                    "name": "Presence ID",
                    "required": true,
                    "type": "string"
                },
                "status": {
                    "default": "idle",
                    "description": "The status to update to",
                    "enum": [
                        "idle",
                        "ringing",
                        "busy"
                    ],
                    "name": "Presence Status",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.menu": {
            "description": "Validator for the menu callflow's data object",
            "properties": {
                "interdigit_timeout": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.move": {
            "description": "Validator for the move callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.nomorobo": {
            "description": "Validator for the NoMoRobo callflow action",
            "properties": {
                "password": {
                    "description": "Password to the NoMoRobo service",
                    "maxLength": 1000,
                    "minLength": 1,
                    "name": "NoMoRobo Password",
                    "required": false,
                    "type": "string"
                },
                "username": {
                    "description": "Username to the NoMoRobo service",
                    "maxLength": 1000,
                    "minLength": 1,
                    "name": "NoMoRobo Username",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.offnet": {
            "description": "Validator for the offnet callflow's data object",
            "properties": {
                "bypass_e164": {
                    "description": "",
                    "type": "boolean"
                },
                "caller_id_type": {
                    "default": "external",
                    "description": "",
                    "type": "string"
                },
                "custom_sip_headers": {
                    "default": {},
                    "description": "",
                    "type": "object"
                },
                "do_not_normalize": {
                    "description": "",
                    "type": "boolean"
                },
                "dynamic_flags": {
                    "description": ""
                },
                "emit_account_id": {
                    "description": "",
                    "type": "boolean"
                },
                "format_from_uri": {
                    "description": "",
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": ""
                },
                "hunt_account_id": {
                    "description": ""
                },
                "ignore_early_media": {
                    "default": false,
                    "description": "",
                    "type": "boolean"
                },
                "outbound_flags": {
                    "description": ""
                },
                "ringback": {
                    "description": ""
                },
                "timeout": {
                    "description": ""
                },
                "to_did": {
                    "description": ""
                },
                "use_local_resources": {
                    "default": true,
                    "description": "",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.page_group": {
            "description": "Validator for the page_group callflow's data object",
            "properties": {
                "endpoints": {
                    "default": [],
                    "description": "",
                    "type": "array"
                },
                "timeout": {
                    "default": 5,
                    "description": "",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.park": {
            "description": "Validator for the park callflow's data object",
            "properties": {
                "action": {
                    "default": "park",
                    "description": "",
                    "type": "string"
                },
                "default_callback_timeout": {
                    "description": "",
                    "type": "integer"
                },
                "default_presence_type": {
                    "description": "",
                    "type": "string"
                },
                "default_ringback_timeout": {
                    "description": "",
                    "type": "integer"
                },
                "slots": {
                    "default": {},
                    "description": "",
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.pivot": {
            "description": "Validator for the Pivot callflow element",
            "properties": {
                "cdr_url": {
                    "description": "Optional URL to send the CDR to at the end of the call",
                    "name": "CDR URL",
                    "required": false,
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "Store debug logs related to processing this Pivot call",
                    "name": "Debug?",
                    "required": false,
                    "type": "boolean"
                },
                "method": {
                    "default": "get",
                    "description": "What HTTP verb to send the request(s) with",
                    "enum": [
                        "get",
                        "post",
                        "GET",
                        "POST"
                    ],
                    "name": "Method",
                    "required": false,
                    "type": "string"
                },
                "req_format": {
                    "default": "kazoo",
                    "description": "What format of Pivot will the your server respond with",
                    "enum": [
                        "kazoo",
                        "twiml"
                    ],
                    "name": "Payload Type",
                    "required": false,
                    "type": "string"
                },
                "voice_url": {
                    "description": "What URL to request the initial Pivot callflow",
                    "name": "Script URL",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.play": {
            "description": "Validator for the play callflow's data object",
            "properties": {
                "answer": {
                    "description": "",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.prepend_cid": {
            "description": "Validator for the prepend_cid callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                },
                "caller_id_name_prefix": {
                    "description": ""
                },
                "caller_id_number_prefix": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.privacy": {
            "description": "Validator for the privacy callflow's data object",
            "properties": {
                "mode": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.receive_fax": {
            "description": "Validator for the receive_fax callflow's data object",
            "properties": {
                "media": {
                    "properties": {
                        "fax_option": {
                            "description": ""
                        }
                    },
                    "type": "object"
                },
                "owner_id": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.record_call": {
            "description": "Validator for the Record Call callflow action",
            "properties": {
                "action": {
                    "default": "start",
                    "description": "Whether to start or stop the recording",
                    "enum": [
                        "start",
                        "stop"
                    ],
                    "name": "Action",
                    "required": false,
                    "type": "string"
                },
                "format": {
                    "description": "What format to store the recording on disk",
                    "enum": [
                        "mp3",
                        "wav"
                    ],
                    "name": "Format",
                    "type": "string"
                },
                "record_min_sec": {
                    "description": "The minimum length, in seconds, the recording must be to be considered successful. Otherwise it is deleted",
                    "name": "Minimum recording seconds",
                    "required": false,
                    "type": "integer"
                },
                "record_on_answer": {
                    "default": false,
                    "description": "Whether to delay the recording until the channel is answered",
                    "name": "Record On Answer",
                    "required": false,
                    "type": "boolean"
                },
                "record_on_bridge": {
                    "default": false,
                    "description": "Whether to delay the recording until the channel is bridged",
                    "name": "Record On Bridge",
                    "required": false,
                    "type": "boolean"
                },
                "record_sample_rate": {
                    "description": "What sampling rate to use on the recording",
                    "name": "Sample Rate",
                    "required": false,
                    "type": "integer"
                },
                "time_limit": {
                    "default": 3600,
                    "description": "Time limit, in seconds, for the recording",
                    "maximum": 3600,
                    "minimum": 5,
                    "name": "Time Limit",
                    "required": false,
                    "type": "integer"
                },
                "url": {
                    "description": "The URL to use when sending the recording for storage",
                    "name": "URL",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.record_caller": {
            "description": "Record the caller's audio stream",
            "properties": {
                "format": {
                    "description": "What format to store the recording on disk",
                    "enum": [
                        "mp3",
                        "wav"
                    ],
                    "name": "Format",
                    "type": "string"
                },
                "method": {
                    "default": "put",
                    "description": "What HTTP method to use when sending the recording",
                    "enum": [
                        "put",
                        "post"
                    ],
                    "type": "string"
                },
                "time_limit": {
                    "default": 3600,
                    "description": "Time limit, in seconds, for the recording",
                    "maximum": 3600,
                    "minimum": 5,
                    "name": "Time Limit",
                    "required": false,
                    "type": "integer"
                },
                "url": {
                    "description": "The URL to use when sending the recording for storage",
                    "name": "URL",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.resources": {
            "description": "Validator for the resources callflow's data object",
            "properties": {
                "bypass_e164": {
                    "description": "",
                    "type": "boolean"
                },
                "caller_id_type": {
                    "default": "external",
                    "description": "",
                    "type": "string"
                },
                "custom_sip_headers": {
                    "default": {},
                    "description": "",
                    "type": "object"
                },
                "do_not_normalize": {
                    "description": "",
                    "type": "boolean"
                },
                "dynamic_flags": {
                    "description": ""
                },
                "emit_account_id": {
                    "description": "",
                    "type": "boolean"
                },
                "format_from_uri": {
                    "description": "",
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": ""
                },
                "hunt_account_id": {
                    "description": ""
                },
                "ignore_early_media": {
                    "default": false,
                    "description": "",
                    "type": "boolean"
                },
                "outbound_flags": {
                    "description": ""
                },
                "ringback": {
                    "description": ""
                },
                "timeout": {
                    "description": ""
                },
                "to_did": {
                    "description": ""
                },
                "use_local_resources": {
                    "default": true,
                    "description": "",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.response": {
            "description": "Validator for the Response callflow action",
            "properties": {
                "code": {
                    "default": "486",
                    "description": "The SIP Hangup code to respond with",
                    "name": "Code",
                    "required": true,
                    "type": "integer"
                },
                "media": {
                    "description": "Optional media file to play before responding with the hangup code/cause",
                    "name": "Media",
                    "required": false,
                    "type": "string"
                },
                "message": {
                    "description": "The SIP Hangup cause to respond with",
                    "name": "Message",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.ring_group": {
            "description": "Validator for the Ring Group callflow element",
            "properties": {
                "endpoints": {
                    "default": [],
                    "description": "Endpoint IDs (devices, users, etc) included in the ring group",
                    "items": {
                        "description": "ID of the endpoint (device, user, etc)",
                        "properties": {
                            "delay": {
                                "default": 0,
                                "description": "How long to delay ringing the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "endpoint_type": {
                                "description": "The type (device, user, etc) of endpoint",
                                "enum": [
                                    "device",
                                    "user",
                                    "group"
                                ],
                                "required": true,
                                "type": "string"
                            },
                            "id": {
                                "description": "The ID of the endpoint",
                                "maxLength": 128,
                                "minLength": 1,
                                "required": true,
                                "type": "string"
                            },
                            "timeout": {
                                "default": 20,
                                "description": "How long to ring the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "weight": {
                                "description": "Weight of endpoint, different usage in various strategies",
                                "maximum": 100,
                                "minimum": 1,
                                "required": false,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "fail_on_single_reject": {
                    "description": ""
                },
                "ignore_forward": {
                    "default": true,
                    "description": "Whether to ring forwarded endpoints",
                    "required": false,
                    "type": "boolean"
                },
                "repeats": {
                    "default": 1,
                    "description": "How many times to retry the ring group",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "ringback": {
                    "description": "Ringback to use",
                    "required": false,
                    "type": "string"
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "How to ring the members of the group",
                    "enum": [
                        "simultaneous",
                        "single",
                        "weighted_random"
                    ],
                    "required": false,
                    "type": "string"
                },
                "timeout": {
                    "default": 20,
                    "description": "How long to ring the ring group before continuing, in seconds",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.send_dtmf": {
            "description": "Validator for the Send DTMF callflow action",
            "properties": {
                "digits": {
                    "description": "String of DTMF tones to send",
                    "name": "Digits",
                    "required": true,
                    "type": "string"
                },
                "duration_ms": {
                    "description": "How long, in milliseconds, to send each DTMF",
                    "name": "Duration(ms)",
                    "required": false,
                    "type": [
                        "string",
                        "integer"
                    ]
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.set": {
            "description": "Validator for the set callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.set_cid": {
            "description": "Validator for the set_cid callflow's data object",
            "properties": {
                "caller_id_name": {
                    "default": "",
                    "description": "",
                    "type": "string"
                },
                "caller_id_number": {
                    "default": "",
                    "description": "",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.set_variable": {
            "description": "Validator for the set_variable callflow's data object",
            "properties": {
                "channel": {
                    "default": "a",
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "",
                    "type": "string"
                },
                "variable": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.skel": {
            "description": "Validator for the skel callflow's data object",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "callflows.sleep": {
            "description": "Validator for the sleep callflow's data object",
            "properties": {
                "duration": {
                    "default": 0,
                    "description": "",
                    "type": "integer"
                },
                "unit": {
                    "default": "s",
                    "description": "",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.temporal_route": {
            "description": "Validator for the temporal_route callflow's data object",
            "properties": {
                "action": {
                    "description": ""
                },
                "interdigit_timeout": {
                    "description": "",
                    "type": "integer"
                },
                "rule_set": {
                    "description": ""
                },
                "rules": {
                    "default": [],
                    "description": "",
                    "type": "array"
                },
                "timezone": {
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.tts": {
            "description": "Validator for the TTS (Text-to-speech) callflow action",
            "properties": {
                "engine": {
                    "description": "What TTS engine to use",
                    "enum": [
                        "flite",
                        "ispeech"
                    ],
                    "name": "Engine",
                    "required": false,
                    "type": "string"
                },
                "language": {
                    "default": "en",
                    "description": "The language of the speaker",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "text": {
                    "description": "The text to speak",
                    "maxLength": 1000,
                    "minLength": 1,
                    "name": "Text To Speak",
                    "required": true,
                    "type": "string"
                },
                "voice": {
                    "default": "female",
                    "description": "What voice to use when speaking the text",
                    "name": "Voice of speaker",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.user": {
            "description": "Validator for the user callflow's data object",
            "properties": {
                "can_call_self": {
                    "description": "",
                    "type": "boolean"
                },
                "can_text_self": {
                    "description": "",
                    "type": "boolean"
                },
                "delay": {
                    "default": 0,
                    "description": "",
                    "type": "integer"
                },
                "fail_on_single_reject": {
                    "description": ""
                },
                "source": {
                    "description": ""
                },
                "static_invite": {
                    "description": ""
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "",
                    "type": "string"
                },
                "suppress_clid": {
                    "description": "",
                    "type": "boolean"
                },
                "timeout": {
                    "default": 20,
                    "description": "",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.voicemail": {
            "description": "Validator for the Voicemail callflow element",
            "properties": {
                "action": {
                    "default": "compose",
                    "description": "Whether to check voicemail box or compose a new voicemail message",
                    "enum": [
                        "check",
                        "compose"
                    ],
                    "name": "Action",
                    "required": false,
                    "type": "string"
                },
                "callerid_match_login": {
                    "default": false,
                    "description": "",
                    "type": "boolean"
                },
                "id": {
                    "description": "The ID of the voicemail box",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "ID",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "default": 2000,
                    "description": "The amount of time (in milliseconds) to wait for the caller to press the next digit after pressing a digit",
                    "name": "Interdigit Timeout",
                    "required": false,
                    "type": "integer"
                },
                "max_message_length": {
                    "default": 500,
                    "description": "Max length of the message that caller can leave in voicemail box",
                    "name": "Max Message Lenght",
                    "required": false,
                    "type": "integer"
                },
                "single_mailbox_login": {
                    "default": false,
                    "description": "",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.webhook": {
            "description": "Validator for the webhook callflow's data object",
            "properties": {
                "custom_data": {
                    "description": "",
                    "type": "object"
                },
                "http_verb": {
                    "description": "",
                    "type": "string"
                },
                "retries": {
                    "description": "",
                    "type": "integer"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "cccps": {
            "description": "Calling cards callback platform user's info",
            "id": "http://json-schema.org/draft-03/schema#",
            "properties": {
                "active": {
                    "default": false,
                    "description": "Show's whether CID/PIN active",
                    "type": "boolean"
                },
                "cid": {
                    "description": "CID to authorize",
                    "required": false,
                    "type": "string"
                },
                "max_concurent_calls_per_user": {
                    "description": "Calls per user limit. Counts all user's legs and compares to max_concurent_calls_per_user multiplied by 2",
                    "required": false,
                    "type": "integer"
                },
                "pin": {
                    "description": "PIN to authorize",
                    "required": false,
                    "type": "string"
                },
                "retain_cid": {
                    "description": "Pass initial caller number to the callee",
                    "required": false,
                    "type": "boolean"
                },
                "user_id": {
                    "description": "The ID of the user object that 'owns' cid/pin",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                }
            }
        },
        "cdrs": {
            "additionalProperties": false,
            "description": "Call Detail Records",
            "name": "CDR",
            "properties": {
                "app_name": {
                    "description": "The Kazoo application that issued the CDR",
                    "name": "Application Name",
                    "required": false,
                    "type": "string"
                },
                "app_version": {
                    "description": "The internal Kazoo version number of the application that issued the CDR",
                    "name": "Application Version",
                    "required": false,
                    "type": "string"
                },
                "billing_seconds": {
                    "description": "The number of seconds the call leg can be billed for (typically from when the call leg is answered",
                    "name": "Billing (seconds)",
                    "required": false,
                    "type": "string"
                },
                "call_direction": {
                    "description": "Direction of the call, relative to the media switch",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "name": "Direction",
                    "required": false,
                    "type": "string"
                },
                "call_id": {
                    "description": "Unique identifier of the call leg",
                    "name": "Call ID",
                    "required": true,
                    "type": "string"
                },
                "callee_id_name": {
                    "description": "The indicated name of the callee",
                    "name": "Callee ID Name",
                    "required": false,
                    "type": "string"
                },
                "callee_id_number": {
                    "description": "The indicated number of the callee",
                    "name": "Callee ID Number",
                    "required": false,
                    "type": "string"
                },
                "caller_id_name": {
                    "description": "The indicated name of the caller",
                    "name": "Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "caller_id_number": {
                    "description": "The indicated number of the caller",
                    "name": "Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "custom_channel_vars": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "Kazoo-specific key/value pairs set on the channel",
                    "name": "CCVs",
                    "required": false,
                    "type": "object"
                },
                "custom_sip_headers": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "A property list of SIP headers beging with the prefix 'X-'",
                    "name": "Custom SIP Headers",
                    "required": false,
                    "type": "object"
                },
                "digits_dialed": {
                    "description": "All the DTMF tones detected on this leg of the call",
                    "name": "Digits Dialed",
                    "required": false,
                    "type": "string"
                },
                "disposition": {
                    "description": "Who sent the SIP BYE message",
                    "name": "Hangup Disposition",
                    "required": false,
                    "type": "string"
                },
                "duration_seconds": {
                    "description": "The duration of the call leg, in seconds",
                    "name": "Duration (seconds)",
                    "required": false,
                    "type": "string"
                },
                "fax_bad_rows": {
                    "required": false,
                    "type": "string"
                },
                "fax_ecm_used": {
                    "required": false,
                    "type": "string"
                },
                "fax_result_code": {
                    "required": false,
                    "type": "string"
                },
                "fax_result_text": {
                    "required": false,
                    "type": "string"
                },
                "fax_success": {
                    "required": false,
                    "type": "string"
                },
                "fax_total_pages": {
                    "required": false,
                    "type": "string"
                },
                "fax_transfer_rate": {
                    "required": false,
                    "type": "string"
                },
                "fax_transferred_pages": {
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "Built by Kazoo, depending on direction, to represent the From user",
                    "name": "From",
                    "required": false,
                    "type": "string"
                },
                "from_uri": {
                    "description": "The From SIP URI",
                    "name": "SIP From",
                    "required": false,
                    "type": "string"
                },
                "hangup_cause": {
                    "description": "The reason for the call leg's termination",
                    "name": "Hangup Cause",
                    "required": false,
                    "type": "string"
                },
                "hangup_code": {
                    "description": "The SIP hangup code, if available",
                    "name": "Hangup Code",
                    "required": false,
                    "type": "string"
                },
                "local_sdp": {
                    "description": "The SDP negotiated by the local agent",
                    "name": "Local SDP",
                    "required": false,
                    "type": "string"
                },
                "media_server": {
                    "description": "The hostname of the media server that processed the call",
                    "name": "Media Server",
                    "required": false,
                    "type": "string"
                },
                "node": {
                    "description": "The ecallmgr which issued the CDR",
                    "name": "Erlang Node",
                    "required": false,
                    "type": "string"
                },
                "other_leg_call_id": {
                    "description": "If this leg was bridged, the call-id of the opposite leg",
                    "name": "Other Leg Call ID",
                    "required": false,
                    "type": "string"
                },
                "other_leg_caller_id_name": {
                    "description": "Caller ID name of the bridged leg",
                    "name": "Other Leg Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "other_leg_caller_id_number": {
                    "description": "Caller ID number of the bridged leg",
                    "name": "Other Leg Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "other_leg_destination_number": {
                    "description": "Dialed number of the other leg",
                    "name": "Other Leg Destination",
                    "required": false,
                    "type": "string"
                },
                "other_leg_direction": {
                    "description": "direction of the other leg, relative to the media server",
                    "name": "Other Leg Direction",
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "ID used in NOTIFY SIP messages",
                    "name": "Presence ID",
                    "required": false,
                    "type": "string"
                },
                "remote_sdp": {
                    "description": "The SDP negotiated by the remote agent",
                    "name": "Remote SDP",
                    "required": false,
                    "type": "string"
                },
                "request": {
                    "description": "Built by Kazoo this is the processed request URI",
                    "name": "Request",
                    "required": false,
                    "type": "string"
                },
                "ringing_seconds": {
                    "description": "How many seconds the leg was ringing (pre-answer)",
                    "name": "Ringing (seconds)",
                    "required": false,
                    "type": "string"
                },
                "timestamp": {
                    "description": "UTC timestamp, in gregorian seconds, of when the CDR was generated",
                    "name": "Timestamp (Gregorian seconds)",
                    "required": false,
                    "type": "string"
                },
                "to": {
                    "description": "Built by Kazoo, depending on direction, to represent the To user",
                    "name": "To",
                    "required": false,
                    "type": "string"
                },
                "to_uri": {
                    "description": "The To SIP URI",
                    "name": "SIP To",
                    "required": false,
                    "type": "string"
                },
                "user_agent": {
                    "description": "User agent header from SIP packet",
                    "name": "SIP User Agent",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "clicktocall": {
            "description": "Click-to-call allows you to create URLs that can be POSTed to with a phone number or SIP URI and create a phone call from the provided contact information to a destination you have pre-determined.",
            "name": "Click-to-Call",
            "properties": {
                "auth_required": {
                    "default": true,
                    "description": "Determines if this click to call requires valid auth-tokens when invoked",
                    "name": "Is Auth Required?",
                    "required": false,
                    "type": "boolean"
                },
                "caller_id_number": {
                    "description": "Explicitly set caller id number",
                    "name": "Keep Original Caller ID?",
                    "required": false,
                    "type": "string"
                },
                "dial_first": {
                    "description": "Determinates what will be dialed first: extension or contact",
                    "enum": [
                        "extension",
                        "contact"
                    ],
                    "name": "Dial first",
                    "required": false,
                    "type": "string"
                },
                "extension": {
                    "description": "The extension to connect to when the click to call is invoked",
                    "name": "Extension Number",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the click to call",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "outbound_callee_id_name": {
                    "description": "Callee ID Name of the device calling out to the contact number",
                    "name": "Outbound Callee ID Name",
                    "required": false,
                    "type": "string"
                },
                "outbound_callee_id_number": {
                    "description": "Callee ID Number of the device calling out to the contact number",
                    "name": "Outbound Callee ID Number",
                    "required": false,
                    "type": "string"
                },
                "throttle": {
                    "description": "The rate that this click to call can be invoked",
                    "name": "Rate Limit",
                    "required": false,
                    "type": "integer"
                },
                "whitelist": {
                    "description": "A list of regular expressions that the click to call can dial to",
                    "items": {
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "name": "Allowed Numbers",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "conferences": {
            "description": "Schema for conferences",
            "name": "Conference",
            "properties": {
                "conference_numbers": {
                    "default": [],
                    "description": "Defines conference numbers that can be used by members or moderators",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "General Call In Numbers",
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "focus": {
                    "description": "This is a read-only property indicating the media server hosting the conference",
                    "name": "Focus",
                    "required": false,
                    "type": "string"
                },
                "member": {
                    "default": {},
                    "description": "Defines the discovery properties for a member",
                    "name": "Member Call In",
                    "properties": {
                        "join_deaf": {
                            "default": false,
                            "description": "Determines if a member will join deaf",
                            "name": "Join Deaf?",
                            "required": false,
                            "type": "boolean"
                        },
                        "join_muted": {
                            "default": true,
                            "description": "Determines if a member will join muted",
                            "name": "Join Muted?",
                            "required": false,
                            "type": "boolean"
                        },
                        "numbers": {
                            "default": [],
                            "description": "Defines the conference number(s) for members",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "minItems": 0,
                            "name": "Call In Numbers",
                            "required": false,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "pins": {
                            "default": [],
                            "description": "Defines the pin number(s) for members",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Pin Numbers",
                            "required": false,
                            "type": "array"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "moderator": {
                    "default": {},
                    "description": "Defines the discovery properties for a moderator",
                    "name": "Moderator Call In",
                    "properties": {
                        "join_deaf": {
                            "default": false,
                            "description": "Determines if a moderator will join deaf",
                            "name": "Join Deaf?",
                            "required": false,
                            "type": "boolean"
                        },
                        "join_muted": {
                            "default": false,
                            "description": "Determines if a moderator will join muted",
                            "name": "Join Muted?",
                            "required": false,
                            "type": "boolean"
                        },
                        "numbers": {
                            "default": [],
                            "description": "Defines the conference number(s) for moderators",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Call In Numbers",
                            "required": false,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "pins": {
                            "default": [],
                            "description": "Defines the pin number(s) for moderators",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Pin Numbers",
                            "required": false,
                            "type": "array"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the conference",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "owner_id": {
                    "description": "The user ID who manages this conference",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                },
                "play_name": {
                    "default": false,
                    "description": "Do we need to announce new conference members?",
                    "name": "Play name",
                    "required": false,
                    "type": "boolean"
                },
                "profile": {
                    "description": "The XML profile name used to configure the conference",
                    "name": "Profile",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "connectivity": {
            "description": "Trunkstore configuration document - this is old stuff; do not recommend building off this if possible",
            "id": "http://json-schema.org/draft-03/schema#",
            "properties": {
                "account": {
                    "description": "Information that applies to the account as a whole",
                    "properties": {
                        "auth_realm": {
                            "description": "The realm any device in the account will use to authenticate with",
                            "minLength": 1,
                            "type": "string"
                        },
                        "caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "emergency_caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "trunks": {
                            "description": "The number of two-way trunks this account has purchased",
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "name": {
                    "description": "Human-friendly name of the trunkstore account",
                    "type": "string"
                },
                "servers": {
                    "default": [],
                    "desciption": "What servers will be allowed to make/receive calls via this account",
                    "items": {
                        "properties": {
                            "DIDs": {
                                "patternProperties": {
                                    "^\\+?\\d*$": {
                                        "properties": {
                                            "caller_id": {
                                                "properties": {
                                                    "cid_name": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    },
                                                    "cid_number": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failover": {
                                                "description": "Route inbound call to another destination if this server fails to handle the call",
                                                "properties": {
                                                    "e164": {
                                                        "description": "An E.164 formatted DID to dial for failover",
                                                        "type": "string"
                                                    },
                                                    "sip": {
                                                        "description": "A SIP URI (sip:user@host) to call for failover",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "force_outbound": {
                                                "default": false,
                                                "type": "boolean"
                                            },
                                            "options": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "auth": {
                                "properties": {
                                    "auth_method": {
                                        "default": "password",
                                        "description": "What type of auth mechanism to use",
                                        "enum": [
                                            "password",
                                            "Password",
                                            "IP",
                                            "ip"
                                        ],
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_password": {
                                        "description": "Password of the user@auth_realm",
                                        "minLength": 1,
                                        "required": false,
                                        "type": "string"
                                    },
                                    "auth_user": {
                                        "description": "Username for authentication",
                                        "minLength": 1,
                                        "required": false,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "description": "IP address for this device",
                                        "name": "IP (sip)",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "port": {
                                        "description": "Port to send SIP traffic for the remote device",
                                        "name": "Port (sip)",
                                        "required": false,
                                        "type": "integer"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "name": {
                                "description": "Human-friendly name of the server",
                                "minLength": 1,
                                "type": "string"
                            },
                            "options": {
                                "caller_id": {
                                    "properties": {
                                        "cid_name": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "cid_number": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delay": {
                                    "default": 0,
                                    "description": "The time, in seconds, to wait before attempting to call the server",
                                    "type": "integer"
                                },
                                "enabled": {
                                    "default": true,
                                    "description": "Is the server ready for sending and receiving calls",
                                    "type": "boolean"
                                },
                                "failover": {
                                    "description": "Route inbound call to another destination if this server fails to handle the call",
                                    "properties": {
                                        "e164": {
                                            "description": "An E.164 formatted DID to dial for failover",
                                            "type": "string"
                                        },
                                        "sip": {
                                            "description": "A SIP URI (sip:user@host) to call for failover",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "force_outbound": {
                                    "default": false,
                                    "description": "If true, will send the call over configured carriers instead of to the server (as opposed to the 'enabled' flag, which will reject the calls)",
                                    "type": "boolean"
                                },
                                "ignore_early_media": {
                                    "type": "boolean"
                                },
                                "inbound_format": {
                                    "default": "npan",
                                    "description": "Determines how the INVITE is sent to the server",
                                    "enum": [
                                        "e164",
                                        "npan",
                                        "1npan",
                                        "username"
                                    ],
                                    "type": "string"
                                },
                                "ip": {
                                    "description": "IP address for this device",
                                    "name": "IP (sip)",
                                    "required": false,
                                    "type": "string"
                                },
                                "media_handling": {
                                    "default": "bypass",
                                    "description": "Determine whether the switch should be in the media path or not",
                                    "enum": [
                                        "process",
                                        "bypass"
                                    ],
                                    "type": "string"
                                },
                                "port": {
                                    "description": "Port to send SIP traffic for the remote device",
                                    "name": "Port (sip)",
                                    "required": false,
                                    "type": "integer"
                                },
                                "progress_timeout": {
                                    "description": "The time, in seconds, to wait for the server to progress in the call, before trying an optionally defined failover route or terminating the call",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "sip_headers": {
                                    "description": "List of arbitrary SIP headers to add to the INVITE",
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "description": "The time, in seconds, to wait for an answer from the server",
                                    "type": "integer"
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            }
        },
        "device_rate_limits": {
            "additionalProperties": true,
            "description": "describe limits for SIP requests",
            "name": "Rate limits",
            "properties": {
                "per_minute": {
                    "additionalProperties": false,
                    "description": "The limits to apply by a minute",
                    "name": "Per minute",
                    "properties": {
                        "invites": {
                            "description": "Count for the specified SIP method",
                            "name": "Invites",
                            "required": false,
                            "type": "integer"
                        },
                        "registrations": {
                            "description": "Count for the specified SIP method",
                            "name": "Registrations",
                            "required": false,
                            "type": "integer"
                        },
                        "total_packets": {
                            "description": "Summary count for all of the SIP methods",
                            "name": "Total packets",
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "per_second": {
                    "additionalProperties": false,
                    "description": "The limits to apply by a second",
                    "name": "Per second",
                    "properties": {
                        "invites": {
                            "description": "Count for the specified SIP method",
                            "name": "Invites",
                            "required": false,
                            "type": "integer"
                        },
                        "registrations": {
                            "description": "Count for the specified SIP method",
                            "name": "Registrations",
                            "required": false,
                            "type": "integer"
                        },
                        "total_packets": {
                            "description": "Summary count for all of the SIP methods",
                            "name": "Total packets",
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "devices": {
            "description": "A device be it a SIP phone or landline number",
            "name": "Device",
            "properties": {
                "call_forward": {
                    "description": "The device call forward parameters",
                    "name": "Call Forwarding Parameters",
                    "properties": {
                        "direct_calls_only": {
                            "default": false,
                            "description": "Determines if the calls that are not directly sent to the device should be forwarded",
                            "name": "Direct Calls Only?",
                            "required": false,
                            "type": "boolean"
                        },
                        "enabled": {
                            "default": false,
                            "description": "Determines if the call forwarding should be used",
                            "name": "Is Enabled?",
                            "required": false,
                            "type": "boolean"
                        },
                        "failover": {
                            "default": false,
                            "description": "Enable the call-forwarding parameters if the device is offline",
                            "name": "Use if Device Offline?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "default": true,
                            "description": "The option to determine if early media from the call forwarded number should ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "keep_caller_id": {
                            "default": true,
                            "description": "Determines if the caller id is kept when the call is forwarded, if not the devices caller id is used",
                            "name": "Keep Original Caller ID?",
                            "required": false,
                            "type": "boolean"
                        },
                        "number": {
                            "description": "The number to forward calls to",
                            "maxLength": 15,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        },
                        "require_keypress": {
                            "default": true,
                            "description": "Determines if the callee is prompted to press 1 to accept the call",
                            "name": "Require Keypress?",
                            "required": false,
                            "type": "boolean"
                        },
                        "substitute": {
                            "default": true,
                            "description": "Determines if the call forwarding replaces the device",
                            "name": "Substitute Device?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Device level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The device caller ID parameters",
                    "required": false,
                    "type": "object"
                },
                "contact_list": {
                    "default": {},
                    "name": "Contect List Parameters",
                    "properties": {
                        "exclude": {
                            "description": "If set to true the device is excluded from the contact list",
                            "name": "Is Excluded?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "device_type": {
                    "description": "Arbitrary device type used by the UI and billing system",
                    "name": "Device Type",
                    "required": false,
                    "type": "string"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of rules used to modify dialed numbers",
                    "name": "Dialplan",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "name": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "Is do-not-disturb enabled for this device?",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the device is currently enabled",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "exclude_from_queues": {
                    "default": false,
                    "description": "Do not ring this device when calling user/agent in queue",
                    "name": "Exclude from Queues",
                    "required": false,
                    "type": "boolean"
                },
                "language": {
                    "description": "The language for the device",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The audio media parameters",
                            "name": "Audio Options",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of audio codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "name": "Codecs",
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "enum": [
                                true,
                                false,
                                "auto"
                            ],
                            "name": "Is Media Direct?",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "warning": "The string type is deprecated, please use this as a boolean"
                        },
                        "encryption": {
                            "default": {},
                            "name": "Encryption Parameters",
                            "properties": {
                                "enforce_security": {
                                    "default": false,
                                    "name": "Is Encryption Enabled?",
                                    "required": false,
                                    "type": "boolean"
                                },
                                "methods": {
                                    "default": [],
                                    "items": {
                                        "enum": [
                                            "zrtp",
                                            "srtp"
                                        ],
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Supported Encryption Types",
                                    "required": false,
                                    "type": "array"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "description": "The option to determine if early media from the device should always be ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "progress_timeout": {
                            "description": "The progress timeout to apply to the device",
                            "name": "Progress Timeout (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "video": {
                            "default": {},
                            "description": "The video media parameters",
                            "name": "Video Options",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of video codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "VP8",
                                            "H264",
                                            "H263",
                                            "H261"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "metaflows": {
                    "$ref": "metaflows",
                    "description": "The device metaflow parameters"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters used if not a property of the device owner",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "mwi_unsolicitated_updates": {
                    "default": true,
                    "description": "When true enables unsolicitated mwi notifications",
                    "name": "Send unsolicitated MWI NOTIFY?",
                    "required": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "A friendly name for the device",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "outbound_flags": {
                    "description": "List of flags (features) this device requires when making outbound calls",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Outbound Flags",
                    "required": false,
                    "type": "array"
                },
                "owner_id": {
                    "description": "The ID of the user object that 'owns' the device",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "Static presence ID (used instead of SIP username)",
                    "name": "Presence ID",
                    "required": false,
                    "type": "string"
                },
                "provision": {
                    "description": "Provision data",
                    "name": "Provision",
                    "properties": {
                        "feature_keys": {
                            "name": "Feature Keys",
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "properties": {
                                        "type": {
                                            "description": "Feature key type",
                                            "enum": [
                                                "presence",
                                                "parking",
                                                "personal_parking",
                                                "speed_dial"
                                            ],
                                            "name": "Type",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Feature key value",
                                            "maximum": 10,
                                            "minimum": 1,
                                            "name": "Value",
                                            "required": true,
                                            "type": [
                                                "string",
                                                "integer"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "register_overwrite_notify": {
                    "default": false,
                    "description": "When true enables overwrite notifications",
                    "name": "Send NOTIFY if Register Overwritten?",
                    "required": false,
                    "type": "boolean"
                },
                "ringtones": {
                    "default": {},
                    "name": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "name": "External",
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "name": "Internal",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "sip": {
                    "default": {},
                    "name": "SIP Parameters",
                    "properties": {
                        "custom_sip_headers": {
                            "additionalProperties": {
                                "required": false,
                                "type": "string"
                            },
                            "description": "A property list of SIP headers beging with the prefix 'X-'",
                            "name": "Custom SIP Headers",
                            "required": false,
                            "type": "object"
                        },
                        "expire_seconds": {
                            "default": 300,
                            "description": "The time, in seconds, sent to the provisioner for the registration period that the device should be configured with.",
                            "name": "Minimum Registration (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "ignore_completed_elsewhere": {
                            "description": "When set to false the phone should not consider ring group calls answered elsewhere as missed",
                            "name": "Show Calls Answered Elsewhere as Missed?",
                            "required": false,
                            "type": "boolean"
                        },
                        "invite_format": {
                            "default": "username",
                            "description": "The SIP request URI invite format",
                            "enum": [
                                "username",
                                "npan",
                                "1npan",
                                "e164",
                                "route"
                            ],
                            "name": "Invite Format",
                            "required": false,
                            "type": "string"
                        },
                        "ip": {
                            "description": "IP address for this device",
                            "name": "IP Address",
                            "required": false,
                            "type": "string"
                        },
                        "method": {
                            "default": "password",
                            "description": "Method of authentication",
                            "enum": [
                                "password",
                                "ip"
                            ],
                            "name": "Authentication Method",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The number used if the invite format is 1npan, npan, or e164 (if not set the dialed number is used)",
                            "name": "Static Number",
                            "required": false,
                            "type": "string"
                        },
                        "password": {
                            "description": "SIP authentication password",
                            "maxLength": 32,
                            "minLength": 5,
                            "name": "Password",
                            "required": false,
                            "type": "string"
                        },
                        "realm": {
                            "description": "The realm this device should use, overriding the account realm. Should rarely be necessary.",
                            "format": "uri",
                            "name": "Realm",
                            "required": false,
                            "type": "string"
                        },
                        "route": {
                            "description": "The SIP URL used if the invite format is 'route'",
                            "name": "Route SIP URI",
                            "required": false,
                            "type": "string"
                        },
                        "static_route": {
                            "description": "Sends all inbound calls to this string (instead of dialed number or username)",
                            "name": "Static SIP URI",
                            "required": false,
                            "type": "string"
                        },
                        "username": {
                            "description": "SIP authentication username",
                            "maxLength": 32,
                            "minLength": 2,
                            "name": "Username",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "suppress_unregister_notifications": {
                    "default": false,
                    "description": "When true disables deregister notifications",
                    "name": "Do Not Send Unregister Emails?",
                    "required": false,
                    "type": "boolean"
                },
                "timezone": {
                    "description": "Device's timezone",
                    "name": "Timezone",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "dialplans": {
            "additionalProperties": {
                "properties": {
                    "description": {
                        "description": "Friendly name for this regex dialplan",
                        "name": "Name",
                        "required": false,
                        "type": "string"
                    },
                    "prefix": {
                        "description": "Prefix the prepend to the capture group after applying the regex",
                        "name": "Prefix",
                        "required": false,
                        "type": "string"
                    },
                    "suffix": {
                        "description": "Suffix the append to the capture group after applying the regex",
                        "name": "Suffix",
                        "required": false,
                        "type": "string"
                    }
                },
                "required": false,
                "type": "object"
            },
            "description": "",
            "name": "Dialplans",
            "properties": {
                "system": {
                    "description": "List of system dial plans",
                    "name": "System",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "directories": {
            "description": "Allow a caller to search for a user/device by name instead of extension/DID",
            "name": "Directory",
            "properties": {
                "confirm_match": {
                    "default": true,
                    "description": "When one match is found, require caller to confirm the match before connecting",
                    "name": "Confirm?",
                    "required": false,
                    "type": "boolean"
                },
                "max_dtmf": {
                    "default": 0,
                    "description": "Cap the number of DTMF characters collected from a caller, 0 for unlimited",
                    "minimum": 0,
                    "name": "Maximum digits",
                    "required": false,
                    "type": "integer"
                },
                "min_dtmf": {
                    "default": 3,
                    "description": "How many DTMF characters to collect from a caller before processing the directory",
                    "minimum": 1,
                    "name": "Minimum digits",
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the directory",
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "sort_by": {
                    "default": "last_name",
                    "description": "What field to sort on in matching documents when a caller enters characters",
                    "enum": [
                        "first_name",
                        "last_name"
                    ],
                    "name": "Sort By",
                    "required": false,
                    "type": "string"
                },
                "users": {
                    "default": [],
                    "description": "The list of users associated with this directory",
                    "items": {
                        "description": "UserId to include in the directory",
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "domain_hosts": {
            "additionalProperties": false,
            "description": "Domain host settings for white-labelling",
            "name": "domain_hosts",
            "patternProperties": {
                ".*[\\{]{2}domain[\\}]{2}.*": {
                    "description": "White-label template for hostname",
                    "name": "Host",
                    "properties": {
                        "mapping": {
                            "description": "List of hosts or IPs this host should resolve to",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "name": "Mapping",
                            "required": true,
                            "type": "array"
                        },
                        "name": {
                            "description": "Human-friendly name of the Host",
                            "name": "Name",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "domains": {
            "description": "Domain settings for white-labelling",
            "name": "domains",
            "properties": {
                "A": {
                    "description": "A records",
                    "name": "A",
                    "required": false,
                    "type": "object"
                },
                "CNAME": {
                    "$ref": "domain_hosts",
                    "description": "CNAME records",
                    "name": "CNAME",
                    "required": false,
                    "type": "object"
                },
                "MX": {
                    "description": "MX records, typically for email servers",
                    "name": "MX",
                    "required": false,
                    "type": "object"
                },
                "NAPTR": {
                    "description": "NAPTR records",
                    "name": "NAPTR",
                    "required": false,
                    "type": "object"
                },
                "SRV": {
                    "description": "SRV records",
                    "name": "SRV",
                    "required": false,
                    "type": "object"
                },
                "TXT": {
                    "description": "TXT records",
                    "name": "TXT",
                    "required": false,
                    "type": "object"
                }
            }
        },
        "faxbox": {
            "description": "FaxBoxes allow configuration of individual fax virtual machines",
            "name": "Fax Box",
            "properties": {
                "attempts": {
                    "default": 0,
                    "description": "The number of attempts made, this will be set by the system and reset automaticly on put/post",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Attempts",
                    "required": false,
                    "type": "integer"
                },
                "caller_id": {
                    "description": "The Caller-ID-Number",
                    "name": "Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "caller_name": {
                    "default": "Kazoo Fax Printer",
                    "description": "The Caller-ID-Name",
                    "name": "Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "custom_smtp_email_address": {
                    "description": "custom smtp address",
                    "name": "SMTP Address",
                    "required": false,
                    "type": "string"
                },
                "fax_header": {
                    "default": "Kazoo Fax Printer",
                    "description": "The name printed at the top of the fax",
                    "name": "Fax Header Name",
                    "required": false,
                    "type": "string"
                },
                "fax_identity": {
                    "description": "The number printed at the top of the fax",
                    "name": "Fax Header Number",
                    "required": false,
                    "type": "string"
                },
                "fax_timezone": {
                    "description": "The timezone announced",
                    "name": "Fax Header Timezone",
                    "required": false,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the faxbox",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "inbound": {
                            "description": "Inbound Status notifications",
                            "properties": {
                                "callback": {
                                    "description": "A URL to send results to",
                                    "name": "Callback Parameters",
                                    "properties": {
                                        "method": {
                                            "description": "The http method to use when sending the results",
                                            "enum": [
                                                "post",
                                                "put"
                                            ],
                                            "name": "Method",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The content-type to use when sending the results",
                                            "enum": [
                                                "json",
                                                "www-url-form-encoded"
                                            ],
                                            "name": "Content-Type",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "url": {
                                            "description": "The URL to call back with the results",
                                            "name": "URL",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "email": {
                                    "description": "Email notifications",
                                    "name": "Inbound Email Notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of email recipent(s)",
                                            "format": "email",
                                            "items": {
                                                "format": "email",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "name": "Email Address",
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "sms": {
                                    "description": "SMS notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of sms recipent(s)",
                                            "items": {
                                                "required": false,
                                                "type": "string"
                                            },
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "outbound": {
                            "description": "Outbound Status notifications",
                            "properties": {
                                "callback": {
                                    "description": "A URL to send results to",
                                    "properties": {
                                        "method": {
                                            "description": "The http method to use when sending the results",
                                            "enum": [
                                                "post",
                                                "put"
                                            ],
                                            "name": "Method",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The content-type to use when sending the results",
                                            "enum": [
                                                "json",
                                                "www-url-form-encoded"
                                            ],
                                            "name": "Content-Type",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "url": {
                                            "description": "The URL to call back with the results",
                                            "name": "URL",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "email": {
                                    "description": "Email notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of email recipent(s)",
                                            "format": "email",
                                            "items": {
                                                "format": "email",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "name": "Email Address",
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "sms": {
                                    "description": "SMS notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of sms recipent(s)",
                                            "items": {
                                                "required": false,
                                                "type": "string"
                                            },
                                            "name": "SMS Number",
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "retries": {
                    "default": 1,
                    "description": "The number of times to retry",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "smtp_permission_list": {
                    "default": [],
                    "description": "smtp permission list. accepts regular expressions",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "SMTP Permissions",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "faxes": {
            "description": "Faxes API allows you to update and access fax jobs for both sending and receiving",
            "name": "Fax",
            "properties": {
                "attempts": {
                    "default": 0,
                    "description": "The number of attempts made, this will be set by the system and reset automaticly on put/post",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Attempts",
                    "required": false,
                    "type": "integer"
                },
                "document": {
                    "description": "Parameters related to the storage of a fax document",
                    "properties": {
                        "content": {
                            "description": "The content provided in the body when fetching for transmission as a post",
                            "maxLength": 256,
                            "name": "HTTP Body",
                            "required": false,
                            "type": "string"
                        },
                        "content_type": {
                            "description": "The content type header to be used when fetching for transmission as a post",
                            "name": "HTTP Content-Type",
                            "required": false,
                            "type": "string"
                        },
                        "host": {
                            "description": "The host header to be used when fetching for transmission",
                            "name": "HTTP Host",
                            "required": false,
                            "type": "string"
                        },
                        "method": {
                            "default": "get",
                            "description": "The method that should be used to reteive the document",
                            "enum": [
                                "get",
                                "post"
                            ],
                            "name": "Method",
                            "required": false,
                            "type": "string"
                        },
                        "referer": {
                            "description": "The referer header to be used when fetching for transmission",
                            "name": "HTTP Referer",
                            "required": false,
                            "type": "string"
                        },
                        "url": {
                            "description": "The url of the fax document",
                            "name": "Document URL",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "from_name": {
                    "description": "The sender name for the fax",
                    "name": "Sender Name",
                    "required": false,
                    "type": "string"
                },
                "from_number": {
                    "description": "The sender number for the fax",
                    "name": "Sender Number",
                    "required": false,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "email": {
                            "description": "Email notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of email recipent(s)",
                                    "format": "email",
                                    "items": {
                                        "format": "email",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Email Address",
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "sms": {
                            "description": "SMS notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of sms recipent(s)",
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "SMS Number",
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "retries": {
                    "default": 1,
                    "description": "The number of times to retry",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "to_name": {
                    "description": "The recipient name for the fax",
                    "name": "Recipient Name",
                    "required": false,
                    "type": "string"
                },
                "to_number": {
                    "description": "The recipient number for the fax",
                    "name": "Recipient Number",
                    "required": false,
                    "type": "string"
                },
                "tx_result": {
                    "default": {},
                    "description": "The result of a transmission attempt",
                    "properties": {
                        "error_message": {
                            "default": "",
                            "description": "A description of any error that occured",
                            "name": "Error Message",
                            "required": false,
                            "type": "string"
                        },
                        "fax_bad_rows": {
                            "default": 0,
                            "description": "The number of bad rows",
                            "name": "Bad Rows",
                            "required": false,
                            "type": "integer"
                        },
                        "fax_error_correction": {
                            "default": false,
                            "description": "True if fax error correction was used",
                            "name": "Error Correction",
                            "required": false,
                            "type": "boolean"
                        },
                        "fax_receiver_id": {
                            "default": "",
                            "description": "The receiver id reported by the remote fax device",
                            "name": "Reciever ID",
                            "required": false,
                            "type": "string"
                        },
                        "fax_speed": {
                            "default": 0,
                            "description": "The speed achieved during transmission",
                            "name": "Baud Rate",
                            "required": false,
                            "type": "integer"
                        },
                        "pages_sent": {
                            "default": 0,
                            "description": "The number of pages transmitted",
                            "name": "Pages Sent",
                            "required": false,
                            "type": "integer"
                        },
                        "success": {
                            "default": false,
                            "description": "True if the fax transmission was successful",
                            "name": "Success",
                            "required": false,
                            "type": "boolean"
                        },
                        "time_elapsed": {
                            "default": 0,
                            "description": "The amount of time from submition to completion",
                            "name": "Elapsed Time",
                            "required": false,
                            "type": "integer"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "find_numbers": {
            "properties": {
                "country": {
                    "default": "US",
                    "maxLength": 2,
                    "minLength": 2,
                    "required": false,
                    "type": "string"
                },
                "prefix": {
                    "maxLength": 10,
                    "minLength": 3,
                    "required": true,
                    "type": "string"
                },
                "quantity": {
                    "default": 1,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "groups": {
            "description": "Validator for the group",
            "properties": {
                "endpoints": {
                    "default": {},
                    "description": "Endpoints included into group",
                    "required": true,
                    "type": "object"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the group",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "ips": {
            "description": "IP addresses assigned to the account",
            "name": "IP Addresses",
            "properties": {
                "ips": {
                    "description": "List of IP addresses",
                    "items": {
                        "description": "IP address",
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": false,
                    "type": "array"
                }
            }
        },
        "ledgers": {
            "description": "ledgers document",
            "name": "ledgers",
            "properties": {
                "account": {
                    "description": "Account info",
                    "name": "Account",
                    "properties": {
                        "id": {
                            "description": "Account ID",
                            "name": "ID",
                            "required": false,
                            "type": "string"
                        },
                        "name": {
                            "description": "Account name",
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "amount": {
                    "description": "Ledger amount",
                    "minimum": 1,
                    "name": "amount",
                    "required": false,
                    "type": "integer"
                },
                "description": {
                    "description": "Useful description for ledger",
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata for ledger document",
                    "name": "Metadata",
                    "required": false,
                    "type": "object"
                },
                "period": {
                    "description": "Period of ledger",
                    "name": "Period",
                    "properties": {
                        "end": {
                            "description": "Period end",
                            "name": "End",
                            "required": false,
                            "type": "integer"
                        },
                        "start": {
                            "description": "Period start",
                            "name": "Start",
                            "required": false,
                            "type": "integer"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "source": {
                    "description": "Origin of ledger",
                    "name": "Source",
                    "properties": {
                        "id": {
                            "description": "Source ID",
                            "name": "Id",
                            "required": true,
                            "type": "string"
                        },
                        "service": {
                            "description": "Source service",
                            "name": "Service",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "usage": {
                    "description": "Usage for ledger",
                    "name": "Usage",
                    "properties": {
                        "quantity": {
                            "description": "Usage quantity",
                            "name": "Quantity",
                            "required": true,
                            "type": "integer"
                        },
                        "type": {
                            "description": "Usage type",
                            "name": "Service",
                            "required": true,
                            "type": "string"
                        },
                        "unit": {
                            "description": "Usage unit",
                            "name": "Unit",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "limits": {
            "description": "Limit an account's ability to place concurrent calls using flat rate trunks",
            "name": "Limits",
            "properties": {
                "allow_prepay": {
                    "default": true,
                    "description": "Determines if the account would like to allow per-minute calls if they have credit",
                    "name": "Allow Prepay",
                    "required": false,
                    "type": "boolean"
                },
                "burst_trunks": {
                    "description": "The number of two-way, flat-rate trunks used only if no other trunks are available",
                    "minimum": 0,
                    "name": "Burst Trunks",
                    "required": false,
                    "type": "integer"
                },
                "calls": {
                    "description": "A hard limit for the total number calls",
                    "minimum": 0,
                    "name": "Calls",
                    "required": false,
                    "type": "integer"
                },
                "inbound_trunks": {
                    "description": "The number of inbound, flat-rate trunks",
                    "minimum": 0,
                    "name": "Inbound Trunks",
                    "required": false,
                    "type": "integer"
                },
                "outbound_trunks": {
                    "description": "The number of outbound, flat-rate trunks",
                    "minimum": 0,
                    "name": "Outbound Trunks",
                    "required": false,
                    "type": "integer"
                },
                "resource_consuming_calls": {
                    "description": "A hard limit for the number of resource consuming calls",
                    "minimum": 0,
                    "name": "Resource Consuming Calls",
                    "required": false,
                    "type": "integer"
                },
                "twoway_trunks": {
                    "description": "The number of two-way, flat-rate trunks",
                    "minimum": 0,
                    "name": "Twoway Trunks",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "list_entries": {
            "description": "Schema for a match list entries",
            "properties": {
                "displayname": {
                    "description": "Display name",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Display Name",
                    "required": false,
                    "type": "string"
                },
                "firstname": {
                    "description": "A friendly firstname",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "First name",
                    "required": false,
                    "type": "string"
                },
                "lastname": {
                    "description": "A friendly lastname",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Last name",
                    "required": false,
                    "type": "string"
                },
                "list_id": {
                    "description": "List id",
                    "name": "List id",
                    "required": true,
                    "type": "string"
                },
                "number": {
                    "description": "Phone number",
                    "name": "Number",
                    "required": false,
                    "type": "string"
                },
                "pattern": {
                    "description": "Match pattern",
                    "name": "Pattern",
                    "required": false,
                    "type": "string"
                },
                "profile": {
                    "$ref": "profile",
                    "default": {},
                    "description": "Profile data",
                    "required": false,
                    "type": "object"
                },
                "type": {
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "type",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "lists": {
            "description": "Schema for a match list",
            "properties": {
                "description": {
                    "description": "A friendly list description",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly match list name",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "org": {
                    "description": "Full legal name of the organization",
                    "name": "Organizational name",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "mailbox_message": {
            "description": "Schema for mailbox message",
            "name": "Mailbox Message",
            "properties": {
                "call_id": {
                    "description": "The SIP call-id",
                    "name": "Call ID",
                    "required": false,
                    "type": "string"
                },
                "caller_id_name": {
                    "description": "The reported caller id name",
                    "maxLength": 35,
                    "name": "Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "caller_id_number": {
                    "description": "The reported caller id number",
                    "maxLength": 35,
                    "name": "Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "folder": {
                    "description": "The folder the message belongs to",
                    "enum": [
                        "deleted",
                        "saved",
                        "new"
                    ],
                    "name": "Folder",
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "The SIP from header",
                    "name": "From",
                    "required": false,
                    "type": "string"
                },
                "length": {
                    "name": "Length",
                    "required": false,
                    "type": "integer"
                },
                "media_id": {
                    "description": "The ID of the message media object",
                    "maxLength": 39,
                    "minLength": 39,
                    "name": "Media ID",
                    "required": true,
                    "type": "string"
                },
                "timestamp": {
                    "description": "The UTC timestamp, in gregorian seconds, that the message was left on",
                    "name": "Timestamp",
                    "required": false,
                    "type": "integer"
                },
                "to": {
                    "description": "The SIP to header",
                    "name": "To",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "media": {
            "description": "Schema for media",
            "name": "Media",
            "properties": {
                "content_length": {
                    "description": "Length, in bytes, of the file",
                    "maximum": 5242880,
                    "minimum": 1,
                    "name": "Content Length",
                    "required": false,
                    "type": "integer"
                },
                "content_type": {
                    "description": "Used to override the automatic upload type",
                    "enum": [
                        "audio/mp3",
                        "audio/mpeg",
                        "audio/mpeg3",
                        "audio/x-wav",
                        "audio/wav",
                        "audio/ogg",
                        "video/x-flv",
                        "video/h264",
                        "video/mpeg",
                        "video/quicktime",
                        "video/mp4",
                        "video/webm"
                    ],
                    "name": "Content Type",
                    "required": false,
                    "type": "string"
                },
                "description": {
                    "description": "A breif description of the media update, usally the original file name",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "language": {
                    "default": "en-us",
                    "description": "The language of the media file or text",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "media_source": {
                    "default": "upload",
                    "description": "Defines the source of the media",
                    "enum": [
                        "recording",
                        "upload",
                        "tts"
                    ],
                    "name": "Media Source",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the media",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "prompt_id": {
                    "description": "The prompt this media file represents",
                    "name": "Prompt ID",
                    "required": false,
                    "type": "string"
                },
                "source_id": {
                    "description": "If the media was generated from a callflow module, this is ID of the properties",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Source ID",
                    "required": false,
                    "type": "string"
                },
                "source_type": {
                    "description": "If the media was generated from a callflow module, this is the module name",
                    "name": "Source Type",
                    "required": false,
                    "type": "string"
                },
                "streamable": {
                    "default": true,
                    "description": "Determines if the media can be streamed",
                    "name": "Streamable",
                    "required": false,
                    "type": "boolean"
                },
                "tts": {
                    "default": {},
                    "description": "Text-to-speech options used to create audio files from text",
                    "name": "TTS Parameters",
                    "properties": {
                        "text": {
                            "description": "The text to be converted into audio",
                            "minLength": 1,
                            "name": "Text TTS",
                            "required": false,
                            "type": "string"
                        },
                        "voice": {
                            "default": "female/en-US",
                            "description": "The voice to be used during the conversion",
                            "enum": [
                                "female/en-US",
                                "male/en-US",
                                "female/en-CA",
                                "female/en-AU",
                                "female/en-GB",
                                "male/en-GB",
                                "female/es-US",
                                "male/es-US",
                                "female/us-US",
                                "female/zh-CN",
                                "male/zh-CN",
                                "female/zh-HK",
                                "female/zh-TW",
                                "female/ja-JP",
                                "male/ja-JP",
                                "female/ko-KR",
                                "male/ko-KR",
                                "female/da-DK",
                                "female/de-DE",
                                "male/de-DE",
                                "female/ca-ES",
                                "female/es-ES",
                                "male/es-ES",
                                "female/fi-FI",
                                "female/fr-CA",
                                "male/fr-CA",
                                "female/fr-FR",
                                "male/fr-FR",
                                "female/it-IT",
                                "male/it-IT",
                                "female/nb-NO",
                                "female/nl-NL",
                                "female/pl-PL",
                                "female/pt-BR",
                                "female/pt-PT",
                                "male/pt-PT",
                                "female/ru-RU",
                                "male/ru-RU",
                                "female/sv-SE",
                                "female/hu-HU",
                                "female/cs-CZ",
                                "female/tr-TR",
                                "male/tr-TR",
                                "male/ru-RU/Vladimir",
                                "female/ru-RU/Julia",
                                "female/ru-RU/Anna",
                                "female/ru-RU/Viktoria",
                                "male/ru-RU/Alexander",
                                "female/ru-RU/Maria",
                                "female/ru-RU/Lidia"
                            ],
                            "name": "Voice TTS",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "menus": {
            "description": "Schema for a menus",
            "name": "Menu",
            "properties": {
                "allow_record_from_offnet": {
                    "default": false,
                    "description": "Determines if the record pin can be used by external calls",
                    "name": "Allow Record From Offnet",
                    "required": false,
                    "type": "boolean"
                },
                "hunt": {
                    "default": true,
                    "description": "Determines if the callers can dial internal extensions directly",
                    "name": "Hunt",
                    "required": false,
                    "type": "boolean"
                },
                "hunt_allow": {
                    "description": "A regular expression that an extension the caller dialed must match to be allowed to continue",
                    "maxLength": 256,
                    "minLength": 1,
                    "name": "Hunt Allow",
                    "required": false,
                    "type": "string"
                },
                "hunt_deny": {
                    "description": "A regular expression that if matched does not allow the caller to dial directly",
                    "maxLength": 256,
                    "minLength": 1,
                    "name": "Hunt Deny",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "The amount of time (in milliseconds) to wait for the caller to press the next digit after pressing a digit",
                    "maximum": 10000,
                    "minimum": 1,
                    "name": "Interdigit Timeout (millliseconds)",
                    "required": false,
                    "type": "integer"
                },
                "max_extension_length": {
                    "default": 4,
                    "description": "The maximum number of digits that can be collected",
                    "maximum": 6,
                    "minimum": 1,
                    "name": "Max Extension Length",
                    "required": false,
                    "type": "integer"
                },
                "media": {
                    "default": {},
                    "description": "The media (prompt) parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "exit_media": {
                            "description": "When a call is transferred from the menu after all retries exhausted this media can be played (prior to transfer if enabled)",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Exit Media",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        },
                        "greeting": {
                            "description": "The ID of a media object that should be used as the menu greeting",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Greeting",
                            "required": false,
                            "type": "string"
                        },
                        "invalid_media": {
                            "description": "When the collected digits dont result in a match or hunt this media can be played",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Invalid Media",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        },
                        "transfer_media": {
                            "description": "When a call is transferred from the menu, either after all retries exhausted or a successful hunt, this media can be played",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Transfer Media",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the menu",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "record_pin": {
                    "description": "The pin number used to record the menu prompt",
                    "maxLength": 6,
                    "minLength": 3,
                    "name": "Record Pin",
                    "required": false,
                    "type": "string"
                },
                "retries": {
                    "default": 3,
                    "description": "The number of times a menu should be played until a valid entry is collected",
                    "maximum": 10,
                    "minimum": 1,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "timeout": {
                    "description": "The amount of time (in milliseconds) to wait for the caller to beging entering digits",
                    "maximum": 60000,
                    "minimum": 1,
                    "name": "Timeout (milliseconds)",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "metaflows": {
            "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)",
            "name": "Metaflow",
            "properties": {
                "binding_digit": {
                    "default": "*",
                    "description": "What DTMF will trigger the collection and analysis of the subsequent DTMF sequence",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "0",
                        "*",
                        "#"
                    ],
                    "maxLength": 1,
                    "minLength": 1,
                    "name": "Binding Digit",
                    "required": false,
                    "type": "string"
                },
                "digit_timeout": {
                    "description": "How long to wait between DTMF presses before processing the collected sequence",
                    "minimum": 0,
                    "name": "Timeout (milliseconds)",
                    "required": false,
                    "type": "integer"
                },
                "listen_on": {
                    "description": "Which leg(s) of the call to listen for DTMF",
                    "enum": [
                        "both",
                        "self",
                        "peer"
                    ],
                    "name": "Listen On",
                    "required": false,
                    "type": "string"
                },
                "numbers": {
                    "description": "A list of static numbers that the metaflow should match for",
                    "name": "Numbers",
                    "patternProperties": {
                        "[0-9\\*\\#]+": {
                            "properties": {
                                "children": {
                                    "default": {},
                                    "name": "Children",
                                    "required": false,
                                    "type": "#/flow"
                                },
                                "data": {
                                    "default": {},
                                    "name": "Module Data",
                                    "required": true,
                                    "type": "object"
                                },
                                "module": {
                                    "maxLength": 15,
                                    "name": "Module",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "patterns": {
                    "description": "The metaflow patterns",
                    "itmes": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Patterns",
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "notifications": {
            "description": "Notifications templates",
            "name": "Notifications",
            "properties": {
                "bcc": {
                    "description": "Bcc email field",
                    "name": "Bcc",
                    "properties": {
                        "email_addresses": {
                            "description": "",
                            "itmes": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "name": "BCC Email Addresses",
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "description": "",
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "maxLength": 253,
                            "minLength": 2,
                            "name": "Type",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "category": {
                    "description": "Category of the template, for grouping purposes",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "cc": {
                    "description": "CC email field",
                    "name": "Cc",
                    "properties": {
                        "email_addresses": {
                            "description": "",
                            "items": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "name": "CC Email Addresses",
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "description": "",
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "name": "Type",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Enable notification",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "friendly_name": {
                    "description": "Friendly name of the template",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "From: email address",
                    "format": "email",
                    "name": "From",
                    "required": true,
                    "type": "string"
                },
                "macros": {
                    "default": {},
                    "description": "",
                    "name": "Macros",
                    "properties": {},
                    "required": false,
                    "type": "object"
                },
                "reply_to": {
                    "description": "Reply-To: email address",
                    "format": "email",
                    "name": "Reply-To",
                    "required": false,
                    "type": "string"
                },
                "subject": {
                    "description": "Email subject",
                    "maxLength": 200,
                    "minLength": 1,
                    "name": "Subject",
                    "required": true,
                    "type": "string"
                },
                "template_charset": {
                    "default": "utf-8",
                    "description": "",
                    "minLength": 1,
                    "name": "Template charset",
                    "required": false,
                    "type": "string"
                },
                "to": {
                    "description": "To email field",
                    "name": "To",
                    "properties": {
                        "email_addresses": {
                            "description": "",
                            "items": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "name": "Email Addresses",
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "description": "",
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "maxLength": 253,
                            "minLength": 2,
                            "name": "Type",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "notify.callback": {
            "description": "Schema for a callback options",
            "name": "Callback notification options",
            "properties": {
                "attempts": {
                    "description": "How many attempts without answer will system do",
                    "required": false,
                    "type": "integer"
                },
                "disabled": {
                    "description": "Determines if the system will call to callback number",
                    "required": false,
                    "type": "boolean"
                },
                "interval_s": {
                    "description": "How long will system wait between call back notification attempts",
                    "required": false,
                    "type": "integer"
                },
                "number": {
                    "description": "Number for callback notifications about new messages",
                    "required": false,
                    "type": "string"
                },
                "schedule": {
                    "description": "Schedules interval between callbacks",
                    "items": {
                        "description": "callbacks interval",
                        "type": "integer"
                    },
                    "required": false,
                    "type": "array"
                },
                "timeout_s": {
                    "description": "How long will system wait for answer to callback",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "phone_numbers": {
            "description": "Schema for a number",
            "name": "Number",
            "properties": {
                "cnam": {
                    "properties": {
                        "display_name": {
                            "maxLength": 15,
                            "minLength": 1,
                            "name": "Display Name",
                            "required": false,
                            "type": "string"
                        },
                        "inbound_lookup": {
                            "name": "Inbound Lookup",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "dash_e911": {
                    "description": "E911 information for the phone number",
                    "properties": {
                        "activated_time": {
                            "description": "The time stamp e911 was provisioned",
                            "name": "Activated Time (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "caller_name": {
                            "description": "The name that will show to emergency services",
                            "name": "Caller Name (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "extended_address": {
                            "description": "The suit/floor/apt. address where the number is in service",
                            "name": "Extended Address(e911)",
                            "required": false,
                            "type": "string"
                        },
                        "latitude": {
                            "description": "The e911 provisioning system calculated service address latitude",
                            "name": "Latitude (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "legacy_data": {
                            "description": "Legacy E911 information",
                            "properties": {
                                "house_number": {
                                    "description": "The name that will show to emergency services",
                                    "name": "House Number",
                                    "required": false,
                                    "type": "string"
                                },
                                "predirectional": {
                                    "description": "The name that will show to emergency services",
                                    "name": "Predirectional",
                                    "required": false,
                                    "type": "string"
                                },
                                "streetname": {
                                    "description": "The name that will show to emergency services",
                                    "name": "Street Name",
                                    "required": false,
                                    "type": "string"
                                },
                                "suite": {
                                    "description": "The name that will show to emergency services",
                                    "name": "Suite",
                                    "required": false,
                                    "type": "string"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "locality": {
                            "description": "The locality (city) where the number is in service",
                            "name": "Locality (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "location_id": {
                            "description": "The e911 provisioning system internal id for this service address",
                            "name": "Location ID(e911)",
                            "required": false,
                            "type": "string"
                        },
                        "longitude": {
                            "description": "The e911 provisioning system calculated service address longitude",
                            "name": "Longitude (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "plus_four": {
                            "description": "The extended zip/postal code where the number is in service",
                            "name": "Plus Four (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "postal_code": {
                            "description": "The zip/postal code where the number is in service",
                            "name": "Postal Code (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "region": {
                            "description": "The region (state) where the number is in service",
                            "name": "Region (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "status": {
                            "description": "The e911 provisioning system status for this service address",
                            "enum": [
                                "INVALID",
                                "GEOCODED",
                                "PROVISIONED",
                                "REMOVED",
                                "ERROR"
                            ],
                            "name": "Status (e911)",
                            "required": false,
                            "type": "string"
                        },
                        "street_address": {
                            "description": "The street address where the number is in service",
                            "name": "Street Address(e911)",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "porting": {
                    "description": "Porting (in) information for the phone number",
                    "properties": {
                        "billing_account_id": {
                            "description": "The account id the losing carrier has on file",
                            "name": "Billing Account ID",
                            "required": false,
                            "type": "string"
                        },
                        "billing_extended_address": {
                            "description": "The suit/floor/apt. address the losing carrier has on file",
                            "name": "Billing Extended Address",
                            "required": false,
                            "type": "string"
                        },
                        "billing_locality": {
                            "description": "The locality (city) the losing carrier has on file",
                            "name": "Billing Locality",
                            "required": false,
                            "type": "string"
                        },
                        "billing_name": {
                            "description": "The name or company name the losing carrier has on file",
                            "name": "Billing Name",
                            "required": false,
                            "type": "string"
                        },
                        "billing_postal_code": {
                            "description": "The zip/postal code the losing carrier has on file",
                            "name": "Billing Postal Code",
                            "required": false,
                            "type": "string"
                        },
                        "billing_region": {
                            "description": "The region (state) the losing carrier has on file",
                            "name": "Billing Region",
                            "required": false,
                            "type": "string"
                        },
                        "billing_street_address": {
                            "description": "The street address the losing carrier has on file",
                            "name": "Billing Street Address",
                            "required": false,
                            "type": "string"
                        },
                        "billing_telephone_number": {
                            "description": "The BTN of the account the number belongs to",
                            "name": "Billing Telephone Number",
                            "required": false,
                            "type": "string"
                        },
                        "comments": {
                            "description": "An array of comments",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Comments",
                            "required": false,
                            "type": "array"
                        },
                        "customer_contact": {
                            "description": "The phone number that can be used to contact the owner of the number",
                            "name": "Customer Contact",
                            "required": false,
                            "type": "string"
                        },
                        "port_id": {
                            "description": "The id of the port request",
                            "name": "Port ID",
                            "required": false,
                            "type": "string"
                        },
                        "requested_port_date": {
                            "description": "The requested port date",
                            "name": "Request Port Date",
                            "required": false,
                            "type": "string"
                        },
                        "service_provider": {
                            "description": "The name of the losing carrier",
                            "name": "Service Provider",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "port_requests": {
            "description": "Schema for a port request",
            "name": "Port Request",
            "properties": {
                "bill": {
                    "description": "Billing information of the losing carrier",
                    "properties": {
                        "extended_address": {
                            "description": "The suite/floor/apt of the billing address the losing carrier has on record",
                            "name": "Address",
                            "required": false,
                            "type": "string"
                        },
                        "locality": {
                            "description": "The locality (city) of the billing address the losing carrier has on record",
                            "name": "City",
                            "required": false,
                            "type": "string"
                        },
                        "name": {
                            "description": "The losing carrier billing/account name",
                            "name": "Account Name",
                            "required": false,
                            "type": "string"
                        },
                        "postal_code": {
                            "description": "The zip/postal code of the billing address the losing carrier has on record",
                            "name": "Zip Code",
                            "required": false,
                            "type": "string"
                        },
                        "region": {
                            "description": "The region (state) of the billing address the losing carrier has on record",
                            "name": "State",
                            "required": false,
                            "type": "string"
                        },
                        "street_address": {
                            "description": "The address of the billing address the losing carrier has on record",
                            "name": "Address",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "comments": {
                    "description": "The history of comments made on a port request",
                    "items": {
                        "required": false,
                        "type": "object"
                    },
                    "name": "Comments",
                    "required": false,
                    "type": "array"
                },
                "name": {
                    "description": "A friendly name for the port request",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "email": {
                            "description": "Email notifications",
                            "name": "Inbound Email Notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of email recipent(s)",
                                    "format": "email",
                                    "items": {
                                        "format": "email",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Email Address",
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "numbers": {
                    "description": "The numbers to port in",
                    "minProperties": 1,
                    "name": "Numbers",
                    "patternProperties": {
                        "\\+?[0-9]+": {
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "port_state": {
                    "default": "unconfirmed",
                    "description": "What state the port request is currently in",
                    "enum": [
                        "unconfirmed",
                        "pending",
                        "submitted",
                        "scheduled",
                        "completed",
                        "rejected",
                        "canceled"
                    ],
                    "name": "Port State",
                    "required": false,
                    "type": "string"
                },
                "scheduled_date": {
                    "description": "Requested scheduled date in gregorain timestamp",
                    "name": "Scheduled Date",
                    "required": false,
                    "type": "integer"
                },
                "transfer_date": {
                    "description": "Requested transfer date in gregorain timestamp",
                    "name": "Transfer Date",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "profile": {
            "description": "Defines user extended properties",
            "name": "User extended properties",
            "properties": {
                "addresses": {
                    "description": "To specify the components of the addresses",
                    "items": {
                        "properties": {
                            "address": {
                                "description": "To specify the address",
                                "name": "Address",
                                "required": false,
                                "type": "string"
                            },
                            "types": {
                                "description": "To specify types of the address",
                                "items": {
                                    "enum": [
                                        "dom",
                                        "postal",
                                        "intl",
                                        "parcel",
                                        "home",
                                        "work",
                                        "pref"
                                    ]
                                },
                                "name": "Address type",
                                "required": false,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "name": "Addresses",
                    "required": false,
                    "type": "array"
                },
                "assistant": {
                    "description": "To specify the user's assistant",
                    "name": "Assistant",
                    "required": false,
                    "type": "string"
                },
                "birthday": {
                    "description": "To specify the birth date of the user",
                    "name": "Birthday",
                    "required": false,
                    "type": "string"
                },
                "nicknames": {
                    "description": "To specify the text corresponding to the nickname of the user",
                    "items": {
                        "type": "string"
                    },
                    "name": "Nicknames",
                    "required": false,
                    "type": "array"
                },
                "note": {
                    "description": "To specify supplemental information or a comment that is associated with the user",
                    "name": "Note",
                    "required": false,
                    "type": "string"
                },
                "role": {
                    "description": "To specify the function or part played in a particular situation by the user",
                    "name": "Role",
                    "required": false,
                    "type": "string"
                },
                "sort-string": {
                    "description": "To specify the family name or given name text to be used for national-language-specific sorting of the FN and N types",
                    "name": "Sort string",
                    "required": false,
                    "type": "string"
                },
                "title": {
                    "description": "To specify the position or job of the user",
                    "name": "Title",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "provisioner_v5": {
            "description": "Provisioner schema",
            "name": "Provisioner V5",
            "properties": {
                "brand": {
                    "default": "",
                    "description": "Brand of the phone",
                    "name": "Brand",
                    "required": true,
                    "type": "string"
                },
                "family": {
                    "default": "",
                    "description": "Family name of the phone",
                    "name": "Family",
                    "required": true,
                    "type": "string"
                },
                "model": {
                    "default": "",
                    "description": "Model name of the phone",
                    "name": "Model",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Name of the phone",
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "settings": {
                    "description": "Phone's settings",
                    "name": "Settings",
                    "properties": {
                        "codecs": {
                            "description": "Phone's codecs",
                            "items": {
                                "properties": {
                                    "audio": {
                                        "description": "Audio codecs",
                                        "name": "Audio",
                                        "properties": {
                                            "primary_codec": {
                                                "description": "First codec",
                                                "name": "Primary Codec",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "secondary_codec": {
                                                "description": "Second codec",
                                                "name": "Secondary Codec",
                                                "required": false,
                                                "type": "string"
                                            }
                                        },
                                        "required": false,
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "name": "Codecs",
                            "type": "object"
                        },
                        "datetime": {
                            "description": "Date and time settings",
                            "name": "Date/Time",
                            "properties": {
                                "time": {
                                    "description": "Time settings",
                                    "name": "Time",
                                    "properties": {
                                        "timezone": {
                                            "description": "Phone's timezone",
                                            "name": "Timezone",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "lines": {
                            "description": "Phone lines",
                            "minItems": 1,
                            "name": "Lines",
                            "properties": {
                                "properties": {
                                    "advanced": {
                                        "description": "Advanced settings",
                                        "name": "advanced",
                                        "properties": {
                                            "expire": {
                                                "default": 360,
                                                "name": "Expire",
                                                "required": false,
                                                "type": "integer"
                                            },
                                            "srtp": {
                                                "default": false,
                                                "name": "srtp",
                                                "required": false,
                                                "type": "boolean"
                                            }
                                        },
                                        "required": false,
                                        "type": "object"
                                    },
                                    "basic": {
                                        "description": "Basic settings",
                                        "name": "Basic",
                                        "properties": {
                                            "display_name": {
                                                "description": "Friendly name for phone",
                                                "name": "Display Name",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "enabled": {
                                                "default": true,
                                                "description": "Enable line",
                                                "name": "Enabled",
                                                "required": false,
                                                "type": "boolean"
                                            }
                                        },
                                        "required": true,
                                        "type": "object"
                                    },
                                    "sip": {
                                        "description": "Sip settings",
                                        "name": "Sip",
                                        "properties": {
                                            "password": {
                                                "description": "Line's password",
                                                "name": "Password",
                                                "required": true,
                                                "type": "string"
                                            },
                                            "realm": {
                                                "description": "Line's Sip realm",
                                                "name": "Realm",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "username": {
                                                "description": "Line's username",
                                                "name": "Username",
                                                "required": true,
                                                "type": "string"
                                            }
                                        },
                                        "required": true,
                                        "type": "object"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "queue_update": {
            "description": "Schema for queue update request",
            "name": "Call Update",
            "properties": {
                "action": {
                    "description": "Action to perform",
                    "enum": [
                        "login",
                        "logout"
                    ],
                    "name": "Action",
                    "required": true,
                    "type": "string"
                },
                "queue_id": {
                    "description": "Queue Identifier",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Queue ID",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "queues": {
            "description": "Call Queues - FIFO call queues for serializing callers connecting to agents",
            "name": "Call Queue",
            "properties": {
                "agent_ring_timeout": {
                    "default": 15,
                    "description": "In seconds, how long to ring an agent before progressing to the next agent available",
                    "minimum": 1,
                    "name": "Agent Ring Timeout",
                    "required": false,
                    "type": "integer"
                },
                "agent_wrapup_time": {
                    "default": 0,
                    "description": "Pre-defined wait period applied after an agent handles a customer call",
                    "minimum": 0,
                    "name": "Agent Wrapup Time",
                    "required": false,
                    "type": "integer"
                },
                "announce": {
                    "description": "Media ID (or appropriate media URI) of media to play when caller is about to be connected.",
                    "name": "Annouce",
                    "required": false,
                    "type": "string"
                },
                "caller_exit_key": {
                    "default": "#",
                    "description": "Key caller can press while on hold to exit the queue and continue in the callflow",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "*",
                        "0",
                        "#"
                    ],
                    "name": "Caller Exit Key",
                    "required": false,
                    "type": "string"
                },
                "cdr_url": {
                    "description": "An optional HTTP URL to POST the CDR",
                    "format": "uri",
                    "name": "CDR Url",
                    "required": false,
                    "type": "string"
                },
                "connection_timeout": {
                    "default": 3600,
                    "description": "In seconds, how long to try to connect the caller before progressing past the queue callflow action",
                    "minimum": 0,
                    "name": "Connection Timeout",
                    "required": false,
                    "type": "integer"
                },
                "enter_when_empty": {
                    "default": true,
                    "description": "Allows a caller to enter a queue and wait when no agents are available",
                    "name": "Enter When Empty",
                    "required": false,
                    "type": "boolean"
                },
                "max_priority": {
                    "description": "Maximum possible priority level queue will support. Can not be redefined for existing queue.",
                    "maximum": 255,
                    "minimum": 0,
                    "name": "Maximum possible priority level",
                    "required": false,
                    "type": "integer"
                },
                "max_queue_size": {
                    "default": 0,
                    "description": "How many callers are allowed to wait on hold in the queue (0 for no limit)",
                    "name": "Maximum Queue Size",
                    "required": false,
                    "type": "integer"
                },
                "moh": {
                    "description": "Media ID (or appropriate media URI) of media to play while caller is on hold.",
                    "name": "Moh",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the queue",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "record_caller": {
                    "default": false,
                    "description": "When enabled, a caller's audio will be recorded",
                    "name": "Record Caller",
                    "required": false,
                    "type": "boolean"
                },
                "recording_url": {
                    "description": "An optional HTTP URL to PUT the call recording after the call ends (and should respond to GET for retrieving the audio data)",
                    "format": "uri",
                    "name": "Recording Url",
                    "required": false,
                    "type": "string"
                },
                "ring_simultaneously": {
                    "default": 1,
                    "description": "The number of agents to try in parallel when connecting a caller",
                    "minimum": 1,
                    "name": "Ring Simultaneously",
                    "required": false,
                    "type": "integer"
                },
                "strategy": {
                    "default": "round_robin",
                    "description": "The queue strategy for connecting agents to callers",
                    "enum": [
                        "round_robin",
                        "most_idle"
                    ],
                    "name": "Stategy",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "rates": {
            "description": "Defines a rate for a given prefix",
            "name": "Rate",
            "properties": {
                "carrier": {
                    "description": "Friendly name for the carrier providing this rate",
                    "name": "Carrier Name",
                    "required": false,
                    "type": "string"
                },
                "description": {
                    "description": "Friendly description of the rate",
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "direction": {
                    "default": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "Apply this rate based on the direction of the call (relative to FreeSWITCH)",
                    "items": {
                        "enum": [
                            "inbound",
                            "outbound"
                        ],
                        "type": "string"
                    },
                    "name": "Direction",
                    "required": false,
                    "type": "array"
                },
                "internal_rate_cost": {
                    "description": "The per-min rate charged by the upstream provider",
                    "minimum": 0,
                    "name": "Internal Cost",
                    "required": false,
                    "type": "number"
                },
                "iso_country_code": {
                    "description": "Country code this rate applies to",
                    "name": "Country Code",
                    "required": false,
                    "type": "string"
                },
                "options": {
                    "description": "List of options this rate is good for, to be matched against a customer's options",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Options",
                    "required": false,
                    "type": "array"
                },
                "prefix": {
                    "description": "E.164 prefix (ignoring the +)",
                    "name": "Prefix",
                    "required": true,
                    "type": "integer"
                },
                "rate_cost": {
                    "description": "The per-min rate charged to the downstream customer",
                    "minimum": 0,
                    "name": "Cost",
                    "required": true,
                    "type": "number"
                },
                "rate_increment": {
                    "default": 60,
                    "description": "The time slice, in seconds, to bill in.",
                    "minimum": 10,
                    "name": "Increment (seconds)",
                    "required": false,
                    "type": "integer"
                },
                "rate_minimum": {
                    "default": 60,
                    "description": "The minimum time slice, in seconds to bill a call",
                    "minimum": 10,
                    "name": "Minimum Increment (seconds)",
                    "required": false,
                    "type": "integer"
                },
                "rate_name": {
                    "description": "Friendly name of the rate",
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "rate_nocharge_time": {
                    "default": 0,
                    "description": "If the call duration is shorter than this threshold, the call is not billed",
                    "minimum": 0,
                    "name": "No Charge Time (seconds)",
                    "required": false,
                    "type": "integer"
                },
                "rate_surcharge": {
                    "default": 0,
                    "description": "The upfront cost of connecting the call",
                    "minimum": 0,
                    "name": "Surcharge",
                    "required": false,
                    "type": "number"
                },
                "routes": {
                    "default": [],
                    "description": "List of regexs that match valid DIDs for this rate",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Routes",
                    "required": false,
                    "type": "array"
                },
                "weight": {
                    "description": "Ordering against other rates, 1 being most preferred, 100 being least preferred",
                    "maximum": 100,
                    "minimum": 1,
                    "name": "Weight",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "resource_jobs": {
            "description": "Schema for resource jobs (bulk number uploads)",
            "name": "Resource Job",
            "properties": {
                "name": {
                    "description": "A friendly name for the job, if you like",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "numbers": {
                    "description": "The listing of numbers to import to the account",
                    "items": {
                        "description": "The number to import",
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "resource_id": {
                    "description": "The Resource ID the numbers are coming from",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "resource_selector_rules": {
            "default": {},
            "description": "Schema for resource selector rules",
            "name": "Resource Selectord Rules",
            "required": true,
            "type": "object"
        },
        "resource_selectors": {
            "description": "Schema for resource selectors",
            "name": "Resource Selectors",
            "properties": {
                "selectors": {
                    "description": "Data used for selectors",
                    "name": "Selectors Data",
                    "required": true,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "resources": {
            "description": "Schema for resources",
            "name": "Resource",
            "properties": {
                "emergency": {
                    "default": false,
                    "description": "Determines if the resource represents emergency services",
                    "name": "Is Emergency?",
                    "required": false,
                    "type": "boolean"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the resource is currently enabled",
                    "name": "Is Enabled?",
                    "required": false,
                    "type": "boolean"
                },
                "flags": {
                    "default": [],
                    "description": "A list of flags that can be provided on the request and must match for the resource to be eligible",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Flags",
                    "required": false,
                    "type": "array"
                },
                "format_from_uri": {
                    "description": "When set to true requests to this resource will have a re-formated SIP From Header",
                    "name": "Format SIP From?",
                    "required": false,
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": "When formating SIP From on outbound requests this can be used to override the realm",
                    "name": "SIP From Realm",
                    "required": false,
                    "type": "string"
                },
                "gateways": {
                    "description": "A list of gateways avaliable for this resource",
                    "items": {
                        "default": {},
                        "properties": {
                            "bypass_media": {
                                "description": "The resource gateway bypass media mode",
                                "name": "Is Media Direct?",
                                "required": false,
                                "type": "boolean"
                            },
                            "caller_id_type": {
                                "description": "The type of caller id to use",
                                "enum": [
                                    "internal",
                                    "external",
                                    "emergency"
                                ],
                                "name": "Caller ID Type",
                                "required": false,
                                "type": "string"
                            },
                            "channel_selection": {
                                "default": "ascending",
                                "description": "Automatic selection of the channel within the span: ascending starts at 1 and moves up; descending is the opposite",
                                "enum": [
                                    "ascending",
                                    "descending"
                                ],
                                "name": "Channel Selection (gateways)",
                                "required": false,
                                "type": "string"
                            },
                            "codecs": {
                                "description": "A list of single list codecs supported by this gateway (to support backward compatibilty)",
                                "items": {
                                    "enum": [
                                        "G729",
                                        "PCMU",
                                        "PCMA",
                                        "G722_16",
                                        "G722_32",
                                        "CELT_48",
                                        "CELT_64",
                                        "Speex",
                                        "GSM",
                                        "OPUS",
                                        "H261",
                                        "H263",
                                        "H264",
                                        "VP8"
                                    ],
                                    "type": "string"
                                },
                                "name": "Codecs",
                                "required": false,
                                "type": "array",
                                "uniqueItems": true
                            },
                            "custom_sip_headers": {
                                "default": {},
                                "name": "Custom SIP Header",
                                "required": false,
                                "type": "object"
                            },
                            "custom_sip_interface": {
                                "description": "The name of a custom SIP interface",
                                "name": "SIP Inteface",
                                "required": false,
                                "type": "string"
                            },
                            "enabled": {
                                "default": true,
                                "description": "Determines if the resource gateway is currently enabled",
                                "name": "Enabled",
                                "required": false,
                                "type": "boolean"
                            },
                            "endpoint_type": {
                                "default": "sip",
                                "description": "What type of endpoint is this gateway",
                                "enum": [
                                    "sip",
                                    "freetdm",
                                    "skype",
                                    "amqp"
                                ],
                                "name": "Endpoint Type",
                                "required": false,
                                "type": "string"
                            },
                            "force_port": {
                                "default": false,
                                "description": "Allow request only from this port",
                                "name": "Force port",
                                "required": false,
                                "type": "boolean"
                            },
                            "format_from_uri": {
                                "description": "When set to true requests to this resource gateway will have a re-formated SIP From Header",
                                "name": "Format SIP From?",
                                "required": false,
                                "type": "boolean"
                            },
                            "from_uri_realm": {
                                "description": "When formating SIP From on outbound requests this can be used to override the realm",
                                "name": "SIP From Realm",
                                "required": false,
                                "type": "string"
                            },
                            "invite_format": {
                                "default": "route",
                                "description": "The format of the DID needed by the underlying hardware/gateway",
                                "enum": [
                                    "route",
                                    "username",
                                    "e164",
                                    "npan",
                                    "1npan"
                                ],
                                "name": "Invite Format",
                                "required": false,
                                "type": "string"
                            },
                            "media": {
                                "description": "The media parameters for the resource gateway",
                                "name": "Media Options",
                                "properties": {
                                    "fax_option": {
                                        "description": "Support T.38",
                                        "name": "Is T.38 Supported?",
                                        "required": false,
                                        "type": "boolean"
                                    }
                                },
                                "required": false,
                                "type": "object"
                            },
                            "password": {
                                "description": "SIP authentication password",
                                "maxLength": 32,
                                "name": "Password",
                                "required": false,
                                "type": "string"
                            },
                            "port": {
                                "default": 5060,
                                "description": "This resource gateway port",
                                "name": "Port",
                                "required": false,
                                "type": "integer"
                            },
                            "prefix": {
                                "description": "A string to prepend to the dialed number or capture group of the matching rule",
                                "maxLength": 64,
                                "name": "Prefix",
                                "required": false,
                                "type": "string"
                            },
                            "progress_timeout": {
                                "description": "The progress timeout to apply to the resource gateway",
                                "name": "Progress Timeout",
                                "required": false,
                                "type": "integer"
                            },
                            "realm": {
                                "description": "This resource gateway authentication realm",
                                "maxLength": 64,
                                "name": "Realm",
                                "required": false,
                                "type": "string"
                            },
                            "route": {
                                "description": "A staticly configured SIP URI to route all call to",
                                "name": "Route",
                                "required": false,
                                "type": "string"
                            },
                            "server": {
                                "description": "This resource gateway server",
                                "maxLength": 64,
                                "minLength": 1,
                                "name": "Server",
                                "required": true,
                                "type": "string"
                            },
                            "skype_interface": {
                                "description": "The name of the Skype interface to route the call over",
                                "name": "Skype Interface",
                                "required": false,
                                "type": "string"
                            },
                            "skype_rr": {
                                "default": true,
                                "description": "Determines whether to round-robin calls amongst all interfaces (overrides \"skype_interface\" setting)",
                                "name": "Skype Round-Robin",
                                "required": false,
                                "type": "boolean"
                            },
                            "span": {
                                "description": "The identity of the hardware on the media server",
                                "name": "Span",
                                "required": false,
                                "type": "string"
                            },
                            "suffix": {
                                "description": "A string to append to the dialed number or capture group of the matching rule",
                                "maxLength": 64,
                                "name": "Suffix",
                                "required": false,
                                "type": "string"
                            },
                            "username": {
                                "description": "SIP authentication username",
                                "maxLength": 32,
                                "name": "Username",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "required": true,
                    "type": "array"
                },
                "grace_period": {
                    "default": 5,
                    "description": "The amount of time, in seconds, to wait before starting another resource",
                    "maximum": 20,
                    "minimum": 1,
                    "name": "Grace Period",
                    "required": false,
                    "type": "integer"
                },
                "media": {
                    "default": {},
                    "description": "The default resouce media parameters applied if not present to all specified gateways",
                    "name": "Default Resource Media Parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The default audio media parameters",
                            "name": "Audio Options",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of default codecs to use",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "name": "Codecs",
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "name": "Is Media Direct?",
                            "required": false,
                            "type": "boolean"
                        },
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "video": {
                            "default": {},
                            "description": "The default video media parameters",
                            "name": "Video Options",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of default codecs to use",
                                    "items": {
                                        "enum": [
                                            "H261",
                                            "H263",
                                            "H264",
                                            "VP8"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the resource",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "require_flags": {
                    "description": "When set to true this resource is ignored if the request does not specify outbound flags",
                    "name": "Require Flags?",
                    "required": false,
                    "type": "boolean"
                },
                "rules": {
                    "default": [],
                    "description": "A list of regular expressions of which one must match for the rule to be eligible, they can optionally contain capture groups",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Rules",
                    "required": false,
                    "type": "array"
                },
                "weight_cost": {
                    "default": 50,
                    "description": "A value between 0 and 100 that determines the order of resources when multiple can be used",
                    "maximum": 100,
                    "minimum": 0,
                    "name": "Weight Cost",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "service_plans": {
            "description": "Describes services offered to sub-accounts",
            "name": "Service Plan",
            "properties": {
                "bookkeepers": {
                    "$ref": "bookkeepers",
                    "type": "object"
                },
                "description": {
                    "description": "Describes the service plan offering",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the service plan",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Service Plan Name",
                    "required": true,
                    "type": "string"
                },
                "plan": {
                    "description": "Outlines the service plan for various services",
                    "required": true,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "shared_auth": {
            "additionalProperties": false,
            "description": "Provides a local auth-token via a shared auth-token",
            "name": "Shared Auth",
            "properties": {
                "shared_auth": {
                    "description": "The shared token",
                    "maxLength": 64,
                    "minLength": 64,
                    "name": "Token",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "skel": {
            "description": "Skeleton JSON schema",
            "properties": {},
            "required": true,
            "type": "object"
        },
        "sms": {
            "description": "sms document",
            "name": "sms",
            "properties": {
                "body": {
                    "description": "text message",
                    "maxLength": 700,
                    "minLength": 1,
                    "name": "body",
                    "required": true,
                    "type": "string"
                },
                "from": {
                    "description": "caller-id-number, taken from user if absent",
                    "name": "From",
                    "required": false,
                    "type": "string"
                },
                "scheduled": {
                    "description": "The timestamp to start delivering the message",
                    "name": "Scheduled Delivery Date",
                    "required": false,
                    "type": "integer"
                },
                "to": {
                    "description": "callee-id-number",
                    "name": "To",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.accounts": {
            "description": "Schema for accounts system_config",
            "properties": {
                "allow_subaccounts_for_direct": {
                    "default": true,
                    "description": "accounts allow subaccounts for direct",
                    "name": "allow_subaccounts_for_direct",
                    "type": "boolean"
                },
                "default_timezone": {
                    "default": "America/Los_Angeles",
                    "description": "accounts default timezone",
                    "name": "default_timezone",
                    "type": "string"
                },
                "master_account_id": {
                    "description": "accounts master account id",
                    "name": "master_account_id"
                },
                "timezone": {
                    "default": "America/Los_Angeles",
                    "description": "accounts timezone",
                    "name": "timezone",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.acdc": {
            "description": "Schema for acdc system_config",
            "properties": {
                "agent_info_fields": {
                    "default": [
                        "first_name",
                        "last_name",
                        "username",
                        "email"
                    ],
                    "description": "acdc agent info fields",
                    "name": "agent_info_fields",
                    "type": "array"
                },
                "archive_period_ms": {
                    "default": 60000,
                    "description": "acdc archive period in milliseconds",
                    "name": "archive_period_ms",
                    "type": "integer"
                },
                "archive_window_s": {
                    "default": 60,
                    "description": "acdc archive window in seconds",
                    "name": "archive_window_s",
                    "type": "integer"
                },
                "cleanup_period_ms": {
                    "default": 360000,
                    "description": "acdc cleanup period in milliseconds",
                    "name": "cleanup_period_ms",
                    "type": "integer"
                },
                "cleanup_window_s": {
                    "default": 86400,
                    "description": "acdc cleanup window in seconds",
                    "name": "cleanup_window_s",
                    "type": "integer"
                },
                "default_agent_pause_timeout": {
                    "default": 600,
                    "description": "acdc default agent pause timeout",
                    "name": "default_agent_pause_timeout",
                    "type": "integer"
                },
                "max_connect_failures": {
                    "default": 3,
                    "description": "acdc max connect failures",
                    "name": "max_connect_failures",
                    "type": "integer"
                },
                "max_result_set": {
                    "default": 25,
                    "description": "acdc max result set",
                    "name": "max_result_set",
                    "type": "integer"
                },
                "queue_collect_resp_timeout": {
                    "default": 2000,
                    "description": "acdc queue collect resp timeout",
                    "name": "queue_collect_resp_timeout",
                    "type": "integer"
                },
                "queue_worker_count": {
                    "default": 5,
                    "description": "acdc queue worker count",
                    "name": "queue_worker_count",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.alerts": {
            "description": "Schema for alerts system_config",
            "properties": {
                "enabled": {
                    "default": true,
                    "description": "alerts enabled",
                    "name": "enabled",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.ananke": {
            "description": "Schema for ananke system_config",
            "properties": {
                "schedules": {
                    "default": [],
                    "description": "ananke schedules",
                    "name": "schedules",
                    "type": "array"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "properties": {
                                        "attempts": {
                                            "properties": {
                                                "default": 5,
                                                "description": "ananke attempts",
                                                "name": "attempts",
                                                "type": "string"
                                            }
                                        },
                                        "interval_s": {
                                            "properties": {
                                                "default": 300,
                                                "description": "ananke interval in seconds",
                                                "name": "interval_s",
                                                "type": "string"
                                            }
                                        },
                                        "timeout_s": {
                                            "properties": {
                                                "default": 20,
                                                "description": "ananke timeout in seconds",
                                                "name": "timeout_s",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.blackhole": {
            "description": "Schema for blackhole system_config",
            "properties": {
                "autoload_modules": {
                    "default": [
                        "bh_token_auth"
                    ],
                    "description": "blackhole autoload modules",
                    "name": "autoload_modules",
                    "type": "array"
                },
                "port": {
                    "default": 5555,
                    "description": "blackhole port",
                    "name": "port",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.braintree": {
            "description": "Schema for braintree system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "braintree debug",
                    "name": "debug",
                    "type": "boolean"
                },
                "default_environment": {
                    "default": [],
                    "description": "braintree default environment",
                    "name": "default_environment",
                    "type": "string"
                },
                "default_merchant_id": {
                    "default": [],
                    "description": "braintree default merchant id",
                    "name": "default_merchant_id",
                    "type": "string"
                },
                "max_amount": {
                    "default": 200.0,
                    "description": "braintree max amount",
                    "name": "max_amount",
                    "type": "number"
                },
                "min_amount": {
                    "default": 5.0,
                    "description": "braintree min amount",
                    "name": "min_amount",
                    "type": "number"
                },
                "should_prorate": {
                    "default": true,
                    "description": "braintree should prorate",
                    "name": "should_prorate",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.call_command": {
            "description": "Schema for call_command system_config",
            "properties": {
                "application_timeout": {
                    "default": 500000,
                    "description": "call_command application timeout",
                    "name": "application_timeout",
                    "type": "integer"
                },
                "collect_timeout": {
                    "default": 5000,
                    "description": "call_command collect timeout",
                    "name": "collect_timeout",
                    "type": "integer"
                },
                "digit_timeout": {
                    "default": 3000,
                    "description": "call_command digit timeout",
                    "name": "digit_timeout",
                    "type": "integer"
                },
                "interdigit_timeout": {
                    "default": 2000,
                    "description": "call_command interdigit timeout",
                    "name": "interdigit_timeout",
                    "type": "integer"
                },
                "message_timeout": {
                    "default": 5000,
                    "description": "call_command message timeout",
                    "name": "message_timeout",
                    "type": "integer"
                },
                "store_file": {
                    "properties": {
                        "{App}": {
                            "properties": {
                                "retries": {
                                    "properties": {
                                        "default": 5,
                                        "description": "call_command retries",
                                        "name": "retries",
                                        "type": "integer"
                                    }
                                },
                                "save_timeout_ms": {
                                    "properties": {
                                        "default": 300000,
                                        "description": "call_command save timeout in milliseconds",
                                        "name": "save_timeout_ms",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.callflow": {
            "description": "Schema for callflow system_config",
            "properties": {
                "call_recording": {
                    "properties": {
                        "extension": {
                            "properties": {
                                "default": "mp3",
                                "description": "callflow extension",
                                "name": "extension",
                                "type": "string"
                            }
                        }
                    }
                },
                "calls_consume_tokens": {
                    "default": true,
                    "description": "callflow calls consume tokens",
                    "name": "calls_consume_tokens",
                    "type": "boolean"
                },
                "default_pin_length": {
                    "default": 10,
                    "description": "callflow default pin length",
                    "name": "default_pin_length",
                    "type": "integer"
                },
                "default_use_account_caller_id": {
                    "default": true,
                    "description": "callflow default use account caller id",
                    "name": "default_use_account_caller_id",
                    "type": "boolean"
                },
                "ensure_valid_caller_id": {
                    "default": false,
                    "description": "callflow ensure valid caller id",
                    "name": "ensure_valid_caller_id",
                    "type": "boolean"
                },
                "fax_detect_duration_s": {
                    "default": 5,
                    "description": "callflow fax detect duration in seconds",
                    "name": "fax_detect_duration_s",
                    "type": "integer"
                },
                "min_bucket_cost": {
                    "default": 5,
                    "description": "callflow min bucket cost",
                    "name": "min_bucket_cost",
                    "type": "integer"
                },
                "mwi_send_unsoliciated_updates": {
                    "default": true,
                    "description": "callflow mwi send unsoliciated updates",
                    "name": "mwi_send_unsoliciated_updates",
                    "type": "boolean"
                },
                "post_answer_delay": {
                    "default": 100,
                    "description": "callflow post answer delay",
                    "name": "post_answer_delay",
                    "type": "integer"
                },
                "ring_ready_offnet": {
                    "default": true,
                    "description": "callflow ring ready offnet",
                    "name": "ring_ready_offnet",
                    "type": "boolean"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "callflow route win timeout",
                    "name": "route_win_timeout",
                    "type": "integer"
                },
                "singular_call_hook_url": {
                    "default": "",
                    "description": "callflow singular call hook url",
                    "name": "singular_call_hook_url",
                    "type": "string"
                },
                "voicemail": {
                    "properties": {
                        "delete_after_notify": {
                            "properties": {
                                "default": false,
                                "description": "callflow delete after notify",
                                "name": "delete_after_notify",
                                "type": "boolean"
                            }
                        },
                        "extension": {
                            "properties": {
                                "default": "mp3",
                                "description": "callflow extension",
                                "name": "extension",
                                "type": "string"
                            }
                        },
                        "max_box_number_length": {
                            "properties": {
                                "default": 15,
                                "description": "callflow max box number length",
                                "name": "max_box_number_length",
                                "type": "integer"
                            }
                        },
                        "max_message_count": {
                            "properties": {
                                "default": 100,
                                "description": "callflow max message count",
                                "name": "max_message_count",
                                "type": "integer"
                            }
                        },
                        "max_message_length": {
                            "properties": {
                                "default": 500,
                                "description": "callflow max message length",
                                "name": "max_message_length",
                                "type": "integer"
                            }
                        },
                        "max_pin_length": {
                            "properties": {
                                "default": 6,
                                "description": "callflow max pin length",
                                "name": "max_pin_length",
                                "type": "integer"
                            }
                        },
                        "message_retention_duration": {
                            "properties": {
                                "default": 93,
                                "description": "callflow message retention duration",
                                "name": "message_retention_duration",
                                "type": "integer"
                            }
                        },
                        "min_message_size": {
                            "properties": {
                                "default": 500,
                                "description": "callflow min message size",
                                "name": "min_message_size",
                                "type": "integer"
                            }
                        },
                        "save_after_notify": {
                            "properties": {
                                "default": false,
                                "description": "callflow save after notify",
                                "name": "save_after_notify",
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.callflow.call_forward": {
            "description": "Schema for callflow.call_forward system_config",
            "properties": {
                "callfwd_number_timeout": {
                    "default": 8000,
                    "description": "callflow.call_forward callfwd number timeout",
                    "name": "callfwd_number_timeout",
                    "type": "integer"
                },
                "max_callfwd_number_length": {
                    "default": 20,
                    "description": "callflow.call_forward max callfwd number length",
                    "name": "max_callfwd_number_length",
                    "type": "integer"
                },
                "min_callfwd_number_length": {
                    "default": 3,
                    "description": "callflow.call_forward min callfwd number length",
                    "name": "min_callfwd_number_length",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.callflow.hotdesk": {
            "description": "Schema for callflow.hotdesk system_config",
            "properties": {
                "max_hotdesk_id_length": {
                    "default": 10,
                    "description": "callflow.hotdesk max hotdesk id length",
                    "name": "max_hotdesk_id_length",
                    "type": "integer"
                },
                "max_login_attempts": {
                    "default": 3,
                    "description": "callflow.hotdesk max login attempts",
                    "name": "max_login_attempts",
                    "type": "integer"
                },
                "max_pin_length": {
                    "default": 6,
                    "description": "callflow.hotdesk max pin length",
                    "name": "max_pin_length",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.callflow.menu": {
            "description": "Schema for callflow.menu system_config",
            "properties": {
                "min_greeting_length": {
                    "default": 1500,
                    "description": "callflow.menu min greeting length",
                    "name": "min_greeting_length",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.callflow.park": {
            "description": "Schema for callflow.park system_config",
            "properties": {
                "db_doc_name": {
                    "default": "parked_calls",
                    "description": "callflow.park db doc name",
                    "name": "db_doc_name",
                    "type": "string"
                },
                "default_callback_timeout": {
                    "default": 30000,
                    "description": "callflow.park default callback timeout",
                    "name": "default_callback_timeout",
                    "type": "integer"
                },
                "default_ringback_timeout": {
                    "default": 120000,
                    "description": "callflow.park default ringback timeout",
                    "name": "default_ringback_timeout",
                    "type": "integer"
                },
                "parked_presence_type": {
                    "default": "early",
                    "description": "callflow.park parked presence type",
                    "name": "parked_presence_type",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.callflow.resources": {
            "description": "Schema for callflow.resources system_config",
            "properties": {
                "default_emit_account_id": {
                    "default": false,
                    "description": "callflow.resources default emit account id",
                    "name": "default_emit_account_id",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.camper": {
            "description": "Schema for camper system_config",
            "properties": {
                "stop_after": {
                    "default": 31,
                    "description": "camper stop after",
                    "name": "stop_after",
                    "type": "integer"
                },
                "timeout": {
                    "default": 15,
                    "description": "camper timeout",
                    "name": "timeout",
                    "type": "integer"
                },
                "tries": {
                    "default": 10,
                    "description": "camper tries",
                    "name": "tries",
                    "type": "integer"
                },
                "try_interval": {
                    "default": 3,
                    "description": "camper try interval",
                    "name": "try_interval",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.cb_modb": {
            "description": "Schema for cb_modb system_config",
            "properties": {
                "maybe_archive_modbs": {
                    "default": false,
                    "description": "cb_modb maybe archive modbs",
                    "name": "maybe_archive_modbs",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.cccp": {
            "description": "Schema for cccp system_config",
            "properties": {
                "allowed_callee_regex": {
                    "default": "^\\+?\\d{7,}$",
                    "description": "cccp allowed callee regex",
                    "name": "allowed_callee_regex",
                    "type": "string"
                },
                "callback_delay": {
                    "default": 3,
                    "description": "cccp callback delay",
                    "name": "callback_delay",
                    "type": "integer"
                },
                "cccp_cb_number": {
                    "description": "cccp cccp cb number",
                    "name": "cccp_cb_number"
                },
                "cccp_cc_number": {
                    "description": "cccp cccp cc number",
                    "name": "cccp_cc_number"
                },
                "last_number_redial_code": {
                    "default": "*0",
                    "description": "cccp last number redial code",
                    "name": "last_number_redial_code",
                    "type": "string"
                },
                "prompt_delay": {
                    "default": 1,
                    "description": "cccp prompt delay",
                    "name": "prompt_delay",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.cdr": {
            "description": "Schema for cdr system_config",
            "properties": {
                "store_anonymous": {
                    "default": false,
                    "description": "cdr store anonymous",
                    "name": "store_anonymous",
                    "type": "boolean"
                },
                "v3_migrate_num_months": {
                    "default": 4,
                    "description": "cdr v3 migrate num months",
                    "name": "v3_migrate_num_months",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.conferences": {
            "description": "Schema for conferences system_config",
            "properties": {
                "advertise": {
                    "properties": {
                        "{ConfigName}": {
                            "properties": {
                                "description": "conferences {ConfigName}",
                                "name": "{ConfigName}"
                            }
                        }
                    }
                },
                "caller-controls": {
                    "properties": {
                        "{ConfigName}": {
                            "properties": {
                                "description": "conferences {ConfigName}",
                                "name": "{ConfigName}",
                                "type": "array"
                            }
                        }
                    }
                },
                "chat-permissions": {
                    "properties": {
                        "{ConfigName}": {
                            "properties": {
                                "description": "conferences {ConfigName}",
                                "name": "{ConfigName}"
                            }
                        }
                    }
                },
                "entry_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                    "description": "conferences entry tone",
                    "name": "entry_tone",
                    "type": "string"
                },
                "exit_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,440);v=-7;>=3;+=.1;%(800,0,349,440)",
                    "description": "conferences exit tone",
                    "name": "exit_tone",
                    "type": "string"
                },
                "moderator_entry_tone": {
                    "default": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                    "description": "conferences moderator entry tone",
                    "name": "moderator_entry_tone",
                    "type": "string"
                },
                "profiles": {
                    "properties": {
                        "default": {
                            "properties": {
                                "default": {
                                    "caller-controls": "default",
                                    "comfort-noise": 1000,
                                    "energy-level": 20,
                                    "enter-sound": "tone_stream://v=-7;>=2;+=.1;%(300,0,523,659);v=-7;>=3;+=.1;%(800,0,659,783)",
                                    "interval": 20,
                                    "moh-sound": "$${hold_music}",
                                    "rate": 8000
                                },
                                "description": "conferences default",
                                "name": "default",
                                "type": "object"
                            }
                        },
                        "page": {
                            "properties": {
                                "default": {
                                    "caller-controls": "default",
                                    "comfort-noise": 1000,
                                    "energy-level": 20,
                                    "enter-sound": "",
                                    "interval": 20,
                                    "moh-sound": "",
                                    "rate": 8000
                                },
                                "description": "conferences page",
                                "name": "page",
                                "type": "object"
                            }
                        },
                        "{ConfigName}": {
                            "properties": {
                                "description": "conferences {ConfigName}",
                                "name": "{ConfigName}"
                            }
                        }
                    }
                },
                "review_name": {
                    "default": false,
                    "description": "conferences review name",
                    "name": "review_name",
                    "type": "boolean"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "conferences route win timeout",
                    "name": "route_win_timeout",
                    "type": "integer"
                },
                "support_name_announcement": {
                    "default": true,
                    "description": "conferences support name announcement",
                    "name": "support_name_announcement",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar": {
            "description": "Schema for crossbar system_config",
            "properties": {
                "allow_tracing": {
                    "default": false,
                    "description": "crossbar allow tracing",
                    "name": "allow_tracing",
                    "type": "boolean"
                },
                "api_auth_tokens": {
                    "default": 35,
                    "description": "crossbar api auth tokens",
                    "name": "api_auth_tokens",
                    "type": "integer"
                },
                "autoload_modules": {
                    "description": "crossbar autoload modules",
                    "name": "autoload_modules"
                },
                "cleanup_timer": {
                    "default": 86400,
                    "description": "crossbar cleanup timer",
                    "name": "cleanup_timer",
                    "type": "integer"
                },
                "default_allow_anonymous_quickcalls": {
                    "default": true,
                    "description": "crossbar default allow anonymous quickcalls",
                    "name": "default_allow_anonymous_quickcalls",
                    "type": "boolean"
                },
                "default_language": {
                    "default": "en-US",
                    "description": "crossbar default language",
                    "name": "default_language",
                    "type": "string"
                },
                "expiry_percentage": {
                    "default": 75,
                    "description": "crossbar expiry percentage",
                    "name": "expiry_percentage",
                    "type": "integer"
                },
                "magic_path_patterns": {
                    "default": [
                        "/:version/accounts/:account_id/vmboxes/:box_id/messages/:message_id/raw",
                        "/:version/accounts/:account_id/faxes/:direction/:fax_id/attachment",
                        "/:version/accounts/:account_id/presence/:reportid"
                    ],
                    "description": "crossbar magic path patterns",
                    "name": "magic_path_patterns",
                    "type": "array"
                },
                "max_upload_size": {
                    "default": 8000000,
                    "description": "crossbar max upload size",
                    "name": "max_upload_size",
                    "type": "integer"
                },
                "maximum_range": {
                    "default": 2682000,
                    "description": "crossbar maximum range",
                    "name": "maximum_range",
                    "type": "integer"
                },
                "pagination_page_size": {
                    "default": 50,
                    "description": "crossbar pagination page size",
                    "name": "pagination_page_size",
                    "type": "integer"
                },
                "port": {
                    "default": 8000,
                    "description": "crossbar port",
                    "name": "port",
                    "type": "integer"
                },
                "pretty_metrics": {
                    "default": true,
                    "description": "crossbar pretty metrics",
                    "name": "pretty_metrics",
                    "type": "boolean"
                },
                "request_timeout_ms": {
                    "default": 10000,
                    "description": "crossbar request timeout in milliseconds",
                    "name": "request_timeout_ms",
                    "type": "integer"
                },
                "reset_id_size": {
                    "default": 137,
                    "description": "crossbar reset id size",
                    "name": "reset_id_size",
                    "type": "integer"
                },
                "reverse_proxies": {
                    "default": [],
                    "description": "crossbar reverse proxies",
                    "name": "reverse_proxies",
                    "type": "array"
                },
                "schema_strict_validation": {
                    "default": false,
                    "description": "crossbar schema strict validation",
                    "name": "schema_strict_validation",
                    "type": "boolean"
                },
                "soft_delete_pause_ms": {
                    "default": 10000,
                    "description": "crossbar soft delete pause in milliseconds",
                    "name": "soft_delete_pause_ms",
                    "type": "integer"
                },
                "ssl_ca_cert": {
                    "description": "crossbar ssl ca cert",
                    "name": "ssl_ca_cert",
                    "type": "string"
                },
                "ssl_workers": {
                    "default": 100,
                    "description": "crossbar ssl workers",
                    "name": "ssl_workers",
                    "type": "integer"
                },
                "token_auth_expiry": {
                    "default": 3600,
                    "description": "crossbar token auth expiry",
                    "name": "token_auth_expiry",
                    "type": "integer"
                },
                "token_costs": {
                    "default": 1,
                    "description": "crossbar token costs",
                    "name": "token_costs",
                    "type": "integer"
                },
                "trace_path": {
                    "default": "/tmp",
                    "description": "crossbar trace path",
                    "name": "trace_path",
                    "type": "string"
                },
                "use_plaintext": {
                    "default": true,
                    "description": "crossbar use plaintext",
                    "name": "use_plaintext",
                    "type": "boolean"
                },
                "use_ssl": {
                    "default": false,
                    "description": "crossbar use ssl",
                    "name": "use_ssl",
                    "type": "boolean"
                },
                "user_auth_tokens": {
                    "default": 35,
                    "description": "crossbar user auth tokens",
                    "name": "user_auth_tokens",
                    "type": "integer"
                },
                "workers": {
                    "default": 100,
                    "description": "crossbar workers",
                    "name": "workers",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.accounts": {
            "description": "Schema for crossbar.accounts system_config",
            "properties": {
                "account_realm_suffix": {
                    "default": "sip.2600hz.com",
                    "description": "crossbar.accounts account realm suffix",
                    "name": "account_realm_suffix",
                    "type": "string"
                },
                "allow_move": {
                    "default": "superduper_admin",
                    "description": "crossbar.accounts allow move",
                    "name": "allow_move",
                    "type": "string"
                },
                "allow_sibling_listing": {
                    "default": true,
                    "description": "crossbar.accounts allow sibling listing",
                    "name": "allow_sibling_listing",
                    "type": "boolean"
                },
                "default_parent": {
                    "default": "",
                    "description": "crossbar.accounts default parent",
                    "name": "default_parent",
                    "type": "string"
                },
                "ensure_unique_name": {
                    "default": true,
                    "description": "crossbar.accounts ensure unique name",
                    "name": "ensure_unique_name",
                    "type": "boolean"
                },
                "expose_api_key": {
                    "default": false,
                    "description": "crossbar.accounts expose api key",
                    "name": "expose_api_key",
                    "type": "boolean"
                },
                "new_account_notify_delay_s": {
                    "default": 30,
                    "description": "crossbar.accounts new account notify delay in seconds",
                    "name": "new_account_notify_delay_s",
                    "type": "integer"
                },
                "random_realm_strength": {
                    "default": 3,
                    "description": "crossbar.accounts random realm strength",
                    "name": "random_realm_strength",
                    "type": "integer"
                },
                "trial_time": {
                    "default": 1209600,
                    "description": "crossbar.accounts trial time",
                    "name": "trial_time",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.auth": {
            "description": "Schema for crossbar.auth system_config",
            "properties": {
                "basic_auth_type": {
                    "default": "md5",
                    "description": "crossbar.auth basic auth type",
                    "name": "basic_auth_type",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.braintree": {
            "description": "Schema for crossbar.braintree system_config",
            "properties": {
                "max_account_credit": {
                    "default": 500.0,
                    "description": "crossbar.braintree max account credit",
                    "name": "max_account_credit",
                    "type": "number"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.callflows": {
            "description": "Schema for crossbar.callflows system_config",
            "properties": {
                "default_reconcile_numbers": {
                    "default": false,
                    "description": "crossbar.callflows default reconcile numbers",
                    "name": "default_reconcile_numbers",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.cdrs": {
            "description": "Schema for crossbar.cdrs system_config",
            "properties": {
                "maximum_bulk": {
                    "default": 50,
                    "description": "crossbar.cdrs maximum bulk",
                    "name": "maximum_bulk",
                    "type": "integer"
                },
                "maximum_range": {
                    "default": 2682000,
                    "description": "crossbar.cdrs maximum range",
                    "name": "maximum_range",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.contact_list": {
            "description": "Schema for crossbar.contact_list system_config",
            "properties": {
                "default_includes": {
                    "default": [],
                    "description": "crossbar.contact_list default includes",
                    "name": "default_includes",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.devices": {
            "description": "Schema for crossbar.devices system_config",
            "properties": {
                "allow_aggregates": {
                    "default": "true",
                    "description": "crossbar.devices allow aggregates",
                    "name": "allow_aggregates",
                    "type": "boolean"
                },
                "provisioning_type": {
                    "description": "crossbar.devices provisioning type",
                    "name": "provisioning_type"
                },
                "provisioning_url": {
                    "description": "crossbar.devices provisioning url",
                    "name": "provisioning_url",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.freeswitch": {
            "description": "Schema for crossbar.freeswitch system_config",
            "properties": {
                "files_to_include": {
                    "default": [
                        "freeswitch_dialplan",
                        "freeswitch_chatplan"
                    ],
                    "description": "crossbar.freeswitch files to include",
                    "name": "files_to_include",
                    "type": "array"
                },
                "offline_configuration_key": {
                    "description": "crossbar.freeswitch offline configuration key",
                    "name": "offline_configuration_key",
                    "type": "string"
                },
                "realm_templates_to_process": {
                    "default": [
                        "freeswitch_directory_realm"
                    ],
                    "description": "crossbar.freeswitch realm templates to process",
                    "name": "realm_templates_to_process",
                    "type": "array"
                },
                "templates_to_process": {
                    "default": [
                        "freeswitch_directory"
                    ],
                    "description": "crossbar.freeswitch templates to process",
                    "name": "templates_to_process",
                    "type": "array"
                },
                "work_dir": {
                    "default": "/tmp/",
                    "description": "crossbar.freeswitch work dir",
                    "name": "work_dir",
                    "type": "string"
                },
                "{Module}": {
                    "description": "crossbar.freeswitch {Module}",
                    "name": "{Module}",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.media": {
            "description": "Schema for crossbar.media system_config",
            "properties": {
                "normalization_format": {
                    "default": "mp3",
                    "description": "crossbar.media normalization format",
                    "name": "normalization_format",
                    "type": "string"
                },
                "normalize_media": {
                    "default": false,
                    "description": "crossbar.media normalize media",
                    "name": "normalize_media",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.notifications": {
            "description": "Schema for crossbar.notifications system_config",
            "properties": {
                "notification_timeout_ms": {
                    "default": 5000,
                    "description": "crossbar.notifications notification timeout in milliseconds",
                    "name": "notification_timeout_ms",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.onboard": {
            "description": "Schema for crossbar.onboard system_config",
            "properties": {
                "default_callflow_start_exten": {
                    "default": 2000,
                    "description": "crossbar.onboard default callflow start exten",
                    "name": "default_callflow_start_exten",
                    "type": "integer"
                },
                "default_extension_callflow": {
                    "default": "{\"data\": { \"id\": \"~s\" }, \"module\": \"user\", \"children\": { \"_\": { \"data\": { \"id\": \"~s\" }, \"module\": \"voicemail\", \"children\": {}}}}",
                    "description": "crossbar.onboard default extension callflow",
                    "name": "default_extension_callflow",
                    "type": "string"
                },
                "default_vm_start_exten": {
                    "default": 3000,
                    "description": "crossbar.onboard default vm start exten",
                    "name": "default_vm_start_exten",
                    "type": "integer"
                },
                "device_pwd_strength": {
                    "default": 6,
                    "description": "crossbar.onboard device pwd strength",
                    "name": "device_pwd_strength",
                    "type": "integer"
                },
                "device_username_strength": {
                    "default": 3,
                    "description": "crossbar.onboard device username strength",
                    "name": "device_username_strength",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.phone_numbers": {
            "description": "Schema for crossbar.phone_numbers system_config",
            "properties": {
                "default_country": {
                    "default": "US",
                    "description": "crossbar.phone_numbers default country",
                    "name": "default_country",
                    "type": "string"
                },
                "phonebook_url": {
                    "description": "crossbar.phone_numbers phonebook url",
                    "name": "phonebook_url",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.port_requests": {
            "description": "Schema for crossbar.port_requests system_config",
            "properties": {
                "unfinished_port_request_lifetime_s": {
                    "default": 2592000,
                    "description": "crossbar.port_requests unfinished port request lifetime in seconds",
                    "name": "unfinished_port_request_lifetime_s",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.presence": {
            "description": "Schema for crossbar.presence system_config",
            "properties": {
                "query_presence_timeout": {
                    "default": 1000,
                    "description": "crossbar.presence query presence timeout",
                    "name": "query_presence_timeout",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.resource_selectors": {
            "description": "Schema for crossbar.resource_selectors system_config",
            "properties": {
                "csv_config": {
                    "default": {
                        "selector_column": 1,
                        "value_column": 2
                    },
                    "description": "crossbar.resource_selectors csv config",
                    "name": "csv_config",
                    "type": "object"
                },
                "suppress_selectors_change_notice": {
                    "default": false,
                    "description": "crossbar.resource_selectors suppress selectors change notice",
                    "name": "suppress_selectors_change_notice",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.resources": {
            "description": "Schema for crossbar.resources system_config",
            "properties": {
                "job_recovery_threshold_s": {
                    "default": 3600,
                    "description": "crossbar.resources job recovery threshold in seconds",
                    "name": "job_recovery_threshold_s",
                    "type": "integer"
                },
                "job_recovery_timeout_s": {
                    "default": 21600,
                    "description": "crossbar.resources job recovery timeout in seconds",
                    "name": "job_recovery_timeout_s",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.services": {
            "description": "Schema for crossbar.services system_config",
            "properties": {
                "maximum_range": {
                    "default": 2682000,
                    "description": "crossbar.services maximum range",
                    "name": "maximum_range",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.shared_auth": {
            "description": "Schema for crossbar.shared_auth system_config",
            "properties": {
                "authoritative_crossbar": {
                    "description": "crossbar.shared_auth authoritative crossbar",
                    "name": "authoritative_crossbar",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.token_restrictions": {
            "description": "Schema for crossbar.token_restrictions system_config",
            "properties": {
                "_": {
                    "description": "crossbar.token_restrictions  ",
                    "name": "_",
                    "type": "object"
                },
                "default_priv_level": {
                    "default": "admin",
                    "description": "crossbar.token_restrictions default priv level",
                    "name": "default_priv_level",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.crossbar.ubiquiti": {
            "description": "Schema for crossbar.ubiquiti system_config",
            "properties": {
                "api_secret": {
                    "description": "crossbar.ubiquiti api secret",
                    "name": "api_secret"
                },
                "api_token_expires_s": {
                    "default": 1800,
                    "description": "crossbar.ubiquiti api token expires in seconds",
                    "name": "api_token_expires_s",
                    "type": "integer"
                },
                "production": {
                    "properties": {
                        "sso_url": {
                            "properties": {
                                "default": "https://sso.ubnt.com/api/sso/v1/",
                                "description": "crossbar.ubiquiti sso url",
                                "name": "sso_url",
                                "type": "string"
                            }
                        }
                    }
                },
                "salt_length": {
                    "default": 20,
                    "description": "crossbar.ubiquiti salt length",
                    "name": "salt_length",
                    "type": "integer"
                },
                "sso_provider_id": {
                    "description": "crossbar.ubiquiti sso provider id",
                    "name": "sso_provider_id"
                },
                "staging": {
                    "properties": {
                        "sso_url": {
                            "properties": {
                                "default": "https://sso-stage.ubnt.com/api/sso/v1/",
                                "description": "crossbar.ubiquiti sso url",
                                "name": "sso_url",
                                "type": "string"
                            }
                        }
                    }
                },
                "tokens_per_request": {
                    "default": 35,
                    "description": "crossbar.ubiquiti tokens per request",
                    "name": "tokens_per_request",
                    "type": "integer"
                },
                "{crossbar.ubiquiti.sso_environment}": {
                    "properties": {
                        "sso_url": {
                            "properties": {
                                "description": "crossbar.ubiquiti sso url",
                                "name": "sso_url"
                            }
                        }
                    }
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.datamgr": {
            "description": "Schema for datamgr system_config",
            "properties": {
                "cache_policy": {
                    "default": {
                        "account": 900,
                        "aggregate": 900,
                        "deprecated": 900,
                        "modb": 900,
                        "numbers": 900,
                        "system": 900,
                        "system_config": "infinity",
                        "system_data": "infinity"
                    },
                    "description": "datamgr cache policy",
                    "name": "cache_policy",
                    "type": "object"
                },
                "default_archive_folder": {
                    "default": "/tmp",
                    "description": "datamgr default archive folder",
                    "name": "default_archive_folder",
                    "type": "string"
                },
                "no_caching_doc_types": {
                    "default": [
                        "media",
                        "private_media",
                        "call_recording",
                        "fax",
                        "mailbox_message"
                    ],
                    "description": "datamgr no caching doc types",
                    "name": "no_caching_doc_types",
                    "type": "array"
                },
                "performance": {
                    "description": "datamgr performance",
                    "name": "performance"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.doodle": {
            "description": "Schema for doodle system_config",
            "properties": {
                "connections": {
                    "description": "doodle connections",
                    "name": "connections"
                },
                "default_test_from_number": {
                    "default": "15552220001",
                    "description": "doodle default test from number",
                    "name": "default_test_from_number",
                    "type": "string"
                },
                "default_test_route_id": {
                    "default": "syneverse",
                    "description": "doodle default test route id",
                    "name": "default_test_route_id",
                    "type": "string"
                },
                "inbound_broker": {
                    "description": "doodle inbound broker",
                    "name": "inbound_broker",
                    "type": "string"
                },
                "inbound_exchange": {
                    "default": "sms",
                    "description": "doodle inbound exchange",
                    "name": "inbound_exchange",
                    "type": "string"
                },
                "inbound_exchange_options": {
                    "default": {
                        "passive": true
                    },
                    "description": "doodle inbound exchange options",
                    "name": "inbound_exchange_options",
                    "type": "object"
                },
                "inbound_exchange_type": {
                    "default": "topic",
                    "description": "doodle inbound exchange type",
                    "name": "inbound_exchange_type",
                    "type": "string"
                },
                "inbound_queue_name": {
                    "default": "default",
                    "description": "doodle inbound queue name",
                    "name": "inbound_queue_name",
                    "type": "string"
                },
                "min_bucket_cost": {
                    "default": 1,
                    "description": "doodle min bucket cost",
                    "name": "min_bucket_cost",
                    "type": "integer"
                },
                "reschedule": {
                    "description": "doodle reschedule",
                    "name": "reschedule"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "doodle route win timeout",
                    "name": "route_win_timeout",
                    "type": "integer"
                },
                "unavailable_message": {
                    "default": {
                        "en-US": "sms service unavailable"
                    },
                    "description": "doodle unavailable message",
                    "name": "unavailable_message",
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.ecallmgr": {
            "description": "Schema for ecallmgr system_config",
            "properties": {
                "acls": {
                    "default": {},
                    "description": "ecallmgr acls",
                    "name": "acls",
                    "type": "object"
                },
                "authz_default_action": {
                    "default": "deny",
                    "description": "ecallmgr authz default action",
                    "name": "authz_default_action",
                    "type": "string"
                },
                "authz_dry_run": {
                    "default": false,
                    "description": "ecallmgr authz dry run",
                    "name": "authz_dry_run",
                    "type": "boolean"
                },
                "authz_enabled": {
                    "default": false,
                    "description": "ecallmgr authz enabled",
                    "name": "authz_enabled",
                    "type": "boolean"
                },
                "authz_local_resources": {
                    "default": false,
                    "description": "ecallmgr authz local resources",
                    "name": "authz_local_resources",
                    "type": "boolean"
                },
                "balance_crawler_cycle_ms": {
                    "default": 60000,
                    "description": "ecallmgr balance crawler cycle in milliseconds",
                    "name": "balance_crawler_cycle_ms",
                    "type": "integer"
                },
                "balance_crawler_enabled": {
                    "default": false,
                    "description": "ecallmgr balance crawler enabled",
                    "name": "balance_crawler_enabled",
                    "type": "boolean"
                },
                "balance_crawler_fetch_timeout_ms": {
                    "default": 10000,
                    "description": "ecallmgr balance crawler fetch timeout in milliseconds",
                    "name": "balance_crawler_fetch_timeout_ms",
                    "type": "integer"
                },
                "balance_crawler_interaccount_delay_ms": {
                    "default": 10,
                    "description": "ecallmgr balance crawler interaccount delay in milliseconds",
                    "name": "balance_crawler_interaccount_delay_ms",
                    "type": "integer"
                },
                "call_routing_bindings": {
                    "default": [
                        "context_2"
                    ],
                    "description": "ecallmgr call routing bindings",
                    "name": "call_routing_bindings",
                    "type": "array"
                },
                "capabilities": {
                    "default": [
                        {
                            "capability": "conference",
                            "is_loaded": false,
                            "module": "mod_conference"
                        },
                        {
                            "capability": "channel_move",
                            "is_loaded": false,
                            "module": "mod_channel_move"
                        },
                        {
                            "capability": "http_cache",
                            "is_loaded": false,
                            "module": "mod_http_cache"
                        },
                        {
                            "capability": "dialplan",
                            "is_loaded": false,
                            "module": "mod_dptools"
                        },
                        {
                            "capability": "sip",
                            "is_loaded": false,
                            "module": "mod_sofia"
                        },
                        {
                            "capability": "fax",
                            "is_loaded": false,
                            "module": "mod_spandsp"
                        },
                        {
                            "capability": "tts",
                            "is_loaded": false,
                            "module": "mod_flite"
                        },
                        {
                            "capability": "freetdm",
                            "is_loaded": false,
                            "module": "mod_freetdm"
                        },
                        {
                            "capability": "skype",
                            "is_loaded": false,
                            "module": "mod_skypopen"
                        },
                        {
                            "capability": "xmpp",
                            "is_loaded": false,
                            "module": "mod_dingaling"
                        },
                        {
                            "capability": "skinny",
                            "is_loaded": false,
                            "module": "mod_skinny"
                        },
                        {
                            "capability": "sms",
                            "is_loaded": false,
                            "module": "mod_sms"
                        }
                    ],
                    "description": "ecallmgr capabilities",
                    "name": "capabilities",
                    "type": "array"
                },
                "configuration_handlers": {
                    "description": "ecallmgr configuration handlers",
                    "name": "configuration_handlers"
                },
                "debug_channel": {
                    "default": false,
                    "description": "ecallmgr debug channel",
                    "name": "debug_channel",
                    "type": "boolean"
                },
                "default_fax_extension": {
                    "default": ".tiff",
                    "description": "ecallmgr default fax extension",
                    "name": "default_fax_extension",
                    "type": "string"
                },
                "default_realm": {
                    "default": "nodomain.com",
                    "description": "ecallmgr default realm",
                    "name": "default_realm",
                    "type": "string"
                },
                "default_recording_extension": {
                    "default": ".mp3",
                    "description": "ecallmgr default recording extension",
                    "name": "default_recording_extension",
                    "type": "string"
                },
                "default_ringback": {
                    "description": "ecallmgr default ringback",
                    "name": "default_ringback"
                },
                "event_stream_idle_alert": {
                    "default": 0,
                    "description": "ecallmgr event stream idle alert",
                    "name": "event_stream_idle_alert",
                    "type": "integer"
                },
                "expires_deviation_time": {
                    "default": 0,
                    "description": "ecallmgr expires deviation time",
                    "name": "expires_deviation_time",
                    "type": "integer"
                },
                "fax_file_path": {
                    "default": "/tmp/",
                    "description": "ecallmgr fax file path",
                    "name": "fax_file_path",
                    "type": "string"
                },
                "fetch_timeout": {
                    "default": 2600,
                    "description": "ecallmgr fetch timeout",
                    "name": "fetch_timeout",
                    "type": "integer"
                },
                "force_conference_verbose_events": {
                    "description": "ecallmgr force conference verbose events",
                    "name": "force_conference_verbose_events",
                    "type": "boolean"
                },
                "freeswitch_context": {
                    "default": "context_2",
                    "description": "ecallmgr freeswitch context",
                    "name": "freeswitch_context",
                    "type": "string"
                },
                "fs_cmds": {
                    "default": [
                        {
                            "load": "mod_sofia"
                        },
                        {
                            "reloadacl": ""
                        }
                    ],
                    "description": "ecallmgr fs cmds",
                    "name": "fs_cmds",
                    "type": "array"
                },
                "fs_cmds_wait_ms": {
                    "default": 5000,
                    "description": "ecallmgr fs cmds wait in milliseconds",
                    "name": "fs_cmds_wait_ms",
                    "type": "integer"
                },
                "fs_node_uptime_s": {
                    "default": 600,
                    "description": "ecallmgr fs node uptime in seconds",
                    "name": "fs_node_uptime_s",
                    "type": "integer"
                },
                "fs_nodes": {
                    "default": [],
                    "description": "ecallmgr fs nodes",
                    "name": "fs_nodes",
                    "type": "array"
                },
                "fs_profiles": {
                    "default": {},
                    "description": "ecallmgr fs profiles",
                    "name": "fs_profiles",
                    "type": "object"
                },
                "fs_reconnect_cmds": {
                    "description": "ecallmgr fs reconnect cmds",
                    "name": "fs_reconnect_cmds"
                },
                "gateways": {
                    "default": {},
                    "description": "ecallmgr gateways",
                    "name": "gateways",
                    "type": "object"
                },
                "insert_fetched_registration_locally": {
                    "default": false,
                    "description": "ecallmgr insert fetched registration locally",
                    "name": "insert_fetched_registration_locally",
                    "type": "boolean"
                },
                "max_channel_cleanup_timeout_ms": {
                    "default": 60000,
                    "description": "ecallmgr max channel cleanup timeout in milliseconds",
                    "name": "max_channel_cleanup_timeout_ms",
                    "type": "integer"
                },
                "max_channel_uptime_s": {
                    "default": 0,
                    "description": "ecallmgr max channel uptime in seconds",
                    "name": "max_channel_uptime_s",
                    "type": "integer"
                },
                "max_timeout_for_node_restart": {
                    "default": 10000,
                    "description": "ecallmgr max timeout for node restart",
                    "name": "max_timeout_for_node_restart",
                    "type": "integer"
                },
                "modules": {
                    "default": {
                        "authn": {
                            "type": "worker"
                        },
                        "channel": {
                            "type": "worker"
                        },
                        "conference": {
                            "type": "worker"
                        },
                        "config": {
                            "type": "worker"
                        },
                        "event_stream_sup": {
                            "type": "supervisor"
                        },
                        "msg": {
                            "type": "worker"
                        },
                        "node": {
                            "type": "worker"
                        },
                        "notify": {
                            "type": "worker"
                        },
                        "resource": {
                            "type": "worker"
                        },
                        "route_sup": {
                            "type": "supervisor"
                        }
                    },
                    "description": "ecallmgr modules",
                    "name": "modules",
                    "type": "object"
                },
                "network_map": {
                    "default": {},
                    "description": "ecallmgr network map",
                    "name": "network_map",
                    "type": "object"
                },
                "node_commands": {
                    "properties": {
                        "send_http": {
                            "properties": {
                                "delete_on_success": {
                                    "properties": {
                                        "default": false,
                                        "description": "ecallmgr delete on success",
                                        "name": "delete_on_success",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "node_down_grace_period": {
                    "default": 10000,
                    "description": "ecallmgr node down grace period",
                    "name": "node_down_grace_period",
                    "type": "integer"
                },
                "process_gateways": {
                    "default": false,
                    "description": "ecallmgr process gateways",
                    "name": "process_gateways",
                    "type": "boolean"
                },
                "publish_channel_reconnect": {
                    "default": false,
                    "description": "ecallmgr publish channel reconnect",
                    "name": "publish_channel_reconnect",
                    "type": "boolean"
                },
                "publish_channel_state": {
                    "default": true,
                    "description": "ecallmgr publish channel state",
                    "name": "publish_channel_state",
                    "type": "boolean"
                },
                "record_sample_rate": {
                    "default": 8000,
                    "description": "ecallmgr record sample rate",
                    "name": "record_sample_rate",
                    "type": "integer"
                },
                "record_stereo_sample_rate": {
                    "default": 16000,
                    "description": "ecallmgr record stereo sample rate",
                    "name": "record_stereo_sample_rate",
                    "type": "integer"
                },
                "record_waste_resources": {
                    "default": false,
                    "description": "ecallmgr record waste resources",
                    "name": "record_waste_resources",
                    "type": "boolean"
                },
                "recording_file_path": {
                    "default": "/tmp/",
                    "description": "ecallmgr recording file path",
                    "name": "recording_file_path",
                    "type": "string"
                },
                "redirect_via_proxy": {
                    "default": true,
                    "description": "ecallmgr redirect via proxy",
                    "name": "redirect_via_proxy",
                    "type": "boolean"
                },
                "restrict_channel_state_publisher": {
                    "default": false,
                    "description": "ecallmgr restrict channel state publisher",
                    "name": "restrict_channel_state_publisher",
                    "type": "boolean"
                },
                "should_detect_inband_dtmf": {
                    "description": "ecallmgr should detect inband dtmf",
                    "name": "should_detect_inband_dtmf",
                    "type": "boolean"
                },
                "sofia_conf": {
                    "description": "ecallmgr sofia conf",
                    "name": "sofia_conf"
                },
                "tcp_packet_type": {
                    "default": 2,
                    "description": "ecallmgr tcp packet type",
                    "name": "tcp_packet_type",
                    "type": "integer"
                },
                "text_routing_bindings": {
                    "default": [
                        "context_2"
                    ],
                    "description": "ecallmgr text routing bindings",
                    "name": "text_routing_bindings",
                    "type": "array"
                },
                "use_bypass_media_after_bridge": {
                    "default": false,
                    "description": "ecallmgr use bypass media after bridge",
                    "name": "use_bypass_media_after_bridge",
                    "type": "boolean"
                },
                "use_http_cache": {
                    "default": true,
                    "description": "ecallmgr use http cache",
                    "name": "use_http_cache",
                    "type": "boolean"
                },
                "use_shout": {
                    "default": false,
                    "description": "ecallmgr use shout",
                    "name": "use_shout",
                    "type": "boolean"
                },
                "use_vlc": {
                    "default": false,
                    "description": "ecallmgr use vlc",
                    "name": "use_vlc",
                    "type": "boolean"
                },
                "{Direction}_rate_required": {
                    "default": false,
                    "description": "ecallmgr {Direction} rate required",
                    "name": "{Direction}_rate_required",
                    "type": "boolean"
                },
                "{Direction}_rate_resp_timeout": {
                    "default": 10000,
                    "description": "ecallmgr {Direction} rate resp timeout",
                    "name": "{Direction}_rate_resp_timeout",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.fax": {
            "description": "Schema for fax system_config",
            "properties": {
                "allow_all_addresses_when_empty": {
                    "default": false,
                    "description": "fax allow all addresses when empty",
                    "name": "allow_all_addresses_when_empty",
                    "type": "boolean"
                },
                "allowed_content_types": {
                    "default": [
                        "application/pdf",
                        "image/tiff",
                        {
                            "prefix": "image"
                        },
                        {
                            "prefix": "application/vnd.openxmlformats-officedocument."
                        },
                        {
                            "prefix": "application/vnd.oasis.opendocument."
                        },
                        "application/msword",
                        "application/vnd.ms-excel",
                        "application/vnd.ms-powerpoint"
                    ],
                    "description": "fax allowed content types",
                    "name": "allowed_content_types",
                    "type": "array"
                },
                "cloud_registration_pool_interval": {
                    "default": 5000,
                    "description": "fax cloud registration pool interval",
                    "name": "cloud_registration_pool_interval",
                    "type": "integer"
                },
                "conversion_image_command": {
                    "default": "convert -density 204x98 -units PixelsPerInch -size 1728x1078 ~s ~s > /dev/null && echo -n success",
                    "description": "fax conversion image command",
                    "name": "conversion_image_command",
                    "type": "string"
                },
                "conversion_openoffice_document_command": {
                    "default": "unoconv -c ~s -f pdf --stdout ~s | /usr/bin/gs -q -r204x98 -g1728x1078 -dNOPAUSE -dBATCH -dSAFER -sDEVICE=tiffg3 -sOutputFile=~s - > /dev/null&& echo -n success",
                    "description": "fax conversion openoffice document command",
                    "name": "conversion_openoffice_document_command",
                    "type": "string"
                },
                "conversion_pdf_command": {
                    "default": "/usr/bin/gs -q -r204x98 -g1728x1078 -dNOPAUSE -dBATCH -dSAFER -sDEVICE=tiffg3 -sOutputFile=~s -- ~s > /dev/null && echo -n \"success\"",
                    "description": "fax conversion pdf command",
                    "name": "conversion_pdf_command",
                    "type": "string"
                },
                "count_pages_command": {
                    "default": "echo -n `tiffinfo ~s | grep 'Page Number' | grep -c 'P'`",
                    "description": "fax count pages command",
                    "name": "count_pages_command",
                    "type": "string"
                },
                "default_compare_field": {
                    "default": "result_cause",
                    "description": "fax default compare field",
                    "name": "default_compare_field",
                    "type": "string"
                },
                "default_fax_extension": {
                    "default": ".tiff",
                    "description": "fax default fax extension",
                    "name": "default_fax_extension",
                    "type": "string"
                },
                "default_retry_count": {
                    "default": 3,
                    "description": "fax default retry count",
                    "name": "default_retry_count",
                    "type": "integer"
                },
                "default_retry_period": {
                    "default": 300,
                    "description": "fax default retry period",
                    "name": "default_retry_period",
                    "type": "integer"
                },
                "delete_empty_faxes": {
                    "default": false,
                    "description": "fax delete empty faxes",
                    "name": "delete_empty_faxes",
                    "type": "boolean"
                },
                "denied_content_types": {
                    "default": [
                        {
                            "prefix": "image/"
                        }
                    ],
                    "description": "fax denied content types",
                    "name": "denied_content_types",
                    "type": "array"
                },
                "endpoint_timeout": {
                    "default": 40,
                    "description": "fax endpoint timeout",
                    "name": "endpoint_timeout",
                    "type": "integer"
                },
                "ensure_valid_caller_id": {
                    "default": true,
                    "description": "fax ensure valid caller id",
                    "name": "ensure_valid_caller_id",
                    "type": "boolean"
                },
                "fax_file_path": {
                    "default": "/tmp/",
                    "description": "fax fax file path",
                    "name": "fax_file_path",
                    "type": "string"
                },
                "fax_settings": {
                    "default": {
                        "override_callee_number": false,
                        "override_fax_identity": true
                    },
                    "description": "fax fax settings",
                    "name": "fax_settings",
                    "type": "object"
                },
                "file_cache_path": {
                    "default": "/tmp/",
                    "description": "fax file cache path",
                    "name": "file_cache_path",
                    "type": "string"
                },
                "ignore_early_media": {
                    "default": false,
                    "description": "fax ignore early media",
                    "name": "ignore_early_media",
                    "type": "boolean"
                },
                "image_min_size": {
                    "default": "700x10",
                    "description": "fax image min size",
                    "name": "image_min_size",
                    "type": "string"
                },
                "image_size_cmd_format": {
                    "default": "echo -n `identify -format \"%[fx:w]x%[fx:h]\" ~s`",
                    "description": "fax image size cmd format",
                    "name": "image_size_cmd_format",
                    "type": "string"
                },
                "inbound_t38_default": {
                    "default": true,
                    "description": "fax inbound t38 default",
                    "name": "inbound_t38_default",
                    "type": "string"
                },
                "max_storage_retry": {
                    "default": 5,
                    "description": "fax max storage retry",
                    "name": "max_storage_retry",
                    "type": "integer"
                },
                "openoffice_server": {
                    "default": "'socket,host=localhost,port=2002;urp;StarOffice.ComponentContext'",
                    "description": "fax openoffice server",
                    "name": "openoffice_server",
                    "type": "string"
                },
                "port": {
                    "default": 30950,
                    "description": "fax port",
                    "name": "port",
                    "type": "integer"
                },
                "report_anonymous_system_errors": {
                    "default": false,
                    "description": "fax report anonymous system errors",
                    "name": "report_anonymous_system_errors",
                    "type": "boolean"
                },
                "report_faxbox_system_errors": {
                    "default": true,
                    "description": "fax report faxbox system errors",
                    "name": "report_faxbox_system_errors",
                    "type": "boolean"
                },
                "reschedule": {
                    "default": {},
                    "description": "fax reschedule",
                    "name": "reschedule",
                    "type": "object"
                },
                "smtp_sessions": {
                    "default": 50,
                    "description": "fax smtp sessions",
                    "name": "smtp_sessions",
                    "type": "integer"
                },
                "wait_for_fax_timeout_ms": {
                    "default": 3600000,
                    "description": "fax wait for fax timeout in milliseconds",
                    "name": "wait_for_fax_timeout_ms",
                    "type": "integer"
                },
                "workers": {
                    "default": 50,
                    "description": "fax workers",
                    "name": "workers",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.frontier": {
            "description": "Schema for frontier system_config",
            "properties": {
                "rate_limits": {
                    "default": {
                        "account": {
                            "per_minute": {
                                "invites": 200,
                                "registrations": 100,
                                "total_packets": 2000
                            },
                            "per_second": {
                                "invites": 50,
                                "registrations": 20,
                                "total_packets": 100
                            }
                        },
                        "device": {
                            "per_minute": {
                                "invites": 100,
                                "registrations": 20,
                                "total_packets": 1000
                            },
                            "per_second": {
                                "invites": 5,
                                "registrations": 2,
                                "total_packets": 20
                            }
                        }
                    },
                    "description": "frontier rate limits",
                    "name": "rate_limits",
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.hangups": {
            "description": "Schema for hangups system_config",
            "properties": {
                "hangups_to_monitor": {
                    "default": [
                        "WRONG_CALL_STATE",
                        "NO_ROUTE_DESTINATION",
                        "CALL_REJECT",
                        "MANDATORY_IE_MISSING",
                        "PROGRESS_TIMEOUT",
                        "RECOVERY_ON_TIMER_EXPIRE"
                    ],
                    "description": "hangups hangups to monitor",
                    "name": "hangups_to_monitor",
                    "type": "array"
                },
                "ignore_hangup_causes": {
                    "default": [
                        "NO_ANSWER",
                        "USER_BUSY",
                        "NO_USER_RESPONSE",
                        "LOSE_RACE",
                        "ATTENDED_TRANSFER",
                        "ORIGINATOR_CANCEL",
                        "NORMAL_CLEARING",
                        "ALLOTTED_TIMEOUT"
                    ],
                    "description": "hangups ignore hangup causes",
                    "name": "ignore_hangup_causes",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.jonny5": {
            "description": "Schema for jonny5 system_config",
            "properties": {
                "default_inbound_trunks": {
                    "description": "jonny5 default inbound trunks",
                    "name": "default_inbound_trunks"
                },
                "default_twoway_trunks": {
                    "description": "jonny5 default twoway trunks",
                    "name": "default_twoway_trunks"
                },
                "default_{Key}": {
                    "description": "jonny5 default {Key}",
                    "name": "default_{Key}",
                    "type": "integer"
                },
                "flat_rate_blacklist": {
                    "default": "^\\+?1(684|264|268|242|246|441|284|345|767|809|829|849|473|671|876|664|670|787|939|869|758|784|721|868|649|340|900|8(?:[0,2,3,4,5,6,7]{2}|8[0-9]))\\d{7}$",
                    "description": "jonny5 flat rate blacklist",
                    "name": "flat_rate_blacklist",
                    "type": "string"
                },
                "flat_rate_whitelist": {
                    "default": "^\\+?1\\d{10}$",
                    "description": "jonny5 flat rate whitelist",
                    "name": "flat_rate_whitelist",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kapps_controller": {
            "description": "Schema for kapps_controller system_config",
            "properties": {
                "kapps": {
                    "default": [
                        "blackhole",
                        "callflow",
                        "cdr",
                        "conference",
                        "crossbar",
                        "doodle",
                        "ecallmgr",
                        "fax",
                        "hangups",
                        "hotornot",
                        "konami",
                        "jonny5",
                        "media_mgr",
                        "milliwatt",
                        "omnipresence",
                        "pivot",
                        "registrar",
                        "reorder",
                        "stepswitch",
                        "sysconf",
                        "teletype",
                        "trunkstore",
                        "webhooks"
                    ],
                    "description": "kapps_controller kapps",
                    "name": "kapps",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kapps_maintenance": {
            "description": "Schema for kapps_maintenance system_config",
            "properties": {
                "migrate_current_version": {
                    "default": "3.22",
                    "description": "kapps_maintenance migrate current version",
                    "name": "migrate_current_version",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kazoo.pdf": {
            "description": "Schema for kazoo.pdf system_config",
            "properties": {
                "html2pdf": {
                    "default": "/usr/bin/htmldoc --quiet --webpage -f $pdf$ $html$",
                    "description": "kazoo.pdf html2pdf",
                    "name": "html2pdf",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kazoo_couch": {
            "description": "Schema for kazoo_couch system_config",
            "properties": {
                "allow_maintenance_db_delete": {
                    "default": false,
                    "description": "kazoo_couch allow maintenance db delete",
                    "name": "allow_maintenance_db_delete",
                    "type": "boolean"
                },
                "default_chunk_size": {
                    "default": 1000,
                    "description": "kazoo_couch default chunk size",
                    "name": "default_chunk_size",
                    "type": "integer"
                },
                "max_concurrent_docs_to_archive": {
                    "default": 500,
                    "description": "kazoo_couch max concurrent docs to archive",
                    "name": "max_concurrent_docs_to_archive",
                    "type": "integer"
                },
                "use_bigcouch_direct": {
                    "default": true,
                    "description": "kazoo_couch use bigcouch direct",
                    "name": "use_bigcouch_direct",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kazoo_endpoint": {
            "description": "Schema for kazoo_endpoint system_config",
            "properties": {
                "custom_sip_interface": {
                    "description": "kazoo_endpoint custom sip interface",
                    "name": "custom_sip_interface"
                },
                "default_caller_id_name": {
                    "default": "default",
                    "description": "kazoo_endpoint default caller id name",
                    "name": "default_caller_id_name",
                    "type": "string"
                },
                "default_caller_id_number": {
                    "default": "default",
                    "description": "kazoo_endpoint default caller id number",
                    "name": "default_caller_id_number",
                    "type": "string"
                },
                "default_ignore_completed_elsewhere": {
                    "default": true,
                    "description": "kazoo_endpoint default ignore completed elsewhere",
                    "name": "default_ignore_completed_elsewhere",
                    "type": "boolean"
                },
                "restrict_to_known_types": {
                    "default": false,
                    "description": "kazoo_endpoint restrict to known types",
                    "name": "restrict_to_known_types",
                    "type": "boolean"
                },
                "should_add_diversion_header": {
                    "default": false,
                    "description": "kazoo_endpoint should add diversion header",
                    "name": "should_add_diversion_header",
                    "type": "boolean"
                },
                "sip_transport": {
                    "description": "kazoo_endpoint sip transport",
                    "name": "sip_transport"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kazoo_endpoint.mobile": {
            "description": "Schema for kazoo_endpoint.mobile system_config",
            "properties": {
                "codecs": {
                    "default": [
                        "PCMU"
                    ],
                    "description": "kazoo_endpoint.mobile codecs",
                    "name": "codecs",
                    "type": "array"
                },
                "create_sip_endpoint": {
                    "default": false,
                    "description": "kazoo_endpoint.mobile create sip endpoint",
                    "name": "create_sip_endpoint",
                    "type": "boolean"
                },
                "custom_sip_interface": {
                    "description": "kazoo_endpoint.mobile custom sip interface",
                    "name": "custom_sip_interface",
                    "type": "string"
                },
                "formatter": {
                    "default": "^\\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$",
                    "description": "kazoo_endpoint.mobile formatter",
                    "name": "formatter",
                    "type": "string"
                },
                "path": {
                    "default": "",
                    "description": "kazoo_endpoint.mobile path",
                    "name": "path",
                    "type": "string"
                },
                "prefix": {
                    "default": "",
                    "description": "kazoo_endpoint.mobile prefix",
                    "name": "prefix",
                    "type": "string"
                },
                "realm": {
                    "default": "mobile.k.zswitch.net",
                    "description": "kazoo_endpoint.mobile realm",
                    "name": "realm",
                    "type": "string"
                },
                "sms": {
                    "properties": {
                        "connections": {
                            "properties": {
                                "default": {
                                    "default": {
                                        "exchange": "sms",
                                        "options": {
                                            "passive": true
                                        },
                                        "route": "sprint",
                                        "type": "topic"
                                    }
                                },
                                "description": "kazoo_endpoint.mobile connections",
                                "name": "connections",
                                "type": "object"
                            }
                        }
                    }
                },
                "sms_interface": {
                    "default": "amqp",
                    "description": "kazoo_endpoint.mobile sms interface",
                    "name": "sms_interface",
                    "type": "string"
                },
                "suffix": {
                    "default": "",
                    "description": "kazoo_endpoint.mobile suffix",
                    "name": "suffix",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.konami": {
            "description": "Schema for konami system_config",
            "properties": {
                "event_cleanup_timeout_ms": {
                    "default": 3600000,
                    "description": "konami event cleanup timeout in milliseconds",
                    "name": "event_cleanup_timeout_ms",
                    "type": "integer"
                },
                "transfer": {
                    "properties": {
                        "default_takeback_dtmf": {
                            "properties": {
                                "default": "*1",
                                "description": "konami default takeback dtmf",
                                "name": "default_takeback_dtmf",
                                "type": "string"
                            }
                        }
                    }
                },
                "use_fast_rearm": {
                    "default": false,
                    "description": "konami use fast rearm",
                    "name": "use_fast_rearm",
                    "type": "boolean"
                },
                "webseq_enabled": {
                    "default": false,
                    "description": "konami webseq enabled",
                    "name": "webseq_enabled",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.kzt_twiml_util": {
            "description": "Schema for kzt_twiml_util system_config",
            "properties": {
                "max_length": {
                    "default": 3600,
                    "description": "kzt_twiml_util max length",
                    "name": "max_length",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.media": {
            "description": "Schema for media system_config",
            "properties": {
                "authenticated_playback": {
                    "default": false,
                    "description": "media authenticated playback",
                    "name": "authenticated_playback",
                    "type": "boolean"
                },
                "authenticated_store": {
                    "default": true,
                    "description": "media authenticated store",
                    "name": "authenticated_store",
                    "type": "boolean"
                },
                "call_recording": {
                    "properties": {
                        "extension": {
                            "properties": {
                                "default": "mp3",
                                "description": "media extension",
                                "name": "extension",
                                "type": "string"
                            }
                        }
                    }
                },
                "default_language": {
                    "description": "media default language",
                    "name": "default_language"
                },
                "fix_media_names": {
                    "default": true,
                    "description": "media fix media names",
                    "name": "fix_media_names",
                    "type": "boolean"
                },
                "max_recording_time_limit": {
                    "default": 600,
                    "description": "media max recording time limit",
                    "name": "max_recording_time_limit",
                    "type": "integer"
                },
                "normalize_destination_args": {
                    "default": "-r 8000",
                    "description": "media normalize destination args",
                    "name": "normalize_destination_args",
                    "type": "string"
                },
                "normalize_executable": {
                    "default": "sox",
                    "description": "media normalize executable",
                    "name": "normalize_executable",
                    "type": "string"
                },
                "normalize_source_args": {
                    "default": "",
                    "description": "media normalize source args",
                    "name": "normalize_source_args",
                    "type": "string"
                },
                "proxy_listeners": {
                    "default": 25,
                    "description": "media proxy listeners",
                    "name": "proxy_listeners",
                    "type": "integer"
                },
                "proxy_password": {
                    "default": "",
                    "description": "media proxy password",
                    "name": "proxy_password",
                    "type": "string"
                },
                "proxy_port": {
                    "default": 24517,
                    "description": "media proxy port",
                    "name": "proxy_port",
                    "type": "string"
                },
                "proxy_store_acls": {
                    "default": [
                        "127.0.0.0/24"
                    ],
                    "description": "media proxy store acls",
                    "name": "proxy_store_acls",
                    "type": "array"
                },
                "proxy_store_authenticate": {
                    "default": true,
                    "description": "media proxy store authenticate",
                    "name": "proxy_store_authenticate",
                    "type": "boolean"
                },
                "proxy_username": {
                    "default": "",
                    "description": "media proxy username",
                    "name": "proxy_username",
                    "type": "string"
                },
                "record_min_sec": {
                    "default": 0,
                    "description": "media record min sec",
                    "name": "record_min_sec",
                    "type": "integer"
                },
                "recorder_module": {
                    "default": "kz_media_recording",
                    "description": "media recorder module",
                    "name": "recorder_module",
                    "type": "string"
                },
                "ssl_cert": {
                    "description": "media ssl cert",
                    "name": "ssl_cert",
                    "type": "string"
                },
                "ssl_key": {
                    "description": "media ssl key",
                    "name": "ssl_key",
                    "type": "string"
                },
                "ssl_password": {
                    "default": "",
                    "description": "media ssl password",
                    "name": "ssl_password",
                    "type": "string"
                },
                "ssl_port": {
                    "default": 24518,
                    "description": "media ssl port",
                    "name": "ssl_port",
                    "type": "integer"
                },
                "store_recordings": {
                    "default": false,
                    "description": "media store recordings",
                    "name": "store_recordings",
                    "type": "boolean"
                },
                "support_account_overrides": {
                    "default": true,
                    "description": "media support account overrides",
                    "name": "support_account_overrides",
                    "type": "boolean"
                },
                "tts_cache": {
                    "default": 3600000,
                    "description": "media tts cache",
                    "name": "tts_cache",
                    "type": "integer"
                },
                "use_https": {
                    "default": false,
                    "description": "media use https",
                    "name": "use_https",
                    "type": "boolean"
                },
                "use_plaintext": {
                    "default": true,
                    "description": "media use plaintext",
                    "name": "use_plaintext",
                    "type": "boolean"
                },
                "use_ssl_proxy": {
                    "default": false,
                    "description": "media use ssl proxy",
                    "name": "use_ssl_proxy",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.metaflows": {
            "description": "Schema for metaflows system_config",
            "properties": {
                "binding_digit": {
                    "default": "*",
                    "description": "metaflows binding digit",
                    "name": "binding_digit",
                    "type": "string"
                },
                "default_metaflow": {
                    "default": {},
                    "description": "metaflows default metaflow",
                    "name": "default_metaflow",
                    "type": "object"
                },
                "digit_timeout_ms": {
                    "default": 800,
                    "description": "metaflows digit timeout in milliseconds",
                    "name": "digit_timeout_ms",
                    "type": "integer"
                },
                "listen_on": {
                    "default": "a",
                    "description": "metaflows listen on",
                    "name": "listen_on",
                    "type": "string"
                },
                "numbers": {
                    "default": {
                        "2": {
                            "data": {
                                "text": "hi"
                            },
                            "module": "say"
                        }
                    },
                    "description": "metaflows numbers",
                    "name": "numbers",
                    "type": "object"
                },
                "patterns": {
                    "default": {
                        "^2$": {
                            "data": {
                                "text": "hi"
                            },
                            "module": "say"
                        }
                    },
                    "description": "metaflows patterns",
                    "name": "patterns",
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.milliwatt": {
            "description": "Schema for milliwatt system_config",
            "properties": {
                "echo": {
                    "description": "milliwatt echo",
                    "name": "echo"
                },
                "route_win_timeout": {
                    "default": 3000,
                    "description": "milliwatt route win timeout",
                    "name": "route_win_timeout",
                    "type": "integer"
                },
                "tone": {
                    "description": "milliwatt tone",
                    "name": "tone"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.mobile_manager": {
            "description": "Schema for mobile_manager system_config",
            "properties": {
                "url": {
                    "description": "mobile_manager url",
                    "name": "url",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.modb": {
            "description": "Schema for modb system_config",
            "properties": {
                "active_modbs": {
                    "default": 6,
                    "description": "modb active modbs",
                    "name": "active_modbs",
                    "type": "integer"
                },
                "routines": {
                    "default": [],
                    "description": "modb routines",
                    "name": "routines",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify": {
            "description": "Schema for notify system_config",
            "properties": {
                "backoff_fudge_ms": {
                    "default": 5000,
                    "description": "notify backoff fudge in milliseconds",
                    "name": "backoff_fudge_ms",
                    "type": "integer"
                },
                "mime-encoding": {
                    "properties": {
                        "{ContentType}": {
                            "properties": {
                                "content_transfer_encoding": {
                                    "properties": {
                                        "description": "notify content transfer encoding",
                                        "name": "content_transfer_encoding",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "notification_app": {
                    "default": "notify",
                    "description": "notify notification app",
                    "name": "notification_app",
                    "type": "string"
                },
                "search_rep_email": {
                    "default": true,
                    "description": "notify search rep email",
                    "name": "search_rep_email",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.account_crawler": {
            "description": "Schema for notify.account_crawler system_config",
            "properties": {
                "crawl_for_first_occurrence": {
                    "default": true,
                    "description": "notify.account_crawler crawl for first occurrence",
                    "name": "crawl_for_first_occurrence",
                    "type": "boolean"
                },
                "crawl_for_low_balance": {
                    "default": true,
                    "description": "notify.account_crawler crawl for low balance",
                    "name": "crawl_for_low_balance",
                    "type": "boolean"
                },
                "cycle_delay_time": {
                    "default": 300000,
                    "description": "notify.account_crawler cycle delay time",
                    "name": "cycle_delay_time",
                    "type": "integer"
                },
                "interaccount_delay": {
                    "default": 10000,
                    "description": "notify.account_crawler interaccount delay",
                    "name": "interaccount_delay",
                    "type": "integer"
                },
                "low_balance_repeat_s": {
                    "default": 86400,
                    "description": "notify.account_crawler low balance repeat in seconds",
                    "name": "low_balance_repeat_s",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.cnam_request": {
            "description": "Schema for notify.cnam_request system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.cnam_request default to",
                    "name": "default_to",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.deregister": {
            "description": "Schema for notify.deregister system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.deregister default to",
                    "name": "default_to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.deregister html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.deregister text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.fax": {
            "description": "Schema for notify.fax system_config",
            "properties": {
                "attachment_format": {
                    "default": "pdf",
                    "description": "notify.fax attachment format",
                    "name": "attachment_format",
                    "type": "string"
                },
                "tiff_to_pdf_conversion_command": {
                    "default": "tiff2pdf -o ~s ~s &> /dev/null && echo -n \"success\"",
                    "description": "notify.fax tiff to pdf conversion command",
                    "name": "tiff_to_pdf_conversion_command",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.fax_inbound_error_to_email": {
            "description": "Schema for notify.fax_inbound_error_to_email system_config",
            "properties": {
                "default_enabled": {
                    "default": false,
                    "description": "notify.fax_inbound_error_to_email default enabled",
                    "name": "default_enabled",
                    "type": "boolean"
                },
                "default_to": {
                    "description": "notify.fax_inbound_error_to_email default to",
                    "name": "default_to"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.fax_inbound_to_email": {
            "description": "Schema for notify.fax_inbound_to_email system_config",
            "properties": {
                "default_to": {
                    "description": "notify.fax_inbound_to_email default to",
                    "name": "default_to"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.fax_outbound_error_to_email": {
            "description": "Schema for notify.fax_outbound_error_to_email system_config",
            "properties": {
                "default_enabled": {
                    "default": true,
                    "description": "notify.fax_outbound_error_to_email default enabled",
                    "name": "default_enabled",
                    "type": "boolean"
                },
                "default_to": {
                    "description": "notify.fax_outbound_error_to_email default to",
                    "name": "default_to"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.fax_outbound_to_email": {
            "description": "Schema for notify.fax_outbound_to_email system_config",
            "properties": {
                "default_to": {
                    "description": "notify.fax_outbound_to_email default to",
                    "name": "default_to"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.first_occurrence": {
            "description": "Schema for notify.first_occurrence system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.first_occurrence default to",
                    "name": "default_to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.first_occurrence html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.first_occurrence text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.low_balance": {
            "description": "Schema for notify.low_balance system_config",
            "properties": {
                "default_enabled": {
                    "default": false,
                    "description": "notify.low_balance default enabled",
                    "name": "default_enabled",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.new_account": {
            "description": "Schema for notify.new_account system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.new_account default to",
                    "name": "default_to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.new_account html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.new_account text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.password_recovery": {
            "description": "Schema for notify.password_recovery system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.password_recovery default to",
                    "name": "default_to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.password_recovery html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.password_recovery text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.port_cancel": {
            "description": "Schema for notify.port_cancel system_config",
            "properties": {
                "default_from": {
                    "description": "notify.port_cancel default from",
                    "name": "default_from",
                    "type": "string"
                },
                "default_to": {
                    "default": "",
                    "description": "notify.port_cancel default to",
                    "name": "default_to",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.port_request": {
            "description": "Schema for notify.port_request system_config",
            "properties": {
                "default_from": {
                    "description": "notify.port_request default from",
                    "name": "default_from",
                    "type": "string"
                },
                "default_to": {
                    "default": "",
                    "description": "notify.port_request default to",
                    "name": "default_to",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.port_request_admin": {
            "description": "Schema for notify.port_request_admin system_config",
            "properties": {
                "default_to": {
                    "description": "notify.port_request_admin default to",
                    "name": "default_to"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.ported": {
            "description": "Schema for notify.ported system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.ported default to",
                    "name": "default_to",
                    "type": "string"
                },
                "send_from_admin_email": {
                    "default": true,
                    "description": "notify.ported send from admin email",
                    "name": "send_from_admin_email",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.system_alert": {
            "description": "Schema for notify.system_alert system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.system_alert default to",
                    "name": "default_to",
                    "type": "string"
                },
                "enable_email_alerts": {
                    "default": true,
                    "description": "notify.system_alert enable email alerts",
                    "name": "enable_email_alerts",
                    "type": "boolean"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.system_alert html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "subscriber_url": {
                    "description": "notify.system_alert subscriber url",
                    "name": "subscriber_url",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.system_alert text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.topup": {
            "description": "Schema for notify.topup system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.topup default to",
                    "name": "default_to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.topup html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.topup text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.transaction": {
            "description": "Schema for notify.transaction system_config",
            "properties": {
                "default_to": {
                    "default": "",
                    "description": "notify.transaction default to",
                    "name": "default_to",
                    "type": "string"
                },
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.transaction html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.transaction text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.voicemail_full": {
            "description": "Schema for notify.voicemail_full system_config",
            "properties": {
                "default_enabled": {
                    "default": false,
                    "description": "notify.voicemail_full default enabled",
                    "name": "default_enabled",
                    "type": "boolean"
                },
                "default_to": {
                    "description": "notify.voicemail_full default to",
                    "name": "default_to"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.notify.voicemail_to_email": {
            "description": "Schema for notify.voicemail_to_email system_config",
            "properties": {
                "html_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.voicemail_to_email html content transfer encoding",
                    "name": "html_content_transfer_encoding",
                    "type": "string"
                },
                "text_content_transfer_encoding": {
                    "default": "7BIT",
                    "description": "notify.voicemail_to_email text content transfer encoding",
                    "name": "text_content_transfer_encoding",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager": {
            "description": "Schema for number_manager system_config",
            "properties": {
                "allowed_features": {
                    "default": [
                        "cnam",
                        "dash_e911",
                        "failover",
                        "port",
                        "prepend",
                        "vitelity_e911"
                    ],
                    "description": "number_manager allowed features",
                    "name": "allowed_features",
                    "type": "array"
                },
                "available_module_name": {
                    "default": "knm_local",
                    "description": "number_manager available module name",
                    "name": "available_module_name",
                    "type": "string"
                },
                "carrier_modules": {
                    "default": [
                        "knm_local"
                    ],
                    "description": "number_manager carrier modules",
                    "name": "carrier_modules",
                    "type": "array"
                },
                "classifiers": {
                    "default": {
                        "caribbean": {
                            "friendly_name": "Caribbean",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+?1((?:684|264|268|242|246|441|284|345|767|809|829|849|473|671|876|664|670|787|939|869|758|784|721|868|649|340)\\d{7})$"
                        },
                        "did_us": {
                            "friendly_name": "US DID",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$"
                        },
                        "emergency": {
                            "emergency": true,
                            "friendly_name": "Emergency Dispatcher",
                            "regex": "^(911)$"
                        },
                        "international": {
                            "friendly_name": "International",
                            "regex": "^(011\\d*)$|^(00\\d*)$"
                        },
                        "toll_us": {
                            "friendly_name": "US Toll",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+1(900\\d{7})$"
                        },
                        "tollfree_us": {
                            "friendly_name": "US TollFree",
                            "pretty_print": "SS(###) ### - ####",
                            "regex": "^\\+1((?:800|888|877|866|855)\\d{7})$"
                        },
                        "unknown": {
                            "friendly_name": "Unknown",
                            "regex": "^(.*)$"
                        }
                    },
                    "description": "number_manager classifiers",
                    "name": "classifiers",
                    "type": "object"
                },
                "converters": {
                    "default": [
                        "regex"
                    ],
                    "description": "number_manager converters",
                    "name": "converters",
                    "type": "array"
                },
                "crawler_timer_ms": {
                    "default": 86400000,
                    "description": "number_manager crawler timer in milliseconds",
                    "name": "crawler_timer_ms",
                    "type": "integer"
                },
                "default_force_outbound": {
                    "default": false,
                    "description": "number_manager default force outbound",
                    "name": "default_force_outbound",
                    "type": "boolean"
                },
                "deleted_expiry_d": {
                    "default": 90,
                    "description": "number_manager deleted expiry in days",
                    "name": "deleted_expiry_d",
                    "type": "integer"
                },
                "discovery_expiry_d": {
                    "default": 90,
                    "description": "number_manager discovery expiry in days",
                    "name": "discovery_expiry_d",
                    "type": "integer"
                },
                "e164_converters": {
                    "description": "number_manager e164 converters",
                    "name": "e164_converters"
                },
                "force_local_outbound": {
                    "default": true,
                    "description": "number_manager force local outbound",
                    "name": "force_local_outbound",
                    "type": "boolean"
                },
                "force_port_in_outbound": {
                    "default": true,
                    "description": "number_manager force port in outbound",
                    "name": "force_port_in_outbound",
                    "type": "boolean"
                },
                "force_port_out_outbound": {
                    "default": true,
                    "description": "number_manager force port out outbound",
                    "name": "force_port_out_outbound",
                    "type": "boolean"
                },
                "providers": {
                    "default": [
                        "cnam_notifier",
                        "port_notifier",
                        "failover",
                        "prepend"
                    ],
                    "name": "providers",
                    "type": "array"
                },
                "reconcile_regex": {
                    "default": "^\\+?1?\\d{10}$|^\\+[2-9]\\d{7,}$|^011\\d*$|^00\\d*$",
                    "description": "number_manager reconcile regex",
                    "name": "reconcile_regex",
                    "type": "string"
                },
                "released_state": {
                    "description": "number_manager released state",
                    "name": "released_state",
                    "type": "string"
                },
                "should_permanently_delete": {
                    "description": "number_manager should permanently delete",
                    "name": "should_permanently_delete",
                    "type": "boolean"
                },
                "time_between_accounts_ms": {
                    "default": 1000,
                    "description": "number_manager time between accounts in milliseconds",
                    "name": "time_between_accounts_ms",
                    "type": "integer"
                },
                "time_between_numbers_ms": {
                    "default": 1000,
                    "description": "number_manager time between numbers in milliseconds",
                    "name": "time_between_numbers_ms",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.bandwidth": {
            "description": "Schema for number_manager.bandwidth system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "number_manager.bandwidth debug",
                    "name": "debug",
                    "type": "boolean"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth enable provisioning",
                    "name": "enable_provisioning",
                    "type": "boolean"
                },
                "endpoints": {
                    "description": "number_manager.bandwidth endpoints",
                    "name": "endpoints"
                },
                "numbers_api_url": {
                    "default": "https://api.bandwidth.com/public/v2/numbers.api",
                    "description": "number_manager.bandwidth numbers api url",
                    "name": "numbers_api_url",
                    "type": "string"
                },
                "order_name_prefix": {
                    "default": "Kazoo",
                    "description": "number_manager.bandwidth order name prefix",
                    "name": "order_name_prefix",
                    "type": "string"
                },
                "sandbox_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth sandbox provisioning",
                    "name": "sandbox_provisioning",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.bandwidth2": {
            "description": "Schema for number_manager.bandwidth2 system_config",
            "properties": {
                "account_id": {
                    "default": "",
                    "description": "number_manager.bandwidth2 account id",
                    "name": "account_id",
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "number_manager.bandwidth2 debug",
                    "name": "debug",
                    "type": "boolean"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth2 enable provisioning",
                    "name": "enable_provisioning",
                    "type": "boolean"
                },
                "order_name_prefix": {
                    "default": "Kazoo",
                    "description": "number_manager.bandwidth2 order name prefix",
                    "name": "order_name_prefix",
                    "type": "string"
                },
                "sandbox_provisioning": {
                    "default": true,
                    "description": "number_manager.bandwidth2 sandbox provisioning",
                    "name": "sandbox_provisioning",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.dash_e911": {
            "description": "Schema for number_manager.dash_e911 system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "number_manager.dash_e911 debug",
                    "name": "debug",
                    "type": "boolean"
                },
                "emergency_provisioning_url": {
                    "default": "https://service.dashcs.com/dash-api/xml/emergencyprovisioning/v1",
                    "description": "number_manager.dash_e911 emergency provisioning url",
                    "name": "emergency_provisioning_url",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.locality": {
            "description": "Schema for number_manager.locality system_config",
            "properties": {
                "url": {
                    "description": "number_manager.locality url",
                    "name": "url"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.other": {
            "description": "Schema for number_manager.other system_config",
            "properties": {
                "default_country": {
                    "default": "US",
                    "description": "number_manager.other default country",
                    "name": "default_country",
                    "type": "string"
                },
                "endpoints": {
                    "description": "number_manager.other endpoints",
                    "name": "endpoints"
                },
                "phonebook_url": {
                    "description": "number_manager.other phonebook url",
                    "name": "phonebook_url"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.port_request": {
            "description": "Schema for number_manager.port_request system_config",
            "properties": {
                "crawler_delay_time_ms": {
                    "default": 60000,
                    "description": "number_manager.port_request crawler delay time in milliseconds",
                    "name": "crawler_delay_time_ms",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.simwood": {
            "description": "Schema for number_manager.simwood system_config",
            "properties": {
                "numbers_api_url": {
                    "default": "https://api.simwood.com/v3/numbers",
                    "description": "number_manager.simwood numbers api url",
                    "name": "numbers_api_url",
                    "type": "string"
                },
                "simwood_account_id": {
                    "default": "",
                    "description": "number_manager.simwood simwood account id",
                    "name": "simwood_account_id",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.vitelity": {
            "description": "Schema for number_manager.vitelity system_config",
            "properties": {
                "api_uri": {
                    "default": "http://api.vitelity.net/api.php",
                    "description": "number_manager.vitelity api uri",
                    "name": "api_uri",
                    "type": "string"
                },
                "routesip": {
                    "description": "number_manager.vitelity routesip",
                    "name": "routesip"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.number_manager.voip_innovations": {
            "description": "Schema for number_manager.voip_innovations system_config",
            "properties": {
                "debug": {
                    "default": false,
                    "description": "number_manager.voip_innovations debug",
                    "name": "debug",
                    "type": "boolean"
                },
                "enable_provisioning": {
                    "default": true,
                    "description": "number_manager.voip_innovations enable provisioning",
                    "name": "enable_provisioning",
                    "type": "boolean"
                },
                "endpoint_group": {
                    "default": "",
                    "description": "number_manager.voip_innovations endpoint group",
                    "name": "endpoint_group",
                    "type": "string"
                },
                "login": {
                    "default": "",
                    "description": "number_manager.voip_innovations login",
                    "name": "login",
                    "type": "string"
                },
                "password": {
                    "default": "",
                    "description": "number_manager.voip_innovations password",
                    "name": "password",
                    "type": "string"
                },
                "sandbox_provisioning": {
                    "default": false,
                    "description": "number_manager.voip_innovations sandbox provisioning",
                    "name": "sandbox_provisioning",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.omnipresence": {
            "description": "Schema for omnipresence system_config",
            "properties": {
                "expire_check_ms": {
                    "default": 1000,
                    "description": "omnipresence expire check in milliseconds",
                    "name": "expire_check_ms",
                    "type": "integer"
                },
                "expires_fudge_s": {
                    "default": 20,
                    "description": "omnipresence expires fudge in seconds",
                    "name": "expires_fudge_s",
                    "type": "integer"
                },
                "subscriptions_sync_enabled": {
                    "default": false,
                    "description": "omnipresence subscriptions sync enabled",
                    "name": "subscriptions_sync_enabled",
                    "type": "boolean"
                },
                "use_fast_pickup_cookies": {
                    "default": true,
                    "description": "omnipresence use fast pickup cookies",
                    "name": "use_fast_pickup_cookies",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.pivot": {
            "description": "Schema for pivot system_config",
            "properties": {
                "store_recordings": {
                    "default": false,
                    "description": "pivot store recordings",
                    "name": "store_recordings",
                    "type": "boolean"
                },
                "tts_texts_size": {
                    "default": 4000,
                    "description": "pivot tts texts size",
                    "name": "tts_texts_size",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.provisioner": {
            "description": "Schema for provisioner system_config",
            "properties": {
                "cluster_id": {
                    "description": "provisioner cluster id",
                    "name": "cluster_id",
                    "type": "string"
                },
                "feature_keys": {
                    "default": {
                        "cisco": {
                            "_": {
                                "parking": "",
                                "personal_parking": "",
                                "presence": "",
                                "speed_dial": ""
                            }
                        },
                        "polycom": {
                            "_": {
                                "parking": "automata",
                                "personal_parking": "automata",
                                "presence": "normal",
                                "speed_dial": "normal"
                            }
                        },
                        "yealink": {
                            "_": {
                                "parking": "10",
                                "personal_parking": "10",
                                "presence": "16",
                                "speed_dial": "13"
                            }
                        }
                    },
                    "description": "provisioner feature keys",
                    "name": "feature_keys",
                    "type": "object"
                },
                "provisioning_type": {
                    "description": "provisioner provisioning type",
                    "name": "provisioning_type"
                },
                "provisioning_url": {
                    "description": "provisioner provisioning url",
                    "name": "provisioning_url",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.pusher": {
            "description": "Schema for pusher system_config",
            "properties": {
                "User-Agents": {
                    "default": {},
                    "description": "pusher User-Agents",
                    "name": "User-Agents",
                    "type": "object"
                },
                "apple": {
                    "description": "pusher apple",
                    "name": "apple",
                    "type": "string"
                },
                "google": {
                    "description": "pusher google",
                    "name": "google",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.registrar": {
            "description": "Schema for registrar system_config",
            "properties": {
                "device_enabled_default": {
                    "default": true,
                    "description": "registrar device enabled default",
                    "name": "device_enabled_default",
                    "type": "boolean"
                },
                "listeners": {
                    "default": 1,
                    "description": "registrar listeners",
                    "name": "listeners",
                    "type": "integer"
                },
                "owner_enabled_default": {
                    "default": true,
                    "description": "registrar owner enabled default",
                    "name": "owner_enabled_default",
                    "type": "boolean"
                },
                "use_aggregate": {
                    "default": true,
                    "description": "registrar use aggregate",
                    "name": "use_aggregate",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.reorder": {
            "description": "Schema for reorder system_config",
            "properties": {
                "assume_inbound_e164": {
                    "description": "reorder assume inbound e164",
                    "name": "assume_inbound_e164",
                    "type": "boolean"
                },
                "known-error-code": {
                    "default": "686",
                    "description": "reorder known-error-code",
                    "name": "known-error-code",
                    "type": "string"
                },
                "known-error-message": {
                    "default": "PEBCAK",
                    "description": "reorder known-error-message",
                    "name": "known-error-message",
                    "type": "string"
                },
                "unknown-error-code": {
                    "default": "604",
                    "description": "reorder unknown-error-code",
                    "name": "unknown-error-code",
                    "type": "string"
                },
                "unknown-error-message": {
                    "default": "Nope Nope Nope",
                    "description": "reorder unknown-error-message",
                    "name": "unknown-error-message",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.servers": {
            "description": "Schema for servers system_config",
            "properties": {
                "clock_timezone": {
                    "default": "UTC",
                    "description": "servers clock timezone",
                    "name": "clock_timezone",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.services": {
            "description": "Schema for services system_config",
            "properties": {
                "default_allow_updates": {
                    "default": true,
                    "description": "services default allow updates",
                    "name": "default_allow_updates",
                    "type": "boolean"
                },
                "master_account_bookkeeper": {
                    "default": "kz_bookkeeper_local",
                    "description": "services master account bookkeeper",
                    "name": "master_account_bookkeeper",
                    "type": "string"
                },
                "modules": {
                    "description": "services modules",
                    "name": "modules"
                },
                "scan_rate": {
                    "default": 20000,
                    "description": "services scan rate",
                    "name": "scan_rate",
                    "type": "integer"
                },
                "should_save_master_audit_logs": {
                    "default": false,
                    "description": "services should save master audit logs",
                    "name": "should_save_master_audit_logs",
                    "type": "boolean"
                },
                "support_billing_id": {
                    "default": true,
                    "description": "services support billing id",
                    "name": "support_billing_id",
                    "type": "boolean"
                },
                "sync_buffer_period": {
                    "default": 600,
                    "description": "services sync buffer period",
                    "name": "sync_buffer_period",
                    "type": "integer"
                },
                "sync_services": {
                    "default": false,
                    "description": "services sync services",
                    "name": "sync_services",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.sms": {
            "description": "Schema for sms system_config",
            "properties": {
                "outbound": {
                    "properties": {
                        "options": {
                            "properties": {
                                "default": {
                                    "delivery_mode": 2,
                                    "mandatory": true
                                },
                                "description": "sms options",
                                "name": "options",
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.sms_command": {
            "description": "Schema for sms_command system_config",
            "properties": {
                "application_timeout": {
                    "default": 500000,
                    "description": "sms_command application timeout",
                    "name": "application_timeout",
                    "type": "integer"
                },
                "collect_timeout": {
                    "default": 60000,
                    "description": "sms_command collect timeout",
                    "name": "collect_timeout",
                    "type": "integer"
                },
                "message_timeout": {
                    "default": 60000,
                    "description": "sms_command message timeout",
                    "name": "message_timeout",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.smtp_client": {
            "description": "Schema for smtp_client system_config",
            "properties": {
                "auth": {
                    "default": "never",
                    "description": "smtp_client auth",
                    "name": "auth",
                    "type": "string"
                },
                "no_mx_lookups": {
                    "default": true,
                    "description": "smtp_client no mx lookups",
                    "name": "no_mx_lookups",
                    "type": "boolean"
                },
                "password": {
                    "default": "",
                    "description": "smtp_client password",
                    "name": "password",
                    "type": "string"
                },
                "port": {
                    "default": 25,
                    "description": "smtp_client port",
                    "name": "port",
                    "type": "integer"
                },
                "relay": {
                    "default": "localhost",
                    "description": "smtp_client relay",
                    "name": "relay",
                    "type": "string"
                },
                "retries": {
                    "default": 1,
                    "description": "smtp_client retries",
                    "name": "retries",
                    "type": "integer"
                },
                "tls": {
                    "description": "smtp_client tls",
                    "name": "tls"
                },
                "use_ssl": {
                    "default": false,
                    "description": "smtp_client use ssl",
                    "name": "use_ssl",
                    "type": "boolean"
                },
                "username": {
                    "default": "",
                    "description": "smtp_client username",
                    "name": "username",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.speech": {
            "description": "Schema for speech system_config",
            "properties": {
                "asr_content_types": {
                    "default": [
                        "application/mpeg",
                        "application/wav"
                    ],
                    "description": "speech asr content types",
                    "name": "asr_content_types",
                    "type": "array"
                },
                "asr_prefered_content_type": {
                    "default": "application/mpeg",
                    "description": "speech asr prefered content type",
                    "name": "asr_prefered_content_type",
                    "type": "string"
                },
                "asr_provider": {
                    "default": "",
                    "description": "speech asr provider",
                    "name": "asr_provider",
                    "type": "string"
                },
                "asr_url": {
                    "default": "http://api.ispeech.org/api/rest",
                    "description": "speech asr url",
                    "name": "asr_url",
                    "type": "string"
                },
                "temporary_storage_path": {
                    "default": "/tmp",
                    "description": "speech temporary storage path",
                    "name": "temporary_storage_path",
                    "type": "string"
                },
                "tts_api_key": {
                    "description": "speech tts api key",
                    "name": "tts_api_key",
                    "type": "string"
                },
                "tts_args_encode": {
                    "default": "multipart",
                    "description": "speech tts args encode",
                    "name": "tts_args_encode",
                    "type": "string"
                },
                "tts_default_voice": {
                    "default": "female/en-US",
                    "description": "speech tts default voice",
                    "name": "tts_default_voice",
                    "type": "string"
                },
                "tts_language": {
                    "default": "en-US",
                    "description": "speech tts language",
                    "name": "tts_language",
                    "type": "string"
                },
                "tts_provider": {
                    "default": "ispeech",
                    "description": "speech tts provider",
                    "name": "tts_provider",
                    "type": "string"
                },
                "tts_url": {
                    "default": "http://api.ispeech.org/api/json",
                    "description": "speech tts url",
                    "name": "tts_url",
                    "type": "string"
                },
                "tts_voice": {
                    "default": "male",
                    "description": "speech tts voice",
                    "name": "tts_voice",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.stepswitch": {
            "description": "Schema for stepswitch system_config",
            "properties": {
                "assume_inbound_e164": {
                    "default": false,
                    "description": "stepswitch assume inbound e164",
                    "name": "assume_inbound_e164",
                    "type": "boolean"
                },
                "cid_rules_honor_diversions": {
                    "default": false,
                    "description": "stepswitch cid rules honor diversions",
                    "name": "cid_rules_honor_diversions",
                    "type": "boolean"
                },
                "default_audio_codecs": {
                    "default": [],
                    "description": "stepswitch default audio codecs",
                    "name": "default_audio_codecs",
                    "type": "array"
                },
                "default_bypass_media": {
                    "default": false,
                    "description": "stepswitch default bypass media",
                    "name": "default_bypass_media",
                    "type": "boolean"
                },
                "default_caller_id_type": {
                    "default": "external",
                    "description": "stepswitch default caller id type",
                    "name": "default_caller_id_type",
                    "type": "string"
                },
                "default_codecs": {
                    "default": [],
                    "description": "stepswitch default codecs",
                    "name": "default_codecs",
                    "type": "array"
                },
                "default_emergency_cid_number": {
                    "description": "stepswitch default emergency cid number",
                    "name": "default_emergency_cid_number"
                },
                "default_formatters": {
                    "description": "stepswitch default formatters",
                    "name": "default_formatters"
                },
                "default_prefix": {
                    "default": "",
                    "description": "stepswitch default prefix",
                    "name": "default_prefix",
                    "type": "string"
                },
                "default_progress_timeout": {
                    "default": 8,
                    "description": "stepswitch default progress timeout",
                    "name": "default_progress_timeout",
                    "type": "integer"
                },
                "default_route": {
                    "description": "stepswitch default route",
                    "name": "default_route",
                    "type": "string"
                },
                "default_suffix": {
                    "default": "",
                    "description": "stepswitch default suffix",
                    "name": "default_suffix",
                    "type": "string"
                },
                "default_video_codecs": {
                    "default": [],
                    "description": "stepswitch default video codecs",
                    "name": "default_video_codecs",
                    "type": "array"
                },
                "default_weight": {
                    "default": 3,
                    "description": "stepswitch default weight",
                    "name": "default_weight",
                    "type": "integer"
                },
                "deny_emergency_bridge_cause": {
                    "default": "Emergency service not configured",
                    "description": "stepswitch deny emergency bridge cause",
                    "name": "deny_emergency_bridge_cause",
                    "type": "string"
                },
                "deny_emergency_bridge_code": {
                    "default": 486,
                    "description": "stepswitch deny emergency bridge code",
                    "name": "deny_emergency_bridge_code",
                    "type": "string"
                },
                "deny_emergency_bridge_media": {
                    "default": "prompt://system_media/stepswitch-emergency_not_configured/",
                    "description": "stepswitch deny emergency bridge media",
                    "name": "deny_emergency_bridge_media",
                    "type": "string"
                },
                "deny_invalid_emergency_cid": {
                    "default": false,
                    "description": "stepswitch deny invalid emergency cid",
                    "name": "deny_invalid_emergency_cid",
                    "type": "boolean"
                },
                "ensure_valid_emergency_cid": {
                    "default": false,
                    "description": "stepswitch ensure valid emergency cid",
                    "name": "ensure_valid_emergency_cid",
                    "type": "boolean"
                },
                "format_from_uri": {
                    "default": false,
                    "description": "stepswitch format from uri",
                    "name": "format_from_uri",
                    "type": "boolean"
                },
                "max_shortdial_correction": {
                    "default": 5,
                    "description": "stepswitch max shortdial correction",
                    "name": "max_shortdial_correction",
                    "type": "integer"
                },
                "min_shortdial_correction": {
                    "default": 2,
                    "description": "stepswitch min shortdial correction",
                    "name": "min_shortdial_correction",
                    "type": "integer"
                },
                "route_by": {
                    "default": "stepswitch_resources",
                    "description": "stepswitch route by",
                    "name": "route_by",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.stepswitch.cnam": {
            "description": "Schema for stepswitch.cnam system_config",
            "properties": {
                "disable_normalize": {
                    "default": false,
                    "description": "stepswitch.cnam disable normalize",
                    "name": "disable_normalize",
                    "type": "boolean"
                },
                "http_basic_auth_password": {
                    "default": "",
                    "description": "stepswitch.cnam http basic auth password",
                    "name": "http_basic_auth_password",
                    "type": "string"
                },
                "http_basic_auth_username": {
                    "default": "",
                    "description": "stepswitch.cnam http basic auth username",
                    "name": "http_basic_auth_username",
                    "type": "string"
                },
                "http_body": {
                    "default": "",
                    "description": "stepswitch.cnam http body",
                    "name": "http_body",
                    "type": "string"
                },
                "http_method": {
                    "default": "get",
                    "description": "stepswitch.cnam http method",
                    "name": "http_method",
                    "type": "string"
                },
                "http_url": {
                    "default": "https://api.opencnam.com/v2/phone/{{phone_number}}",
                    "description": "stepswitch.cnam http url",
                    "name": "http_url",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.sysconf": {
            "description": "Schema for sysconf system_config",
            "properties": {
                "acl_request_timeout_fudge_ms": {
                    "default": 100,
                    "description": "sysconf acl request timeout fudge in milliseconds",
                    "name": "acl_request_timeout_fudge_ms",
                    "type": "integer"
                },
                "acl_request_timeout_ms": {
                    "default": 2000,
                    "description": "sysconf acl request timeout in milliseconds",
                    "name": "acl_request_timeout_ms",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.tasks": {
            "description": "Schema for tasks system_config",
            "properties": {
                "send_progress_after_processed": {
                    "default": 1000,
                    "description": "tasks send progress after processed",
                    "name": "send_progress_after_processed",
                    "type": "integer"
                },
                "wait_after_row_ms": {
                    "default": 500,
                    "description": "tasks wait after row in milliseconds",
                    "name": "wait_after_row_ms",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.teletype": {
            "description": "Schema for teletype system_config",
            "properties": {
                "iterate_over_bcc": {
                    "default": true,
                    "description": "teletype iterate over bcc",
                    "name": "iterate_over_bcc",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.token_buckets": {
            "description": "Schema for token_buckets system_config",
            "properties": {
                "inactivity_timeout_s": {
                    "default": 600,
                    "description": "token_buckets inactivity timeout in seconds",
                    "name": "inactivity_timeout_s",
                    "type": "integer"
                },
                "{App}": {
                    "properties": {
                        "max_bucket_tokens": {
                            "properties": {
                                "default": 100,
                                "description": "token_buckets max bucket tokens",
                                "name": "max_bucket_tokens",
                                "type": "integer"
                            }
                        },
                        "tokens_fill_rate": {
                            "properties": {
                                "default": 10,
                                "description": "token_buckets tokens fill rate",
                                "name": "tokens_fill_rate",
                                "type": "integer"
                            }
                        },
                        "tokens_fill_time": {
                            "properties": {
                                "default": "second",
                                "description": "token_buckets tokens fill time",
                                "name": "tokens_fill_time",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.topup": {
            "description": "Schema for topup system_config",
            "properties": {
                "enable": {
                    "default": true,
                    "description": "topup enable",
                    "name": "enable",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.trunkstore": {
            "description": "Schema for trunkstore system_config",
            "properties": {
                "default_caller_id_number": {
                    "default": "default",
                    "description": "trunkstore default caller id number",
                    "name": "default_caller_id_number",
                    "type": "string"
                },
                "default_hunt_non_reconcilable": {
                    "default": false,
                    "description": "trunkstore default hunt non reconcilable",
                    "name": "default_hunt_non_reconcilable",
                    "type": "boolean"
                },
                "ensure_valid_caller_id": {
                    "default": false,
                    "description": "trunkstore ensure valid caller id",
                    "name": "ensure_valid_caller_id",
                    "type": "boolean"
                },
                "ring_ready_offnet": {
                    "default": true,
                    "description": "trunkstore ring ready offnet",
                    "name": "ring_ready_offnet",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.webhooks": {
            "description": "Schema for webhooks system_config",
            "properties": {
                "attempt_failure_count": {
                    "description": "webhooks attempt failure count",
                    "name": "attempt_failure_count"
                },
                "attempt_failure_expiry_ms": {
                    "default": 60000,
                    "description": "webhooks attempt failure expiry in milliseconds",
                    "name": "attempt_failure_expiry_ms",
                    "type": "integer"
                },
                "log_successful_attempts": {
                    "default": false,
                    "description": "webhooks log successful attempts",
                    "name": "log_successful_attempts",
                    "type": "boolean"
                },
                "object_types": {
                    "default": "default",
                    "description": "webhooks object types",
                    "name": "object_types",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "system_config.whitelabel": {
            "description": "Schema for whitelabel system_config",
            "properties": {
                "domains": {
                    "description": "whitelabel domains",
                    "name": "domains"
                }
            },
            "required": true,
            "type": "object"
        },
        "tasks": {
            "additionalProperties": true,
            "description": "Input data to go through as part of a background task",
            "name": "Task records",
            "properties": {
                "records": {
                    "description": "List the rows of input data",
                    "items": {
                        "required": true,
                        "type": "object"
                    },
                    "minItems": 1,
                    "name": "Records",
                    "required": false,
                    "type": "array"
                }
            }
        },
        "temporal_rules": {
            "description": "Schema for a temporal rules",
            "name": "Temporal Rule",
            "properties": {
                "cycle": {
                    "description": "The recurrence cycle for this rule",
                    "enum": [
                        "date",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                    ],
                    "name": "Cycle",
                    "required": true,
                    "type": "string"
                },
                "days": {
                    "description": "The recurrence days for this rule",
                    "items": {
                        "maximum": 31,
                        "minimum": 1,
                        "required": false,
                        "type": "integer"
                    },
                    "name": "Days",
                    "required": false,
                    "type": "array"
                },
                "interval": {
                    "default": 1,
                    "description": "The recurrence interval for this rule",
                    "minimum": 1,
                    "name": "Interval",
                    "required": false,
                    "type": "integer"
                },
                "month": {
                    "description": "The recurrence month for this rule",
                    "maximum": 12,
                    "minimum": 1,
                    "name": "Month",
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "A friendly name for the temporal rule",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "ordinal": {
                    "description": "The recurrence ordinal for this rule",
                    "enum": [
                        "every",
                        "first",
                        "second",
                        "third",
                        "fourth",
                        "fifth",
                        "last"
                    ],
                    "name": "Ordinal",
                    "required": false,
                    "type": "string"
                },
                "start_date": {
                    "default": 62586115200,
                    "description": "The date that any recurrence should be calculated as starting on",
                    "name": "Start Date",
                    "required": false,
                    "type": "integer"
                },
                "time_window_start": {
                    "description": "Seconds from the start of a day to stop considering this rule valid",
                    "maximum": 86400,
                    "minimum": 0,
                    "name": "Time Window Start",
                    "required": false,
                    "type": "integer"
                },
                "wdays": {
                    "description": "The recurrence weekdays for this rule",
                    "items": {
                        "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "wensday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                        ],
                        "type": "string"
                    },
                    "name": "Week Days",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "temporal_rules_sets": {
            "description": "Schema for a temporal rules sets",
            "name": "Temporal Rule Set",
            "properties": {
                "name": {
                    "description": "A friendly name for the temporal rule set",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "temporal_rules": {
                    "description": "Rules",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "minItems": 1,
                    "name": "Temporal Rules",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "token_restrictions": {
            "description": "Schema for token restrictions",
            "name": "Token restrictions",
            "properties": {
                "restrictions": {
                    "patternProperties": {
                        "^\\w+$": {
                            "description": "Name of athentication metod used when creating token. \"_\" for match any auth method",
                            "name": "Auth method",
                            "patternProperties": {
                                "^\\w+$": {
                                    "description": "User privelege level. \"_\" for match any priv level",
                                    "name": "User priv level",
                                    "patternProperties": {
                                        "^\\w+$": {
                                            "items": {
                                                "description": "Endpoint (first path token) to wich apply restrictions. \"_\" for match any endpoint",
                                                "name": "Endpoint",
                                                "properties": {
                                                    "allowed_accounts": {
                                                        "description": "Account allowed to match this item",
                                                        "items": {
                                                            "required": false,
                                                            "type": "string"
                                                        },
                                                        "name": "Allowed accounts",
                                                        "required": false,
                                                        "type": "array",
                                                        "uniqueItems": true
                                                    },
                                                    "rules": {
                                                        "description": "Rules applied to endpoint parameters",
                                                        "name": "Rules",
                                                        "patternProperties": {
                                                            "^[\\w/#*]+$": {
                                                                "items": {
                                                                    "enum": [
                                                                        "GET",
                                                                        "PUT",
                                                                        "POST",
                                                                        "PATCH",
                                                                        "DELETE",
                                                                        "_"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "name": "verbs",
                                                                "requred": false,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            }
                                                        },
                                                        "requred": false,
                                                        "type": "object"
                                                    }
                                                },
                                                "required": false,
                                                "type": "object"
                                            },
                                            "required": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": true,
                                    "type": "object"
                                }
                            },
                            "required": true,
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "trunkstore": {
            "description": "Trunkstore configuration document - this is old stuff; do not recommend building off this if possible",
            "id": "http://json-schema.org/draft-03/schema#",
            "properties": {
                "account": {
                    "description": "Information that applies to the account as a whole",
                    "properties": {
                        "auth_realm": {
                            "description": "The realm any device in the account will use to authenticate with",
                            "minLength": 1,
                            "required": true,
                            "type": "string"
                        },
                        "caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "credits": {
                            "properties": {
                                "prepay": {
                                    "required": true,
                                    "type": "number"
                                }
                            },
                            "required": true,
                            "type": "object"
                        },
                        "emergency_caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "trunks": {
                            "description": "The number of two-way trunks this account has purchased",
                            "minimum": 0,
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Trunk level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "Human-friendly name of the trunkstore account",
                    "type": "string"
                },
                "servers": {
                    "default": [],
                    "desciption": "What servers will be allowed to make/receive calls via this account",
                    "items": {
                        "properties": {
                            "DIDs": {
                                "patternProperties": {
                                    "^\\+1(\\d{10})$": {
                                        "properties": {
                                            "caller_id": {
                                                "properties": {
                                                    "cid_name": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    },
                                                    "cid_number": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failover": {
                                                "description": "Route inbound call to another destination if this server fails to handle the call",
                                                "properties": {
                                                    "e164": {
                                                        "description": "An E.164 formatted DID to dial for failover",
                                                        "type": "string"
                                                    },
                                                    "sip": {
                                                        "description": "A SIP URI (sip:user@host) to call for failover",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "force_outbound": {
                                                "default": false,
                                                "type": "boolean"
                                            },
                                            "options": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "auth": {
                                "properties": {
                                    "auth_method": {
                                        "description": "What type of auth mechanism to use",
                                        "enum": [
                                            "password"
                                        ],
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_password": {
                                        "description": "Password of the user@auth_realm",
                                        "minLength": 1,
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_user": {
                                        "description": "Username for authentication",
                                        "minLength": 1,
                                        "required": true,
                                        "type": "string"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "name": {
                                "description": "Human-friendly name of the server",
                                "minLength": 1,
                                "type": "string"
                            },
                            "options": {
                                "caller_id": {
                                    "properties": {
                                        "cid_name": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "cid_number": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delay": {
                                    "default": 0,
                                    "description": "The time, in seconds, to wait before attempting to call the server",
                                    "type": "integer"
                                },
                                "enabled": {
                                    "default": true,
                                    "description": "Is the server ready for sending and receiving calls",
                                    "type": "boolean"
                                },
                                "failover": {
                                    "description": "Route inbound call to another destination if this server fails to handle the call",
                                    "properties": {
                                        "e164": {
                                            "description": "An E.164 formatted DID to dial for failover",
                                            "type": "string"
                                        },
                                        "sip": {
                                            "description": "A SIP URI (sip:user@host) to call for failover",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "force_outbound": {
                                    "default": false,
                                    "description": "If true, will send the call over configured carriers instead of to the server (as opposed to the 'enabled' flag, which will reject the calls)",
                                    "type": "boolean"
                                },
                                "ignore_early_media": {
                                    "type": "boolean"
                                },
                                "inbound_format": {
                                    "default": "npan",
                                    "description": "Determines how the INVITE is sent to the server",
                                    "enum": [
                                        "e164",
                                        "npan",
                                        "1npan",
                                        "username"
                                    ],
                                    "type": "string"
                                },
                                "media_handling": {
                                    "default": "bypass",
                                    "description": "Determine whether the switch should be in the media path or not",
                                    "enum": [
                                        "process",
                                        "bypass"
                                    ],
                                    "type": "string"
                                },
                                "progress_timeout": {
                                    "description": "The time, in seconds, to wait for the server to progress in the call, before trying an optionally defined failover route or terminating the call",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "sip_headers": {
                                    "description": "List of arbitrary SIP headers to add to the INVITE",
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "description": "The time, in seconds, to wait for an answer from the server",
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "The type of the document (pvt_type in Crossbar docs)",
                    "enum": [
                        "sys_info"
                    ],
                    "required": true,
                    "type": "string"
                }
            }
        },
        "ubiquiti_auth": {
            "description": "Provides an auth-token via Ubiquiti's SSO",
            "name": "Unbiquit Auth",
            "properties": {
                "password": {
                    "description": "Ubiquiti SSO Password",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Password",
                    "required": true,
                    "type": "string"
                },
                "username": {
                    "description": "Ubiquiti SSO Username",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Username",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth": {
            "description": "Provides an auth-token via user credentials",
            "name": "User Auth",
            "properties": {
                "account_name": {
                    "description": "The account name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Account Name",
                    "required": false,
                    "type": "string"
                },
                "account_realm": {
                    "description": "The account realm of the user",
                    "format": "uri",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Account Realm",
                    "required": false,
                    "type": "string"
                },
                "credentials": {
                    "description": "A hash of the uses credentials",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Credentials",
                    "required": true,
                    "type": "string"
                },
                "method": {
                    "default": "md5",
                    "description": "The hash method",
                    "enum": [
                        "md5",
                        "sha"
                    ],
                    "name": "Method",
                    "required": false,
                    "type": "string"
                },
                "phone_number": {
                    "description": "A phone number assigned to the users account",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Phone Number",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth_recovery": {
            "description": "Send a reset-your-password email via user credentials",
            "name": "Password Recovery",
            "properties": {
                "account_name": {
                    "description": "The account name of the user",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "account_realm": {
                    "description": "The account realm of the user",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "phone_number": {
                    "description": "A phone number assigned to the user's account",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "ui_url": {
                    "description": "The UI's root URL",
                    "maxLength": 2000,
                    "minLength": 14,
                    "required": true,
                    "type": "string"
                },
                "username": {
                    "description": "The user's username",
                    "maxLength": 254,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth_recovery_reset": {
            "description": "Request a password reset from a trusted source",
            "name": "Password Reset",
            "properties": {
                "reset_id": {
                    "description": "The UUID that is part of the password-reset link",
                    "pattern": "^[a-fA-F0-9]{40,250}$",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "users": {
            "description": "Schema for a user",
            "name": "User",
            "properties": {
                "call_forward": {
                    "description": "The device call forward parameters",
                    "name": "Call Forwarding Parameters",
                    "properties": {
                        "direct_calls_only": {
                            "default": false,
                            "description": "Determines if the calls that are not directly sent to the device should be forwarded",
                            "name": "Direct Calls Only?",
                            "required": false,
                            "type": "boolean"
                        },
                        "enabled": {
                            "default": false,
                            "description": "Determines if the call forwarding should be used",
                            "name": "Is Enabled?",
                            "required": false,
                            "type": "boolean"
                        },
                        "failover": {
                            "default": false,
                            "description": "Enable the call-forwarding parameters if the device is offline",
                            "name": "Use if Device Offline?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "default": true,
                            "description": "The option to determine if early media from the call forwarded number should ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "keep_caller_id": {
                            "default": true,
                            "description": "Determines if the caller id is kept when the call is forwarded, if not the devices caller id is used",
                            "name": "Keep Original Caller ID?",
                            "required": false,
                            "type": "boolean"
                        },
                        "number": {
                            "description": "The number to forward calls to",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        },
                        "require_keypress": {
                            "default": true,
                            "description": "Determines if the callee is prompted to press 1 to accept the call",
                            "name": "Require Keypress?",
                            "required": false,
                            "type": "boolean"
                        },
                        "substitute": {
                            "default": true,
                            "description": "Determines if the call forwarding replaces the device",
                            "name": "Substitute Device?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Device level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The device caller ID parameters",
                    "required": false,
                    "type": "object"
                },
                "contact_list": {
                    "default": {},
                    "name": "Contect List Parameters",
                    "properties": {
                        "exclude": {
                            "description": "If set to true the device is excluded from the contact list",
                            "name": "Is Excluded?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of rules used to modify dialed numbers",
                    "name": "Dialplan",
                    "required": false,
                    "type": "object"
                },
                "directories": {
                    "description": "Provides the mappings for what directory the user is a part of (the key), and what callflow (the value) to invoke if the user is selected by the caller.",
                    "name": "Directories",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "name": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "Is do-not-disturb enabled for this user?",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "email": {
                    "description": "The email of the user",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1,
                    "name": "Email",
                    "required": false,
                    "type": "string"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the user is currently enabled",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "first_name": {
                    "description": "The first name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "First Name",
                    "required": true,
                    "type": "string"
                },
                "hotdesk": {
                    "default": {},
                    "description": "The user hotdesk parameters",
                    "name": "Hotdesk Parameters",
                    "properties": {
                        "enabled": {
                            "default": false,
                            "description": "Determines if the user has hotdesking enabled",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The users hotdesk id",
                            "maxLength": 15,
                            "name": "ID",
                            "required": false,
                            "type": "string"
                        },
                        "keep_logged_in_elsewhere": {
                            "default": false,
                            "description": "Determines if user should be able to login to mutliple phones simultaneously",
                            "name": "Keep Logged (hotdesk)",
                            "required": false,
                            "type": "boolean"
                        },
                        "pin": {
                            "description": "The users hotdesk pin number",
                            "maxLength": 15,
                            "minLength": 4,
                            "name": "Pin",
                            "required": false,
                            "type": "string"
                        },
                        "require_pin": {
                            "default": false,
                            "description": "Determines if user requires a pin to change the hotdesk state",
                            "name": "Require Pin?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "language": {
                    "description": "The language for this user",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "last_name": {
                    "description": "The last name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Last Name",
                    "required": true,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The audio media parameters",
                            "name": "Audio Options",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of audio codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "name": "Codecs",
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "enum": [
                                true,
                                false,
                                "auto"
                            ],
                            "name": "Is Media Direct?",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "warning": "The string type is deprecated, please use this as a boolean"
                        },
                        "encryption": {
                            "default": {},
                            "name": "Encryption Parameters",
                            "properties": {
                                "enforce_security": {
                                    "default": false,
                                    "name": "Is Encryption Enabled?",
                                    "required": false,
                                    "type": "boolean"
                                },
                                "methods": {
                                    "default": [],
                                    "items": {
                                        "enum": [
                                            "zrtp",
                                            "srtp"
                                        ],
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Supported Encryption Types",
                                    "required": false,
                                    "type": "array"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "description": "The option to determine if early media from the device should always be ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "progress_timeout": {
                            "description": "The progress timeout to apply to the device",
                            "name": "Progress Timeout (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "video": {
                            "default": {},
                            "description": "The video media parameters",
                            "name": "Video Options",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of video codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "H261",
                                            "H263",
                                            "H264",
                                            "VP8"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "metaflows": {
                    "$ref": "metaflows",
                    "description": "The device metaflow parameters",
                    "name": "Metaflow Parameters"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters used if not a property of the device owner",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "presence_id": {
                    "description": "Static presence ID (used instead of SIP username)",
                    "name": "Presence ID",
                    "required": false,
                    "type": "string"
                },
                "priv_level": {
                    "default": "user",
                    "description": "The privilege level of the user",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "name": "Priv Level",
                    "required": false,
                    "type": "string"
                },
                "profile": {
                    "$ref": "profile",
                    "default": {},
                    "description": "User's profile data",
                    "required": false,
                    "type": "object"
                },
                "pronounced_name": {
                    "description": "Name pronounced by user to introduce himself to conference members",
                    "name": "Pronounced name",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "require_password_update": {
                    "default": false,
                    "description": "UI flag that the user should update their password.",
                    "name": "Require Password Update",
                    "required": false,
                    "type": "boolean"
                },
                "ringtones": {
                    "default": {},
                    "name": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "name": "External",
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "name": "Internal",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "timezone": {
                    "description": "User's timezone",
                    "name": "Timezone",
                    "required": false,
                    "type": "string"
                },
                "username": {
                    "description": "The GUI login username - alpha-numeric, dashes, at symbol, periods, plusses, and underscores allowed",
                    "maxLength": 256,
                    "minLength": 1,
                    "name": "Username",
                    "pattern": "^([+@.\\w_-]+)$",
                    "required": false,
                    "type": "string"
                },
                "verified": {
                    "default": false,
                    "description": "Determines if the user has been verified",
                    "name": "Verified",
                    "required": false,
                    "type": "boolean"
                },
                "vm_to_email_enabled": {
                    "default": true,
                    "description": "Determines if the user would like voicemails emailed to them",
                    "name": "VM To Emain Enabled",
                    "type": "boolean"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "$ref": "notify.callback"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "vmboxes": {
            "description": "Schema for a voicemail box",
            "name": "Voicemail Box",
            "properties": {
                "check_if_owner": {
                    "default": true,
                    "description": "Determines if when the user calls their own voicemail they should be prompted to sign in",
                    "name": "Check if Owner?",
                    "required": false,
                    "type": "boolean"
                },
                "delete_after_notify": {
                    "default": false,
                    "description": "Delete the voicemail after the notification has been sent",
                    "name": "Delete after Notify?",
                    "required": false,
                    "type": "boolean",
                    "warning": "Voicemail is not stored in the database if this option is selected"
                },
                "is_setup": {
                    "default": false,
                    "description": "Determines if the user has completed the initial configuration",
                    "name": "Is Setup?",
                    "required": false,
                    "type": "boolean"
                },
                "mailbox": {
                    "description": "The voicemail box number",
                    "maxLength": 30,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The media (prompt) parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "unavailable": {
                            "description": "The ID of a media object that should be used as the unavailable greeting",
                            "maxLength": 32,
                            "minLength": 32,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the voicemail box",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "not_configurable": {
                    "default": false,
                    "description": "Determines if the user can configure this voicemail.",
                    "name": "Is configurable?",
                    "required": false,
                    "type": "boolean"
                },
                "notify": {
                    "properties": {
                        "callback": {
                            "$ref": "notify.callback"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "notify_email_addresses": {
                    "default": [],
                    "description": "List of email addresses to send notifications to (in addition to owner's email, if any)",
                    "items": {
                        "format": "email",
                        "type": "string"
                    },
                    "name": "Email Addresses",
                    "required": false,
                    "type": "array"
                },
                "owner_id": {
                    "description": "The ID of the user object that 'owns' the voicemail box",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                },
                "pin": {
                    "description": "The pin number for the voicemail box",
                    "maxLength": 15,
                    "minLength": 4,
                    "name": "Pin",
                    "required": false,
                    "type": "string"
                },
                "require_pin": {
                    "default": false,
                    "description": "Determines if a pin is required to check the voicemail from the users devices",
                    "name": "Require Pin?",
                    "required": false,
                    "type": "boolean"
                },
                "save_after_notify": {
                    "default": false,
                    "description": "Save the voicemail after the notification has been sent",
                    "name": "Save after Notify?",
                    "required": false,
                    "type": "boolean",
                    "warning": "This setting will override delete_after_notify"
                },
                "skip_greeting": {
                    "default": false,
                    "description": "Determines if the greeting should be skipped",
                    "name": "Skip Greeting?",
                    "required": false,
                    "type": "boolean"
                },
                "skip_instructions": {
                    "default": false,
                    "description": "Determines if the instructions after the greeting and prior to composing a message should be played",
                    "name": "Skip Instructions?",
                    "required": false,
                    "type": "boolean"
                },
                "timezone": {
                    "description": "The default timezone",
                    "maxLength": 32,
                    "minLength": 5,
                    "name": "Timezone",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "webhook_attempts": {
            "description": "Log of an attempt to send a webhook to a third-party server",
            "name": "Webhook Attempt",
            "properties": {
                "client_error": {
                    "description": "Kazoo-side error string, if any",
                    "type": "string"
                },
                "hook_id": {
                    "description": "Id of the hook attempted",
                    "name": "Hook Id",
                    "required": true,
                    "type": "string"
                },
                "reason": {
                    "description": "short reason for the failure",
                    "type": "string"
                },
                "response_body": {
                    "description": "HTTP response body received, if any",
                    "type": "string"
                },
                "response_code": {
                    "description": "HTTP response code received, if any",
                    "type": "string"
                },
                "result": {
                    "description": "Whether the attempt succeeded or not",
                    "enum": [
                        "success",
                        "failure"
                    ],
                    "required": true,
                    "type": "string"
                },
                "retries_left": {
                    "description": "How many retries were left after this attempt",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "webhooks": {
            "description": "Web Hooks are subscriptions to allowed events that, when the event occurs, the event data is sent to the uri set in the Web Hook document.",
            "name": "Webhook",
            "properties": {
                "custom_data": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "These properties will be added to the event and will overwrite existing values.",
                    "name": "Custom Data",
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Is the webhook enabled and running",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "hook": {
                    "description": "The trigger event for a request being made to 'callback_uri'.",
                    "required": true,
                    "type": "string"
                },
                "http_verb": {
                    "default": "post",
                    "description": "What HTTP method to use when contacting the server",
                    "enum": [
                        "get",
                        "post"
                    ],
                    "name": "Method",
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the webhook",
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "retries": {
                    "default": 2,
                    "description": "Retry the request this many times (if it fails)",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "uri": {
                    "description": "The 3rd party URI to call out to an event",
                    "format": "uri",
                    "name": "URI",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "whitelabels": {
            "description": "Whitelabel settings",
            "name": "Whitelabel",
            "properties": {
                "company_name": {
                    "description": "The company name to display to users",
                    "name": "Company Name",
                    "required": false,
                    "type": "string"
                },
                "domain": {
                    "description": "This is the whitelabeled domain that users will be entering to reach the UI",
                    "format": "uri",
                    "name": "Domain",
                    "required": false,
                    "type": "string"
                },
                "fake_api_url": {
                    "description": "This is a whitelabeled API URL, primarily used by the developer application",
                    "format": "uri",
                    "name": "API URL",
                    "required": false,
                    "type": "string"
                },
                "hide_credits": {
                    "default": false,
                    "description": "When checkef this hides the credits",
                    "name": "Hide Credits?",
                    "required": false,
                    "type": "boolean"
                },
                "hide_powered": {
                    "default": false,
                    "description": "When checked this hides the powered by 2600hz on the bottom right",
                    "name": "Hide Powered?",
                    "required": false,
                    "type": "boolean"
                },
                "hide_registration": {
                    "default": false,
                    "description": "When checked this hides the ability to register for a new account",
                    "name": "Hide Registration?",
                    "required": false,
                    "type": "boolean"
                },
                "inbound_trunks_price": {
                    "description": "The price to show for inbound trunks, this is currently only for display purposes",
                    "name": "Inbound Trunk Price",
                    "required": false,
                    "type": "string"
                },
                "nav": {
                    "description": "Properties related to navigation in the UI",
                    "name": "Navigation Parameters",
                    "properties": {
                        "help": {
                            "description": "The URL to use when the help link is clicked",
                            "format": "uri",
                            "name": "Help URL",
                            "required": false,
                            "type": "string"
                        },
                        "learn_more": {
                            "description": "The URL to use when the 'Learn More!' link is clicked",
                            "format": "uri",
                            "name": "Learn More URL",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "outbound_trunks_price": {
                    "description": "The price to show for outbound trunks, this is currently only for display purposes",
                    "name": "Outbound Trunk Price",
                    "required": false,
                    "type": "string"
                },
                "port": {
                    "description": "Parameters releated to whitelabeling port requests",
                    "name": "Port Paramaters",
                    "properties": {
                        "features": {
                            "description": "The URL to use when the features link is clicked",
                            "format": "uri",
                            "name": "Features URL",
                            "required": false,
                            "type": "string"
                        },
                        "loa": {
                            "description": "The URL to use when the LOA link is clicked",
                            "format": "uri",
                            "name": "LOA URL",
                            "required": false,
                            "type": "string"
                        },
                        "resporg": {
                            "description": "The URL to use when the resporg link is clicked",
                            "format": "uri",
                            "name": "Resporg URL",
                            "required": false,
                            "type": "string"
                        },
                        "support_email": {
                            "description": "The support email address to display to the user",
                            "format": "email",
                            "name": "Support Email",
                            "required": false,
                            "type": "string"
                        },
                        "terms": {
                            "description": "The URL to use when the terms and conditions link is clicked",
                            "format": "uri",
                            "name": "Terms URL",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "twoway_trunks_price": {
                    "description": "The price to show for twoway trunks, this is currently only for display purposes",
                    "name": "Twoway Trunk Price",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        }
    },
    "externalDocs": {
        "description": "Kazoo documentation's Git repository",
        "url": "https://github.com/2600hz/kazoo/tree/master/applications/crossbar/doc"
    },
    "host": "localhost:8000",
    "info": {
        "description": "The Crossbar APIs",
        "license": {
            "name": "Mozilla Public License 1.1"
        },
        "title": "Crossbar",
        "version": "v2"
    },
    "paths": {
        "/about": {
            "get": {}
        },
        "/accounts": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/access_lists": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/acls": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/agents": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/agents/stats": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/agents/status": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/agents/status/{ID}": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/agents/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/agents/{ID}/queue_status": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/agents/{ID}/status": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/alerts": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/alerts/{ID}": {
            "delete": {},
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/allotments": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/allotments/consumed": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/api_key": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/apps_link/authorize": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/apps_store": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/apps_store/blacklist": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/apps_store/{ID}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/apps_store/{ID}/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/apps_store/{ID}/{ID}/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/blacklists": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/blacklists/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/addresses": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/addresses/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/cards": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/cards/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/credits": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/customer": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/transactions": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/braintree/transactions/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/bulk": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/call_inspector": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/call_inspector/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/callflows": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/callflows/{CALLFLOW_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/cccps": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/cccps/{ID}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/cdrs": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/cdrs/interaction": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/cdrs/legs/{INTERACTION_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/cdrs/{CDR_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/channels": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/channels/{UUID}": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/children": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/clicktocall": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/clicktocall/{C2C_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/clicktocall/{C2C_ID}/connect": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/clicktocall/{C2C_ID}/history": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/comments": {
            "delete": {},
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/comments/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/conferences": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/conferences/{CONFERENCE_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/conferences/{CONFERENCE_ID}/participants": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/conferences/{CONFERENCE_ID}/participants/{PARTICIPANT_ID}": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/configs/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/connectivity": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/connectivity/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/contact_list": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/descendants": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/devices": {
            "get": {
                "description": "Summary listing of devices for the account",
                "responses": {
                    "200": {
                        "description": "A listing of devices created for the account"
                    }
                }
            },
            "put": {
                "description": "Create a new device",
                "parameters": {
                    "in": "body",
                    "name": "devices",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/devices"
                    }
                },
                "responses": {
                    "201": {
                        "description": "The newly created device object"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/status": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}": {
            "delete": {
                "description": "Remove the device from the account",
                "responses": {
                    "200": {
                        "description": "The removed device object"
                    }
                }
            },
            "get": {
                "description": "Get the device details",
                "responses": {
                    "200": {
                        "description": "The device object, in full"
                    }
                }
            },
            "patch": {},
            "post": {
                "description": "Edit the device object",
                "parameters": {
                    "in": "body",
                    "name": "devices",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/devices"
                    }
                },
                "responses": {
                    "200": {
                        "description": "The edited device object, in full"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}/quickcall/{NUMBER}": {
            "get": {
                "description": "Execute quickcall to {NUMBER}",
                "responses": {
                    "200": {
                        "description": "The call initialization details"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}/sync": {
            "post": {
                "description": "Reset the device by sending a check-sync SIP NOTIFY",
                "responses": {
                    "202": {
                        "description": "Notice that the check-sync has been sent"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/dialplans": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/directories": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/directories/{DIRECTORY_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/faxboxes": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/faxboxes/{BOX_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/inbox": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/inbox/{FAX_ID}": {
            "delete": {},
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/inbox/{FAX_ID}/attachment": {
            "delete": {},
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/incoming": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/incoming/{FAX_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/outbox": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/outbox/{FAX_ID}": {
            "delete": {},
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/outbox/{FAX_ID}/attachment": {
            "delete": {},
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/outgoing": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/outgoing/{FAXJOB_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/smtplog": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/faxes/smtplog/{ATTEMPT_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/freeswitch": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/global_provisioner_templates": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/global_provisioner_templates/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/global_provisioner_templates/{ID}/image": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/groups": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/groups/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/hotdesks": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/ips": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/ips/assigned": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/ips/hosts": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/ips/zones": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/ips/{IP}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/killio/call": {
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/ledgers": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/ledgers/credit": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/ledgers/debit": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/ledgers/{LEDGER_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/ledgers/{LEDGER_ID}/{_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/limits": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/lists": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST_ID}/entries": {
            "delete": {},
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST}/entries/{ENTRY_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST}/entries/{ENTRY_ID}/photo": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/lists/{LIST}/entries/{ENTRY_ID}/vcard": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/local_provisioner_templates": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/local_provisioner_templates/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/local_provisioner_templates/{ID}/image": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/media": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/media/languages": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/media/languages/{LANGUAGE}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/media/prompts": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/media/prompts/{PROMPT_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/media/{MEDIA_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/media/{MEDIA_ID}/raw": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/menus": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/menus/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/metaflows": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/move": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/notifications": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/notifications/customer_update/message": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/notifications/smtplog": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/notifications/smtplog/{_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/notifications/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/notifications/{ID}/preview": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/onboard": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/parents": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/parked_calls": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/check": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/classifiers": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/classifiers/{PHONENUMBER}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/collection": {
            "delete": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/collection/activate": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/fix": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/locality": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/prefix": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}/activate": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}/identify": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}/reserve": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/pivot/debug": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/pivot/debug/{UUID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/canceled": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/completed": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/pending": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/rejected": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/scheduled": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/submitted": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/attachments": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/attachments/{ATTACHMENT_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/canceled": {
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/completed": {
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/loa": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/pending": {
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/rejected": {
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/scheduled": {
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/submitted": {
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/presence": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/presence/report-{REPORT_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/presence/{EXTENSION}": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/queues": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/queues/eavesdrop": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/queues/stats": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/queues/{Q_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/queues/{Q_ID}/eavesdrop": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/queues/{Q_ID}/roster": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/rate_limits": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/recordings": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/recordings/{RECORDING_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/recordings/{RECORDING_ID}/attachment": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/registrations": {
            "delete": {},
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/registrations/count": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/registrations/{ID}": {
            "delete": {}
        },
        "/accounts/{ACCOUNT_ID}/reseller": {
            "delete": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/name": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/name/{SELECTORNAME}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/name/{SELECTORNAME}/resource/{RESOURCE_ID}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/resource": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/resource/{RESOURCE_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_selectors/resource/{RESOURCE_ID}/name/{SELECTORNAME}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_templates": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resource_templates/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/resources": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resources/collection": {
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resources/jobs": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/resources/jobs/{JOB_ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/resources/{RESOURCE_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/search": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/search/multi": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans/available/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans/current": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans/override": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans/reconciliation": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans/synchronization": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/service_plans/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/services": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/services/audit": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/services/plan": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/siblings": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/signup": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/signup/{ID}": {
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/skels": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/skels/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/sms": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/sms/{_ID}": {
            "delete": {},
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/tasks": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/tasks/{TASK_ID}": {
            "delete": {},
            "get": {},
            "patch": {}
        },
        "/accounts/{ACCOUNT_ID}/tasks/{TASK_ID}/input": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/tasks/{TASK_ID}/output": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/templates": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/templates/{ID}": {
            "delete": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules_sets": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/temporal_rules_sets/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/token_restrictions": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/transactions": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/transactions/credit": {
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/transactions/current_balance": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/transactions/debit": {
            "delete": {}
        },
        "/accounts/{ACCOUNT_ID}/transactions/monthly_recurring": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/transactions/subscriptions": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/tree": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/users": {
            "get": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}/photo": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}/quickcall/{NUMBER}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/users/{USER_ID}/vcard": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/vmboxes": {
            "get": {
                "description": "Summary listing of voicemail boxes for the account",
                "responses": {
                    "200": {
                        "description": "A listing of voicemail boxes for the account"
                    }
                }
            },
            "put": {
                "description": "Create a new voicemail box",
                "parameters": {
                    "in": "body",
                    "name": "vmboxes",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/vmboxes"
                    }
                },
                "responses": {
                    "201": {
                        "description": "The newly created voicemail box"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}": {
            "delete": {
                "description": "Deletes the voicemail box from the account"
            },
            "get": {
                "description": "Details of the voicemail box",
                "responses": {
                    "200": {
                        "description": "A voicemail box document"
                    }
                }
            },
            "patch": {
                "description": "Patch an existing voicemail box",
                "responses": {
                    "200": {
                        "description": "The updated voicemail box"
                    }
                }
            },
            "post": {
                "description": "Edit an existing voicemail box",
                "parameters": {
                    "in": "body",
                    "name": "vmboxes",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/vmboxes"
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated voicemail box"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages": {
            "delete": {
                "description": "Remove all or a list of messages from a voicemail box",
                "responses": {
                    "200": {
                        "description": "Listing of messages, if any are left"
                    }
                }
            },
            "get": {
                "description": "Listing of messages contained in the voicemail box",
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            },
            "post": {
                "description": "Change a list message",
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages/raw": {
            "post": {
                "description": "Fetch raw aduio of a list message id",
                "responses": {
                    "200": {
                        "description": "ZIP file containing the raw audio of voicemail messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages/{MSG_ID}": {
            "delete": {
                "description": "Remove the message from the voicemail box",
                "responses": {
                    "200": {
                        "description": "The removed message object"
                    }
                }
            },
            "get": {
                "description": "Get a specific message object",
                "responses": {
                    "200": {
                        "description": "The message object"
                    }
                }
            },
            "post": {
                "description": "Change a message",
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages/{MSG_ID}/raw": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/webhooks": {
            "get": {
                "description": "Summary listing of webhooks for the account",
                "responses": {
                    "200": {
                        "description": "A listing of webhooks created for the account"
                    }
                }
            },
            "patch": {
                "description": "Re-enable the collection of webhooks",
                "responses": {
                    "200": {
                        "description": "Result of reenabling hooks"
                    }
                }
            },
            "put": {
                "description": "Create a new webhook",
                "parameters": {
                    "in": "body",
                    "name": "webhooks",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/webhooks"
                    }
                },
                "responses": {
                    "201": {
                        "description": "The newly created webhook object"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks/attempts": {
            "get": {
                "description": "List the attempts Kazoo has made to the external servers",
                "responses": {
                    "200": {
                        "description": "List of objects representing webhook attempts made"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks/{WEBHOOK_ID}": {
            "delete": {
                "description": "Remove the webhook from the account",
                "responses": {
                    "200": {
                        "description": "The removed webhook object"
                    }
                }
            },
            "get": {
                "description": "Get the webhook details",
                "responses": {
                    "200": {
                        "description": "The webhook object, in full"
                    }
                }
            },
            "patch": {
                "description": "Patch the webhook object",
                "responses": {
                    "200": {
                        "description": "The patched webhook object, in full"
                    }
                }
            },
            "post": {
                "description": "Edit the webhook object",
                "parameters": {
                    "in": "body",
                    "name": "webhooks",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/webhooks"
                    }
                },
                "responses": {
                    "200": {
                        "description": "The edited webhook object, in full"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/webhooks/{WEBHOOK_ID}/attempts": {
            "get": {
                "description": "List the attempts Kazoo has made to the external servers for this webhook",
                "responses": {
                    "200": {
                        "description": "List of objects representing webhook attempts made for this webhook"
                    }
                }
            }
        },
        "/accounts/{ACCOUNT_ID}/websockets": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/websockets/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/domains": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/icon": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/logo": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/welcome": {
            "get": {},
            "post": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{ID}": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{ID}/icon": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{ID}/logo": {
            "get": {}
        },
        "/accounts/{ACCOUNT_ID}/whitelabel/{ID}/welcome": {
            "get": {}
        },
        "/api_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "api_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/api_auth"
                    }
                }
            }
        },
        "/google_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "google_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/google_auth"
                    }
                }
            }
        },
        "/ip_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "ip_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ip_auth"
                    }
                }
            }
        },
        "/rates": {
            "get": {
                "description": "Listing of available rate docs",
                "responses": {
                    "200": {
                        "description": "A list of available rate docs"
                    }
                }
            },
            "post": {},
            "put": {}
        },
        "/rates/number/{PHONENUMBER}": {
            "get": {}
        },
        "/rates/{RATE_ID}": {
            "delete": {
                "description": "Delete the rate doc",
                "responses": {
                    "200": {
                        "description": "The now-deleted rate doc"
                    }
                }
            },
            "get": {
                "description": "Get the rate doc",
                "responses": {
                    "200": {
                        "description": "The rate doc"
                    }
                }
            },
            "patch": {},
            "post": {}
        },
        "/schemas": {
            "get": {
                "description": "Listing of installed schemas available",
                "responses": {
                    "200": {
                        "description": "A list of schemas installed"
                    }
                }
            }
        },
        "/schemas/{SCHEMADOC}": {
            "get": {
                "description": "Get the JSON schema definition",
                "responses": {
                    "200": {
                        "description": "The schema definition"
                    }
                }
            }
        },
        "/schemas/{SCHEMADOC}/validation": {
            "put": {
                "description": "Perform a test validation",
                "responses": {
                    "200": {
                        "description": "The results of the validation"
                    }
                }
            }
        },
        "/shared_auth": {
            "get": {},
            "put": {}
        },
        "/sup/{MODULE}": {
            "get": {}
        },
        "/sup/{MODULE}/{FUNCTION}": {
            "get": {}
        },
        "/sup/{MODULE}/{FUNCTION}/{ARGS}": {
            "get": {}
        },
        "/system_configs": {
            "get": {},
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "system_configs",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/system_configs"
                    }
                }
            }
        },
        "/system_configs/{_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/system_configs/{_ID}/{NODE}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/token_auth": {
            "delete": {},
            "get": {}
        },
        "/ubiquiti_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "ubiquiti_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ubiquiti_auth"
                    }
                }
            }
        },
        "/user_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "user_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/user_auth"
                    }
                }
            }
        },
        "/user_auth/recovery": {
            "post": {},
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "user_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/user_auth"
                    }
                }
            }
        },
        "/user_auth/{AUTHTOKEN}": {
            "get": {}
        }
    },
    "produces": [
        "application/json"
    ],
    "swagger": "2.0"
}
