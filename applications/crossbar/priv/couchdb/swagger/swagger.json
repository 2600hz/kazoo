{
    "definitions": {
        "access_lists": {
            "additionalProperties": true,
            "description": "Access Control List entries for device or account",
            "name": "ACL Entry",
            "properties": {
                "cidrs": {
                    "description": "Classless Inter-Domain Routing IP notation for use on the access lists",
                    "items": {
                        "description": "CIDR IP to use on access lists",
                        "type": "string"
                    },
                    "name": "CIDR",
                    "required": true,
                    "type": "array"
                },
                "order": {
                    "description": "Allow-Deny or Deny-Allow?",
                    "enum": [
                        "allow,deny",
                        "deny,allow"
                    ],
                    "name": "order",
                    "required": true,
                    "type": "string"
                },
                "user_agent": {
                    "description": "RegExp to match valid user agent strings",
                    "name": "User-Agent",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "account_rate_limits": {
            "additionalProperties": true,
            "description": "describe limits for SIP requests",
            "name": "Rate limits",
            "properties": {
                "account": {
                    "$ref": "device_rate_limits"
                },
                "device": {
                    "$ref": "device_rate_limits"
                }
            },
            "required": true,
            "type": "object"
        },
        "accounts": {
            "description": "Accounts represent tenants or customers on the system. Each account represents an individual dataset or sandbox that only one tenant can access. The data set is architecturally independent from other tenants.",
            "name": "Account",
            "properties": {
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Account level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The account default caller ID parameters",
                    "name": "Default Caller ID",
                    "required": false,
                    "type": "object"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of default rules used to modify dialed numbers",
                    "name": "Default Dialplan",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "name": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "The default value for do-not-disturb",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the account is currently enabled",
                    "name": "Is Enabled?",
                    "required": false,
                    "type": "boolean"
                },
                "language": {
                    "default": "en-us",
                    "description": "The language for this account",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "metaflows": {
                    "$ref": "metaflows"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The default music on hold parameters",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the default music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the account",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "org": {
                    "description": "Full legal name of the organization",
                    "name": "Organizational name",
                    "required": false,
                    "type": "string"
                },
                "preflow": {
                    "additionalProperties": false,
                    "default": {},
                    "description": "Each property provides functionality that can be applied to calls using the callflow application",
                    "name": "Preflows",
                    "properties": {
                        "always": {
                            "description": "The ID of a callflow to always execute prior to processing the callflow with numbers/patterns matching the request",
                            "name": "Callflow ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "realm": {
                    "description": "The realm of the account, ie: 'account1.2600hz.com'",
                    "format": "uri",
                    "maxLength": 253,
                    "minLength": 4,
                    "name": "Realm",
                    "pattern": "^([.\\w_-]+)$",
                    "required": false,
                    "type": "string"
                },
                "ringtones": {
                    "default": {},
                    "name": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "name": "External",
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "name": "Internal",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "timezone": {
                    "default": "America/Los_Angeles",
                    "description": "The default timezone",
                    "maxLength": 32,
                    "minLength": 5,
                    "name": "Default Timezone",
                    "required": false,
                    "type": "string"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "$ref": "notify.callback"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "acls": {
            "additionalProperties": false,
            "description": "Access Control List entries",
            "name": "ACL Entry",
            "properties": {
                "cidr": {
                    "description": "Classless Inter-Domain Routing IP notation for use on the ACL",
                    "name": "CIDR",
                    "required": true,
                    "type": "string"
                },
                "description": {
                    "description": "Will be added as a comment for quick identification later",
                    "maxLen": 30,
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "network-list-name": {
                    "description": "The trusted list should represent anything that can issue calls without authorization.  The authoritative list should indicate inter-network routing equipment (SBC, etc).",
                    "enum": [
                        "authoritative",
                        "trusted"
                    ],
                    "name": "ACL List",
                    "required": true,
                    "type": "string"
                },
                "type": {
                    "default": "allow",
                    "description": "Allow or deny this CIDR",
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "name": "Type",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "allotments": {
            "description": "",
            "name": "Allotments",
            "patternProperties": {
                "^\\w+$": {
                    "properties": {
                        "amount": {
                            "minimum": 0,
                            "name": "Amount",
                            "required": true,
                            "type": "integer"
                        },
                        "cycle": {
                            "enum": [
                                "minutely",
                                "hourly",
                                "daily",
                                "weekly",
                                "monthly"
                            ],
                            "name": "Cycle",
                            "required": true,
                            "type": "string"
                        },
                        "group_consume": {
                            "items": {
                                "type": "string"
                            },
                            "name": "Group consuming",
                            "requred": false,
                            "type": "array"
                        },
                        "increment": {
                            "minimym": 1,
                            "name": "Increment",
                            "requred": false,
                            "type": "integer"
                        },
                        "minimum": {
                            "minimym": 0,
                            "name": "Increment",
                            "requred": false,
                            "type": "integer"
                        },
                        "no_consume_time": {
                            "minimym": 0,
                            "name": "No consume time",
                            "requred": false,
                            "type": "integer"
                        }
                    }
                },
                "description": "Allotment object.",
                "name": "Allotment object",
                "required": false,
                "type": "object"
            },
            "required": true,
            "type": "object"
        },
        "api_auth": {
            "additionalProperties": false,
            "description": "Provides an auth-token via an Account API key",
            "name": "API Auth",
            "properties": {
                "api_key": {
                    "description": "The Accounts API key",
                    "maxLength": 64,
                    "minLength": 64,
                    "name": "API Key",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "app": {
            "additionalProperties": false,
            "description": "Appstore applications",
            "name": "Application",
            "properties": {
                "api_url": {
                    "description": "Application api url",
                    "format": "uri",
                    "name": "Api url",
                    "required": true,
                    "type": "string"
                },
                "author": {
                    "description": "Application author",
                    "maxLength": 64,
                    "minLength": 2,
                    "name": "Author",
                    "required": true,
                    "type": "string"
                },
                "i18n": {
                    "description": "Application source url",
                    "name": "i18n",
                    "patternProperties": {
                        "[a-z]{2}\\-[A-Z]{2}": {
                            "properties": {
                                "description": {
                                    "minLength": 3,
                                    "name": "Description",
                                    "required": true,
                                    "type": "string"
                                },
                                "extended_description": {
                                    "name": "Extended Description",
                                    "required": false,
                                    "type": "string"
                                },
                                "features": {
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Features",
                                    "required": false,
                                    "type": "array"
                                },
                                "label": {
                                    "maxLength": 64,
                                    "minLength": 3,
                                    "name": "Label",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "required": true,
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "icon": {
                    "description": "Application icon",
                    "name": "Icon",
                    "required": true,
                    "type": "string"
                },
                "license": {
                    "description": "Application license",
                    "name": "License",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Application name",
                    "maxLength": 64,
                    "minLength": 3,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "price": {
                    "description": "Application price",
                    "minimum": 0,
                    "name": "Price",
                    "required": true,
                    "type": "integer"
                },
                "screenshots": {
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Screenshots",
                    "required": false,
                    "type": "array"
                },
                "source_url": {
                    "description": "Application source url",
                    "format": "uri",
                    "name": "Source Url",
                    "required": false,
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Tags",
                    "required": false,
                    "type": "array"
                },
                "urls": {
                    "name": "Urls",
                    "required": false,
                    "type": "object"
                },
                "version": {
                    "description": "Application version",
                    "name": "Version",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "audit_logs": {
            "description": "Audit log of what caused a billing event to occur",
            "name": "Audit Log",
            "properties": {
                "audit": {
                    "description": "Contains the accounts involved in the billable event (initial account and resellers)",
                    "patternProperties": {
                        "^[0-9a-zA-Z]{32}$": {
                            "description": "The account's quantity changes for the billing event",
                            "properties": {
                                "account_name": {
                                    "description": "The name of the account (for historical purposes)",
                                    "required": true,
                                    "type": "string"
                                },
                                "account_quantities": {
                                    "description": "The account's quantities as a result of the billing event",
                                    "type": "object"
                                },
                                "cascade_quantities": {
                                    "description": "The account's cascaded quantities as a result of the billing event",
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "authenticating_user": {
                    "description": "Information about the requestor who caused the billing event",
                    "properties": {
                        "account_id": {
                            "required": true,
                            "type": "string"
                        },
                        "account_name": {
                            "required": true,
                            "type": "string"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "user_id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tree": {
                    "description": "The account's tree (including the account), ordered from ancestor to account",
                    "items": {
                        "type": "string"
                    },
                    "required": true,
                    "type": "array"
                }
            },
            "required": false,
            "type": "object"
        },
        "blacklists": {
            "description": "Schema for a blacklists",
            "name": "Blacklists",
            "properties": {
                "name": {
                    "description": "A friendly name for the temporal rule set",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "numbers": {
                    "default": {},
                    "description": "Map of caller id number to block",
                    "properties": {},
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "bookkeepers": {
            "description": "The bookkeeper modules provided by Kazoo",
            "name": "Bookkeepers",
            "properties": {
                "braintree": {
                    "type": "object"
                },
                "local": {
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "call_waiting": {
            "description": "Parameters for server-side call waiting",
            "name": "Call waiting",
            "properties": {
                "enabled": {
                    "description": "Determines if server side call waiting is enabled/disabled",
                    "name": "Is Enabled?",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": false,
            "type": "object"
        },
        "caller_id": {
            "description": "Defines caller ID settings based on the type of call being made",
            "name": "Caller ID",
            "properties": {
                "emergency": {
                    "description": "The caller ID used when a resource is flagged as 'emergency'",
                    "name": "Emergency",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "external": {
                    "description": "The default caller ID used when dialing external numbers",
                    "name": "External",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "internal": {
                    "description": "The default caller ID used when dialing internal extensions",
                    "name": "Internal",
                    "properties": {
                        "name": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The caller id name for the object type",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "callflows": {
            "description": "Call flows describe steps to take in order to process a phone call. They are trees of information related to a phone call such as \"answer, play file, record file\" etc. that are logically grouped together and ordered.",
            "name": "Callflow",
            "properties": {
                "featurecode": {
                    "description": "When the callflow is used as a featurecode this object tracks the intended match of the pattern and name of the feature",
                    "name": "Feature Code Parameters",
                    "properties": {
                        "name": {
                            "maxLength": 128,
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "maxLength": 30,
                            "minLength": 1,
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "flow": {
                    "description": "A callflow node defines a module to execute, data to provide to that module, and one or more children to branch to",
                    "name": "Callflow",
                    "properties": {
                        "children": {
                            "default": {},
                            "description": "Children callflows",
                            "name": "Children Callflows",
                            "required": false,
                            "type": "object"
                        },
                        "data": {
                            "default": {},
                            "description": "The data/arguments of the callflow module",
                            "name": "Module Data",
                            "required": true,
                            "type": "object"
                        },
                        "module": {
                            "description": "The name of the callflow module to excute at this node",
                            "maxLength": 64,
                            "minLength": 1,
                            "name": "Module Name",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "metaflow": {
                    "$ref": "metaflows",
                    "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)"
                },
                "numbers": {
                    "default": [],
                    "description": "A list of static numbers that the callflow should execute for",
                    "items": {
                        "maxLength": 36,
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "name": "Numbers",
                    "required": false,
                    "type": "array"
                },
                "patterns": {
                    "default": [],
                    "description": "A list of regular expressions that the callflow should execute for, with optional capture groups",
                    "items": {
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "name": "Patterns",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.collect_dtmf": {
            "description": "Validator for the Collect DTMF callflow element",
            "properties": {
                "collection_name": {
                    "description": "Store collected DTMF in a named key",
                    "name": "Collection Name",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "How long, in milliseconds, to wait for the next DTMF",
                    "minimum": 1,
                    "name": "Interdigit Timeout",
                    "required": false,
                    "type": "integer"
                },
                "max_digits": {
                    "default": 1,
                    "description": "How many DTMFs to collect from the caller",
                    "minimum": 1,
                    "name": "Max DTMFs",
                    "required": false,
                    "type": "integer"
                },
                "terminator": {
                    "default": "#",
                    "description": "What DTMF will terminate collection before the timeout occurs",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "0",
                        "#",
                        "*"
                    ],
                    "name": "Terminator",
                    "required": false,
                    "type": "string"
                },
                "terminators": {
                    "description": "What DTMFs will terminate collection before the timeout occurs",
                    "items": {
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "0",
                            "#",
                            "*"
                        ],
                        "type": "string"
                    },
                    "name": "Terminators",
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "timeout": {
                    "default": 5000,
                    "description": "How long, in milliseconds, to wait for the first DTMF",
                    "minimum": 1,
                    "name": "Timeout",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.conference": {
            "description": "Validator for the Conference callflow element",
            "properties": {
                "config": {
                    "$schema": "conferences.json",
                    "description": "Build an ad-hoc conference using the conferences JSON schema",
                    "name": "Ad-Hoc Config",
                    "required": false,
                    "type": "object"
                },
                "id": {
                    "description": "Kazoo ID of the conference",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Conference ID",
                    "required": false,
                    "type": "string"
                },
                "moderator": {
                    "default": false,
                    "description": "Is the caller entering the conference as a moderator",
                    "name": "Moderator",
                    "required": false,
                    "type": "boolean"
                },
                "play_entry_tone": {
                    "default": true,
                    "description": "Should the Entry Tone be played",
                    "name": "Play Entry Tone",
                    "required": false,
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "play_exit_tone": {
                    "default": true,
                    "description": "Should the Exit Tone be played",
                    "name": "Play Exit Tone",
                    "required": false,
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "welcome_prompt": {
                    "description": "Describes how the caller is greeted on entering a conference",
                    "name": "Welcome Prompt",
                    "properties": {
                        "media_id": {
                            "description": "Media to play, either Kazoo media ID or URL",
                            "name": "Media",
                            "required": true,
                            "type": "string"
                        },
                        "play": {
                            "default": true,
                            "description": "Should the Welcome Prompt be played",
                            "name": "Play Welcome Prompt",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.language": {
            "description": "Validator for the Language callflow element",
            "properties": {
                "language": {
                    "description": "The language to default to for the rest of the call",
                    "name": "Language",
                    "pattern": "^[A-Za-z]{2}(-[A-Za-z]{2})?$",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.lookupcidname": {
            "description": "Validator for the Lookup callflow element",
            "properties": {
                "lists": {
                    "description": "Array of list ids",
                    "items": {
                        "type": "string"
                    },
                    "name": "Array of list ids",
                    "required": "true",
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.manual_presence": {
            "description": "Validator for the Manual Presence callflow action",
            "properties": {
                "presence_id": {
                    "description": "The Presence ID to send a presence notification about",
                    "name": "Presence ID",
                    "required": true,
                    "type": "string"
                },
                "status": {
                    "default": "idle",
                    "description": "The status to update to",
                    "enum": [
                        "idle",
                        "ringing",
                        "busy"
                    ],
                    "name": "Presence Status",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.nomorobo": {
            "description": "Validator for the NoMoRobo callflow action",
            "properties": {
                "password": {
                    "description": "Password to the NoMoRobo service",
                    "maxLength": 1000,
                    "minLength": 1,
                    "name": "NoMoRobo Password",
                    "required": false,
                    "type": "string"
                },
                "username": {
                    "description": "Username to the NoMoRobo service",
                    "maxLength": 1000,
                    "minLength": 1,
                    "name": "NoMoRobo Username",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.pivot": {
            "description": "Validator for the Pivot callflow element",
            "properties": {
                "cdr_url": {
                    "description": "Optional URL to send the CDR to at the end of the call",
                    "name": "CDR URL",
                    "required": false,
                    "type": "string"
                },
                "debug": {
                    "default": false,
                    "description": "Store debug logs related to processing this Pivot call",
                    "name": "Debug?",
                    "required": false,
                    "type": "boolean"
                },
                "method": {
                    "default": "get",
                    "description": "What HTTP verb to send the request(s) with",
                    "enum": [
                        "get",
                        "post",
                        "GET",
                        "POST"
                    ],
                    "name": "Method",
                    "required": false,
                    "type": "string"
                },
                "req_format": {
                    "default": "kazoo",
                    "description": "What format of Pivot will the your server respond with",
                    "enum": [
                        "kazoo",
                        "twiml"
                    ],
                    "name": "Payload Type",
                    "required": false,
                    "type": "string"
                },
                "voice_url": {
                    "description": "What URL to request the initial Pivot callflow",
                    "name": "Script URL",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.record_call": {
            "description": "Validator for the Record Call callflow action",
            "properties": {
                "action": {
                    "default": "start",
                    "description": "Whether to start or stop the recording",
                    "enum": [
                        "start",
                        "stop"
                    ],
                    "name": "Action",
                    "required": false,
                    "type": "string"
                },
                "format": {
                    "description": "What format to store the recording on disk",
                    "enum": [
                        "mp3",
                        "wav"
                    ],
                    "name": "Format",
                    "type": "string"
                },
                "record_min_sec": {
                    "description": "The minimum length, in seconds, the recording must be to be considered successful. Otherwise it is deleted",
                    "name": "Minimum recording seconds",
                    "required": false,
                    "type": "integer"
                },
                "record_on_answer": {
                    "default": false,
                    "description": "Whether to delay the recording until the channel is answered",
                    "name": "Record On Answer",
                    "required": false,
                    "type": "boolean"
                },
                "record_on_bridge": {
                    "default": false,
                    "description": "Whether to delay the recording until the channel is bridged",
                    "name": "Record On Bridge",
                    "required": false,
                    "type": "boolean"
                },
                "record_sample_rate": {
                    "description": "What sampling rate to use on the recording",
                    "name": "Sample Rate",
                    "required": false,
                    "type": "integer"
                },
                "time_limit": {
                    "default": 3600,
                    "description": "Time limit, in seconds, for the recording",
                    "maximum": 3600,
                    "minimum": 5,
                    "name": "Time Limit",
                    "required": false,
                    "type": "integer"
                },
                "url": {
                    "description": "The URL to use when sending the recording for storage",
                    "name": "URL",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.record_caller": {
            "description": "Record the caller's audio stream",
            "properties": {
                "format": {
                    "description": "What format to store the recording on disk",
                    "enum": [
                        "mp3",
                        "wav"
                    ],
                    "name": "Format",
                    "type": "string"
                },
                "method": {
                    "description": "What HTTP method to use when sending the recording",
                    "enum": [
                        "put",
                        "post"
                    ],
                    "type": "string"
                },
                "time_limit": {
                    "default": 3600,
                    "description": "Time limit, in seconds, for the recording",
                    "maximum": 3600,
                    "minimum": 5,
                    "name": "Time Limit",
                    "required": false,
                    "type": "integer"
                },
                "url": {
                    "description": "The URL to use when sending the recording for storage",
                    "name": "URL",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.response": {
            "description": "Validator for the Response callflow action",
            "properties": {
                "code": {
                    "description": "The SIP Hangup code to respond with",
                    "name": "Code",
                    "required": true,
                    "type": "integer"
                },
                "media": {
                    "description": "Optional media file to play before responding with the hangup code/cause",
                    "name": "Media",
                    "required": false,
                    "type": "string"
                },
                "message": {
                    "description": "The SIP Hangup cause to respond with",
                    "name": "Message",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.ring_group": {
            "description": "Validator for the Ring Group callflow element",
            "properties": {
                "endpoints": {
                    "description": "Endpoint IDs (devices, users, etc) included in the ring group",
                    "items": {
                        "description": "ID of the endpoint (device, user, etc)",
                        "properties": {
                            "delay": {
                                "default": 0,
                                "description": "How long to delay ringing the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "endpoint_type": {
                                "description": "The type (device, user, etc) of endpoint",
                                "enum": [
                                    "device",
                                    "user",
                                    "group"
                                ],
                                "required": true,
                                "type": "string"
                            },
                            "id": {
                                "description": "The ID of the endpoint",
                                "maxLength": 128,
                                "minLength": 1,
                                "required": true,
                                "type": "string"
                            },
                            "timeout": {
                                "default": 20,
                                "description": "How long to ring the endpoint, in seconds",
                                "required": false,
                                "type": "integer"
                            },
                            "weight": {
                                "description": "Weight of endpoint, different usage in various strategies",
                                "maximum": 100,
                                "minimum": 1,
                                "required": false,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "ignore_forward": {
                    "default": true,
                    "description": "Whether to ring forwarded endpoints",
                    "required": false,
                    "type": "boolean"
                },
                "repeats": {
                    "description": "How many times to retry the ring group",
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                },
                "ringback": {
                    "description": "Ringback to use",
                    "required": false,
                    "type": "string"
                },
                "strategy": {
                    "default": "simultaneous",
                    "description": "How to ring the members of the group",
                    "enum": [
                        "simultaneous",
                        "single",
                        "weighted_random"
                    ],
                    "required": false,
                    "type": "string"
                },
                "timeout": {
                    "default": 20,
                    "description": "How long to ring the ring group before continuing, in seconds",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.send_dtmf": {
            "description": "Validator for the Send DTMF callflow action",
            "properties": {
                "digits": {
                    "description": "String of DTMF tones to send",
                    "name": "Digits",
                    "required": true,
                    "type": "string"
                },
                "duration_ms": {
                    "description": "How long, in milliseconds, to send each DTMF",
                    "name": "Duration(ms)",
                    "required": false,
                    "type": [
                        "string",
                        "integer"
                    ]
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.tts": {
            "description": "Validator for the TTS (Text-to-speech) callflow action",
            "properties": {
                "engine": {
                    "description": "What TTS engine to use",
                    "enum": [
                        "flite",
                        "ispeech"
                    ],
                    "name": "Engine",
                    "required": false,
                    "type": "string"
                },
                "language": {
                    "default": "en",
                    "description": "The language of the speaker",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "text": {
                    "description": "The text to speak",
                    "maxLength": 1000,
                    "minLength": 1,
                    "name": "Text To Speak",
                    "required": true,
                    "type": "string"
                },
                "voice": {
                    "default": "female",
                    "description": "What voice to use when speaking the text",
                    "name": "Voice of speaker",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "callflows.voicemail": {
            "description": "Validator for the Voicemail callflow element",
            "properties": {
                "action": {
                    "default": "compose",
                    "description": "Whether to check voicemail box or compose a new voicemail message",
                    "enum": [
                        "check",
                        "compose"
                    ],
                    "name": "Action",
                    "required": false,
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the voicemail box",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "ID",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "default": 2000,
                    "description": "The amount of time (in milliseconds) to wait for the caller to press the next digit after pressing a digit",
                    "name": "Interdigit Timeout",
                    "required": false,
                    "type": "integer"
                },
                "max_message_length": {
                    "default": 500,
                    "description": "Max length of the message that caller can leave in voicemail box",
                    "name": "Max Message Lenght",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "cccps": {
            "description": "Calling cards callback platform user's info",
            "id": "http://json-schema.org/draft-03/schema#",
            "properties": {
                "active": {
                    "default": false,
                    "description": "Show's whether CID/PIN active",
                    "type": "boolean"
                },
                "cid": {
                    "description": "CID to authorize",
                    "required": false,
                    "type": "string"
                },
                "outbound_cid": {
                    "description": "CID you would like to call out with",
                    "required": false,
                    "type": "string"
                },
                "pin": {
                    "description": "PIN to authorize",
                    "required": false,
                    "type": "string"
                },
                "user_id": {
                    "description": "The ID of the user object that 'owns' cid/pin",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                }
            }
        },
        "cdrs": {
            "additionalProperties": false,
            "description": "Call Detail Records",
            "name": "CDR",
            "properties": {
                "app_name": {
                    "description": "The Kazoo application that issued the CDR",
                    "name": "Application Name",
                    "required": false,
                    "type": "string"
                },
                "app_version": {
                    "description": "The internal Kazoo version number of the application that issued the CDR",
                    "name": "Application Version",
                    "required": false,
                    "type": "string"
                },
                "billing_seconds": {
                    "description": "The number of seconds the call leg can be billed for (typically from when the call leg is answered",
                    "name": "Billing (seconds)",
                    "required": false,
                    "type": "string"
                },
                "call_direction": {
                    "description": "Direction of the call, relative to the media switch",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "name": "Direction",
                    "required": false,
                    "type": "string"
                },
                "call_id": {
                    "description": "Unique identifier of the call leg",
                    "name": "Call ID",
                    "required": true,
                    "type": "string"
                },
                "callee_id_name": {
                    "description": "The indicated name of the callee",
                    "name": "Callee ID Name",
                    "required": false,
                    "type": "string"
                },
                "callee_id_number": {
                    "description": "The indicated number of the callee",
                    "name": "Callee ID Number",
                    "required": false,
                    "type": "string"
                },
                "caller_id_name": {
                    "description": "The indicated name of the caller",
                    "name": "Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "caller_id_number": {
                    "description": "The indicated number of the caller",
                    "name": "Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "custom_channel_vars": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "Kazoo-specific key/value pairs set on the channel",
                    "name": "CCVs",
                    "required": false,
                    "type": "object"
                },
                "custom_sip_headers": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "A property list of SIP headers beging with the prefix 'X-'",
                    "name": "Custom SIP Headers",
                    "required": false,
                    "type": "object"
                },
                "digits_dialed": {
                    "description": "All the DTMF tones detected on this leg of the call",
                    "name": "Digits Dialed",
                    "required": false,
                    "type": "string"
                },
                "disposition": {
                    "description": "Who sent the SIP BYE message",
                    "name": "Hangup Disposition",
                    "required": false,
                    "type": "string"
                },
                "duration_seconds": {
                    "description": "The duration of the call leg, in seconds",
                    "name": "Duration (seconds)",
                    "required": false,
                    "type": "string"
                },
                "fax_bad_rows": {
                    "required": false,
                    "type": "string"
                },
                "fax_ecm_used": {
                    "required": false,
                    "type": "string"
                },
                "fax_result_code": {
                    "required": false,
                    "type": "string"
                },
                "fax_result_text": {
                    "required": false,
                    "type": "string"
                },
                "fax_success": {
                    "required": false,
                    "type": "string"
                },
                "fax_total_pages": {
                    "required": false,
                    "type": "string"
                },
                "fax_transfer_rate": {
                    "required": false,
                    "type": "string"
                },
                "fax_transferred_pages": {
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "Built by Kazoo, depending on direction, to represent the From user",
                    "name": "From",
                    "required": false,
                    "type": "string"
                },
                "from_uri": {
                    "description": "The From SIP URI",
                    "name": "SIP From",
                    "required": false,
                    "type": "string"
                },
                "hangup_cause": {
                    "description": "The reason for the call leg's termination",
                    "name": "Hangup Cause",
                    "required": false,
                    "type": "string"
                },
                "hangup_code": {
                    "description": "The SIP hangup code, if available",
                    "name": "Hangup Code",
                    "required": false,
                    "type": "string"
                },
                "local_sdp": {
                    "description": "The SDP negotiated by the local agent",
                    "name": "Local SDP",
                    "required": false,
                    "type": "string"
                },
                "media_server": {
                    "description": "The hostname of the media server that processed the call",
                    "name": "Media Server",
                    "required": false,
                    "type": "string"
                },
                "node": {
                    "description": "The ecallmgr which issued the CDR",
                    "name": "Erlang Node",
                    "required": false,
                    "type": "string"
                },
                "other_leg_call_id": {
                    "description": "If this leg was bridged, the call-id of the opposite leg",
                    "name": "Other Leg Call ID",
                    "required": false,
                    "type": "string"
                },
                "other_leg_caller_id_name": {
                    "description": "Caller ID name of the bridged leg",
                    "name": "Other Leg Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "other_leg_caller_id_number": {
                    "description": "Caller ID number of the bridged leg",
                    "name": "Other Leg Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "other_leg_destination_number": {
                    "description": "Dialed number of the other leg",
                    "name": "Other Leg Destination",
                    "required": false,
                    "type": "string"
                },
                "other_leg_direction": {
                    "description": "direction of the other leg, relative to the media server",
                    "name": "Other Leg Direction",
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "ID used in NOTIFY SIP messages",
                    "name": "Presence ID",
                    "required": false,
                    "type": "string"
                },
                "remote_sdp": {
                    "description": "The SDP negotiated by the remote agent",
                    "name": "Remote SDP",
                    "required": false,
                    "type": "string"
                },
                "request": {
                    "description": "Built by Kazoo this is the processed request URI",
                    "name": "Request",
                    "required": false,
                    "type": "string"
                },
                "ringing_seconds": {
                    "description": "How many seconds the leg was ringing (pre-answer)",
                    "name": "Ringing (seconds)",
                    "required": false,
                    "type": "string"
                },
                "timestamp": {
                    "description": "UTC timestamp, in gregorian seconds, of when the CDR was generated",
                    "name": "Timestamp (Gregorian seconds)",
                    "required": false,
                    "type": "string"
                },
                "to": {
                    "description": "Built by Kazoo, depending on direction, to represent the To user",
                    "name": "To",
                    "required": false,
                    "type": "string"
                },
                "to_uri": {
                    "description": "The To SIP URI",
                    "name": "SIP To",
                    "required": false,
                    "type": "string"
                },
                "user_agent": {
                    "description": "User agent header from SIP packet",
                    "name": "SIP User Agent",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "clicktocall": {
            "description": "Click-to-call allows you to create URLs that can be POSTed to with a phone number or SIP URI and create a phone call from the provided contact information to a destination you have pre-determined.",
            "name": "Click-to-Call",
            "properties": {
                "auth_required": {
                    "default": true,
                    "description": "Determines if this click to call requires valid auth-tokens when invoked",
                    "name": "Is Auth Required?",
                    "required": false,
                    "type": "boolean"
                },
                "caller_id_number": {
                    "description": "Explicitly set caller id number",
                    "name": "Keep Original Caller ID?",
                    "required": false,
                    "type": "string"
                },
                "dial_first": {
                    "description": "Determinates what will be dialed first: extension or contact",
                    "enum": [
                        "extension",
                        "contact"
                    ],
                    "name": "Dial first",
                    "required": false,
                    "type": "string"
                },
                "extension": {
                    "description": "The extension to connect to when the click to call is invoked",
                    "name": "Extension Number",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the click to call",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "outbound_callee_id_name": {
                    "description": "Callee ID Name of the device calling out to the contact number",
                    "name": "Outbound Callee ID Name",
                    "required": false,
                    "type": "string"
                },
                "outbound_callee_id_number": {
                    "description": "Callee ID Number of the device calling out to the contact number",
                    "name": "Outbound Callee ID Number",
                    "required": false,
                    "type": "string"
                },
                "throttle": {
                    "description": "The rate that this click to call can be invoked",
                    "name": "Rate Limit",
                    "required": false,
                    "type": "integer"
                },
                "whitelist": {
                    "description": "A list of regular expressions that the click to call can dial to",
                    "items": {
                        "minLength": 1,
                        "required": false,
                        "type": "string"
                    },
                    "name": "Allowed Numbers",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "conferences": {
            "description": "Schema for conferences",
            "name": "Conference",
            "properties": {
                "conference_numbers": {
                    "default": [],
                    "description": "Defines conference numbers that can be used by members or moderators",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "General Call In Numbers",
                    "required": false,
                    "type": "array",
                    "uniqueItems": true
                },
                "focus": {
                    "description": "This is a read-only property indicating the media server hosting the conference",
                    "name": "Focus",
                    "required": false,
                    "type": "string"
                },
                "member": {
                    "default": {},
                    "description": "Defines the discovery properties for a member",
                    "name": "Member Call In",
                    "properties": {
                        "join_deaf": {
                            "default": false,
                            "description": "Determines if a member will join deaf",
                            "name": "Join Deaf?",
                            "required": false,
                            "type": "boolean"
                        },
                        "join_muted": {
                            "default": true,
                            "description": "Determines if a member will join muted",
                            "name": "Join Muted?",
                            "required": false,
                            "type": "boolean"
                        },
                        "numbers": {
                            "default": [],
                            "description": "Defines the conference number(s) for members",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "minItems": 0,
                            "name": "Call In Numbers",
                            "required": false,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "pins": {
                            "default": [],
                            "description": "Defines the pin number(s) for members",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Pin Numbers",
                            "required": false,
                            "type": "array"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "moderator": {
                    "default": {},
                    "description": "Defines the discovery properties for a moderator",
                    "name": "Moderator Call In",
                    "properties": {
                        "join_deaf": {
                            "default": false,
                            "description": "Determines if a moderator will join deaf",
                            "name": "Join Deaf?",
                            "required": false,
                            "type": "boolean"
                        },
                        "join_muted": {
                            "default": false,
                            "description": "Determines if a moderator will join muted",
                            "name": "Join Muted?",
                            "required": false,
                            "type": "boolean"
                        },
                        "numbers": {
                            "default": [],
                            "description": "Defines the conference number(s) for moderators",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Call In Numbers",
                            "required": false,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "pins": {
                            "default": [],
                            "description": "Defines the pin number(s) for moderators",
                            "items": {
                                "required": false,
                                "type": "string"
                            },
                            "name": "Pin Numbers",
                            "required": false,
                            "type": "array"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the conference",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "owner_id": {
                    "description": "The user ID who manages this conference",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                },
                "play_name": {
                    "default": false,
                    "description": "Do we need to announce new conference members?",
                    "name": "Play name",
                    "required": false,
                    "type": "boolean"
                },
                "profile": {
                    "description": "The XML profile name used to configure the conference",
                    "name": "Profile",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "connectivity": {
            "description": "Trunkstore configuration document - this is old stuff; do not recommend building off this if possible",
            "id": "http://json-schema.org/draft-03/schema#",
            "properties": {
                "account": {
                    "description": "Information that applies to the account as a whole",
                    "properties": {
                        "auth_realm": {
                            "description": "The realm any device in the account will use to authenticate with",
                            "minLength": 1,
                            "type": "string"
                        },
                        "caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "emergency_caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "trunks": {
                            "description": "The number of two-way trunks this account has purchased",
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "name": {
                    "description": "Human-friendly name of the trunkstore account",
                    "type": "string"
                },
                "servers": {
                    "default": [],
                    "desciption": "What servers will be allowed to make/receive calls via this account",
                    "items": {
                        "properties": {
                            "DIDs": {
                                "patternProperties": {
                                    "^\\+?\\d*$": {
                                        "properties": {
                                            "caller_id": {
                                                "properties": {
                                                    "cid_name": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    },
                                                    "cid_number": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failover": {
                                                "description": "Route inbound call to another destination if this server fails to handle the call",
                                                "properties": {
                                                    "e164": {
                                                        "description": "An E.164 formatted DID to dial for failover",
                                                        "type": "string"
                                                    },
                                                    "sip": {
                                                        "description": "A SIP URI (sip:user@host) to call for failover",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "force_outbound": {
                                                "default": false,
                                                "type": "boolean"
                                            },
                                            "options": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "auth": {
                                "properties": {
                                    "auth_method": {
                                        "default": "password",
                                        "description": "What type of auth mechanism to use",
                                        "enum": [
                                            "password",
                                            "Password",
                                            "IP",
                                            "ip"
                                        ],
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_password": {
                                        "description": "Password of the user@auth_realm",
                                        "minLength": 1,
                                        "required": false,
                                        "type": "string"
                                    },
                                    "auth_user": {
                                        "description": "Username for authentication",
                                        "minLength": 1,
                                        "required": false,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "description": "IP address for this device",
                                        "name": "IP (sip)",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "port": {
                                        "description": "Port to send SIP traffic for the remote device",
                                        "name": "Port (sip)",
                                        "required": false,
                                        "type": "integer"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "name": {
                                "description": "Human-friendly name of the server",
                                "minLength": 1,
                                "type": "string"
                            },
                            "options": {
                                "caller_id": {
                                    "properties": {
                                        "cid_name": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "cid_number": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delay": {
                                    "default": 0,
                                    "description": "The time, in seconds, to wait before attempting to call the server",
                                    "type": "integer"
                                },
                                "enabled": {
                                    "default": true,
                                    "description": "Is the server ready for sending and receiving calls",
                                    "type": "boolean"
                                },
                                "failover": {
                                    "description": "Route inbound call to another destination if this server fails to handle the call",
                                    "properties": {
                                        "e164": {
                                            "description": "An E.164 formatted DID to dial for failover",
                                            "type": "string"
                                        },
                                        "sip": {
                                            "description": "A SIP URI (sip:user@host) to call for failover",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "force_outbound": {
                                    "default": false,
                                    "description": "If true, will send the call over configured carriers instead of to the server (as opposed to the 'enabled' flag, which will reject the calls)",
                                    "type": "boolean"
                                },
                                "ignore_early_media": {
                                    "type": "boolean"
                                },
                                "inbound_format": {
                                    "default": "npan",
                                    "description": "Determines how the INVITE is sent to the server",
                                    "enum": [
                                        "e164",
                                        "npan",
                                        "1npan",
                                        "username"
                                    ],
                                    "type": "string"
                                },
                                "ip": {
                                    "description": "IP address for this device",
                                    "name": "IP (sip)",
                                    "required": false,
                                    "type": "string"
                                },
                                "media_handling": {
                                    "default": "bypass",
                                    "description": "Determine whether the switch should be in the media path or not",
                                    "enum": [
                                        "process",
                                        "bypass"
                                    ],
                                    "type": "string"
                                },
                                "port": {
                                    "description": "Port to send SIP traffic for the remote device",
                                    "name": "Port (sip)",
                                    "required": false,
                                    "type": "integer"
                                },
                                "progress_timeout": {
                                    "description": "The time, in seconds, to wait for the server to progress in the call, before trying an optionally defined failover route or terminating the call",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "sip_headers": {
                                    "description": "List of arbitrary SIP headers to add to the INVITE",
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "description": "The time, in seconds, to wait for an answer from the server",
                                    "type": "integer"
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            }
        },
        "device_rate_limits": {
            "additionalProperties": true,
            "description": "describe limits for SIP requests",
            "name": "Rate limits",
            "properties": {
                "per_minute": {
                    "additionalProperties": false,
                    "description": "The limits to apply by a minute",
                    "name": "Per minute",
                    "properties": {
                        "invites": {
                            "description": "Count for the specified SIP method",
                            "name": "Invites",
                            "required": false,
                            "type": "integer"
                        },
                        "registrations": {
                            "description": "Count for the specified SIP method",
                            "name": "Registrations",
                            "required": false,
                            "type": "integer"
                        },
                        "total_packets": {
                            "description": "Summary count for all of the SIP methods",
                            "name": "Total packets",
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "per_second": {
                    "additionalProperties": false,
                    "description": "The limits to apply by a second",
                    "name": "Per second",
                    "properties": {
                        "invites": {
                            "description": "Count for the specified SIP method",
                            "name": "Invites",
                            "required": false,
                            "type": "integer"
                        },
                        "registrations": {
                            "description": "Count for the specified SIP method",
                            "name": "Registrations",
                            "required": false,
                            "type": "integer"
                        },
                        "total_packets": {
                            "description": "Summary count for all of the SIP methods",
                            "name": "Total packets",
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "devices": {
            "description": "A device be it a SIP phone or landline number",
            "name": "Device",
            "properties": {
                "call_forward": {
                    "description": "The device call forward parameters",
                    "name": "Call Forwarding Parameters",
                    "properties": {
                        "direct_calls_only": {
                            "default": false,
                            "description": "Determines if the calls that are not directly sent to the device should be forwarded",
                            "name": "Direct Calls Only?",
                            "required": false,
                            "type": "boolean"
                        },
                        "enabled": {
                            "default": false,
                            "description": "Determines if the call forwarding should be used",
                            "name": "Is Enabled?",
                            "required": false,
                            "type": "boolean"
                        },
                        "failover": {
                            "default": false,
                            "description": "Enable the call-forwarding parameters if the device is offline",
                            "name": "Use if Device Offline?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "default": true,
                            "description": "The option to determine if early media from the call forwarded number should ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "keep_caller_id": {
                            "default": true,
                            "description": "Determines if the caller id is kept when the call is forwarded, if not the devices caller id is used",
                            "name": "Keep Original Caller ID?",
                            "required": false,
                            "type": "boolean"
                        },
                        "number": {
                            "description": "The number to forward calls to",
                            "maxLength": 15,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        },
                        "require_keypress": {
                            "default": true,
                            "description": "Determines if the callee is prompted to press 1 to accept the call",
                            "name": "Require Keypress?",
                            "required": false,
                            "type": "boolean"
                        },
                        "substitute": {
                            "default": true,
                            "description": "Determines if the call forwarding replaces the device",
                            "name": "Substitute Device?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Device level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The device caller ID parameters",
                    "required": false,
                    "type": "object"
                },
                "contact_list": {
                    "default": {},
                    "name": "Contect List Parameters",
                    "properties": {
                        "exclude": {
                            "description": "If set to true the device is excluded from the contact list",
                            "name": "Is Excluded?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "device_type": {
                    "description": "Arbitrary device type used by the UI and billing system",
                    "name": "Device Type",
                    "required": false,
                    "type": "string"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of rules used to modify dialed numbers",
                    "name": "Dialplan",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "name": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "Is do-not-disturb enabled for this device?",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the device is currently enabled",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "exclude_from_queues": {
                    "default": false,
                    "description": "Do not ring this device when calling user/agent in queue",
                    "name": "Exclude from Queues",
                    "required": false,
                    "type": "boolean"
                },
                "language": {
                    "description": "The language for the device",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The audio media parameters",
                            "name": "Audio Options",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of audio codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "name": "Codecs",
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "enum": [
                                true,
                                false,
                                "auto"
                            ],
                            "name": "Is Media Direct?",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "warning": "The string type is deprecated, please use this as a boolean"
                        },
                        "encryption": {
                            "default": {},
                            "name": "Encryption Parameters",
                            "properties": {
                                "enforce_security": {
                                    "default": false,
                                    "name": "Is Encryption Enabled?",
                                    "required": false,
                                    "type": "boolean"
                                },
                                "methods": {
                                    "default": [],
                                    "items": {
                                        "enum": [
                                            "zrtp",
                                            "srtp"
                                        ],
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Supported Encryption Types",
                                    "required": false,
                                    "type": "array"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "description": "The option to determine if early media from the device should always be ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "progress_timeout": {
                            "description": "The progress timeout to apply to the device",
                            "name": "Progress Timeout (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "video": {
                            "default": {},
                            "description": "The video media parameters",
                            "name": "Video Options",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of video codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "VP8",
                                            "H264",
                                            "H263",
                                            "H261"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "metaflows": {
                    "$ref": "metaflows",
                    "description": "The device metaflow parameters"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters used if not a property of the device owner",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "mwi_unsolicitated_updates": {
                    "default": true,
                    "description": "When true enables unsolicitated mwi notifications",
                    "name": "Send unsolicitated MWI NOTIFY?",
                    "required": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "A friendly name for the device",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "outbound_flags": {
                    "description": "List of flags (features) this device requires when making outbound calls",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Outbound Flags",
                    "required": false,
                    "type": "array"
                },
                "owner_id": {
                    "description": "The ID of the user object that 'owns' the device",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                },
                "presence_id": {
                    "description": "Static presence ID (used instead of SIP username)",
                    "name": "Presence ID",
                    "required": false,
                    "type": "string"
                },
                "provision": {
                    "description": "Provision data",
                    "name": "Provision",
                    "properties": {
                        "feature_keys": {
                            "name": "Feature Keys",
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "properties": {
                                        "type": {
                                            "description": "Feature key type",
                                            "enum": [
                                                "presence",
                                                "parking",
                                                "personal_parking",
                                                "speed_dial"
                                            ],
                                            "name": "Type",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Feature key value",
                                            "maximum": 10,
                                            "minimum": 1,
                                            "name": "Value",
                                            "required": true,
                                            "type": [
                                                "string",
                                                "integer"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "register_overwrite_notify": {
                    "default": false,
                    "description": "When true enables overwrite notifications",
                    "name": "Send NOTIFY if Register Overwritten?",
                    "required": false,
                    "type": "boolean"
                },
                "ringtones": {
                    "default": {},
                    "name": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "name": "External",
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "name": "Internal",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "sip": {
                    "default": {},
                    "name": "SIP Parameters",
                    "properties": {
                        "custom_sip_headers": {
                            "additionalProperties": {
                                "required": false,
                                "type": "string"
                            },
                            "description": "A property list of SIP headers beging with the prefix 'X-'",
                            "name": "Custom SIP Headers",
                            "required": false,
                            "type": "object"
                        },
                        "expire_seconds": {
                            "default": 300,
                            "description": "The time, in seconds, sent to the provisioner for the registration period that the device should be configured with.",
                            "name": "Minimum Registration (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "ignore_completed_elsewhere": {
                            "description": "When set to false the phone should not consider ring group calls answered elsewhere as missed",
                            "name": "Show Calls Answered Elsewhere as Missed?",
                            "required": false,
                            "type": "boolean"
                        },
                        "invite_format": {
                            "default": "username",
                            "description": "The SIP request URI invite format",
                            "enum": [
                                "username",
                                "npan",
                                "1npan",
                                "e164",
                                "route"
                            ],
                            "name": "Invite Format",
                            "required": false,
                            "type": "string"
                        },
                        "ip": {
                            "description": "IP address for this device",
                            "name": "IP Address",
                            "required": false,
                            "type": "string"
                        },
                        "method": {
                            "default": "password",
                            "description": "Method of authentication",
                            "enum": [
                                "password",
                                "ip"
                            ],
                            "name": "Authentication Method",
                            "required": false,
                            "type": "string"
                        },
                        "number": {
                            "description": "The number used if the invite format is 1npan, npan, or e164 (if not set the dialed number is used)",
                            "name": "Static Number",
                            "required": false,
                            "type": "string"
                        },
                        "password": {
                            "description": "SIP authentication password",
                            "maxLength": 32,
                            "minLength": 5,
                            "name": "Password",
                            "required": false,
                            "type": "string"
                        },
                        "realm": {
                            "description": "The realm this device should use, overriding the account realm. Should rarely be necessary.",
                            "format": "uri",
                            "name": "Realm",
                            "required": false,
                            "type": "string"
                        },
                        "route": {
                            "description": "The SIP URL used if the invite format is 'route'",
                            "name": "Route SIP URI",
                            "required": false,
                            "type": "string"
                        },
                        "static_route": {
                            "description": "Sends all inbound calls to this string (instead of dialed number or username)",
                            "name": "Static SIP URI",
                            "required": false,
                            "type": "string"
                        },
                        "username": {
                            "description": "SIP authentication username",
                            "maxLength": 32,
                            "minLength": 2,
                            "name": "Username",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "suppress_unregister_notifications": {
                    "default": false,
                    "description": "When true disables deregister notifications",
                    "name": "Do Not Send Unregister Emails?",
                    "required": false,
                    "type": "boolean"
                },
                "timezone": {
                    "description": "Device's timezone",
                    "name": "Timezone",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "dialplans": {
            "additionalProperties": {
                "properties": {
                    "description": {
                        "description": "Friendly name for this regex dialplan",
                        "name": "Name",
                        "required": false,
                        "type": "string"
                    },
                    "prefix": {
                        "description": "Prefix the prepend to the capture group after applying the regex",
                        "name": "Prefix",
                        "required": false,
                        "type": "string"
                    },
                    "suffix": {
                        "description": "Suffix the append to the capture group after applying the regex",
                        "name": "Suffix",
                        "required": false,
                        "type": "string"
                    }
                },
                "required": false,
                "type": "object"
            },
            "description": "",
            "name": "Dialplans",
            "properties": {
                "system": {
                    "description": "List of system dial plans",
                    "name": "System",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "directories": {
            "description": "Allow a caller to search for a user/device by name instead of extension/DID",
            "name": "Directory",
            "properties": {
                "confirm_match": {
                    "default": true,
                    "description": "When one match is found, require caller to confirm the match before connecting",
                    "name": "Confirm?",
                    "required": false,
                    "type": "boolean"
                },
                "max_dtmf": {
                    "default": 0,
                    "description": "Cap the number of DTMF characters collected from a caller, 0 for unlimited",
                    "minimum": 0,
                    "name": "Maximum digits",
                    "required": false,
                    "type": "integer"
                },
                "min_dtmf": {
                    "default": 3,
                    "description": "How many DTMF characters to collect from a caller before processing the directory",
                    "minimum": 1,
                    "name": "Minimum digits",
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the directory",
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "sort_by": {
                    "default": "last_name",
                    "description": "What field to sort on in matching documents when a caller enters characters",
                    "enum": [
                        "first_name",
                        "last_name"
                    ],
                    "name": "Sort By",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "domain_hosts": {
            "additionalProperties": false,
            "description": "Domain host settings for white-labelling",
            "name": "domain_hosts",
            "patternProperties": {
                ".*[\\{]{2}domain[\\}]{2}.*": {
                    "description": "White-label template for hostname",
                    "name": "Host",
                    "properties": {
                        "mapping": {
                            "description": "List of hosts or IPs this host should resolve to",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "name": "Mapping",
                            "required": true,
                            "type": "array"
                        },
                        "name": {
                            "description": "Human-friendly name of the Host",
                            "name": "Name",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "domains": {
            "description": "Domain settings for white-labelling",
            "name": "domains",
            "properties": {
                "A": {
                    "description": "A records",
                    "name": "A",
                    "required": false,
                    "type": "object"
                },
                "CNAME": {
                    "$ref": "domain_hosts",
                    "description": "CNAME records",
                    "name": "CNAME",
                    "required": false,
                    "type": "object"
                },
                "MX": {
                    "description": "MX records, typically for email servers",
                    "name": "MX",
                    "required": false,
                    "type": "object"
                },
                "NAPTR": {
                    "description": "NAPTR records",
                    "name": "NAPTR",
                    "required": false,
                    "type": "object"
                },
                "SRV": {
                    "description": "SRV records",
                    "name": "SRV",
                    "required": false,
                    "type": "object"
                },
                "TXT": {
                    "description": "TXT records",
                    "name": "TXT",
                    "required": false,
                    "type": "object"
                }
            }
        },
        "faxbox": {
            "description": "FaxBoxes allow configuration of individual fax virtual machines",
            "name": "Fax Box",
            "properties": {
                "attempts": {
                    "default": 0,
                    "description": "The number of attempts made, this will be set by the system and reset automaticly on put/post",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Attempts",
                    "required": false,
                    "type": "integer"
                },
                "caller_id": {
                    "description": "The Caller-ID-Number",
                    "name": "Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "caller_name": {
                    "default": "Kazoo Fax Printer",
                    "description": "The Caller-ID-Name",
                    "name": "Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "custom_smtp_email_address": {
                    "description": "custom smtp address",
                    "name": "SMTP Address",
                    "required": false,
                    "type": "string"
                },
                "fax_header": {
                    "default": "Kazoo Fax Printer",
                    "description": "The name printed at the top of the fax",
                    "name": "Fax Header Name",
                    "required": false,
                    "type": "string"
                },
                "fax_identity": {
                    "description": "The number printed at the top of the fax",
                    "name": "Fax Header Number",
                    "required": false,
                    "type": "string"
                },
                "fax_timezone": {
                    "description": "The timezone announced",
                    "name": "Fax Header Timezone",
                    "required": false,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the faxbox",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "inbound": {
                            "description": "Inbound Status notifications",
                            "properties": {
                                "callback": {
                                    "description": "A URL to send results to",
                                    "name": "Callback Parameters",
                                    "properties": {
                                        "method": {
                                            "description": "The http method to use when sending the results",
                                            "enum": [
                                                "post",
                                                "put"
                                            ],
                                            "name": "Method",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The content-type to use when sending the results",
                                            "enum": [
                                                "json",
                                                "www-url-form-encoded"
                                            ],
                                            "name": "Content-Type",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "url": {
                                            "description": "The URL to call back with the results",
                                            "name": "URL",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "email": {
                                    "description": "Email notifications",
                                    "name": "Inbound Email Notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of email recipent(s)",
                                            "format": "email",
                                            "items": {
                                                "format": "email",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "name": "Email Address",
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "sms": {
                                    "description": "SMS notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of sms recipent(s)",
                                            "items": {
                                                "required": false,
                                                "type": "string"
                                            },
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "outbound": {
                            "description": "Outbound Status notifications",
                            "properties": {
                                "callback": {
                                    "description": "A URL to send results to",
                                    "properties": {
                                        "method": {
                                            "description": "The http method to use when sending the results",
                                            "enum": [
                                                "post",
                                                "put"
                                            ],
                                            "name": "Method",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The content-type to use when sending the results",
                                            "enum": [
                                                "json",
                                                "www-url-form-encoded"
                                            ],
                                            "name": "Content-Type",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "url": {
                                            "description": "The URL to call back with the results",
                                            "name": "URL",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "email": {
                                    "description": "Email notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of email recipent(s)",
                                            "format": "email",
                                            "items": {
                                                "format": "email",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "name": "Email Address",
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "sms": {
                                    "description": "SMS notifications",
                                    "properties": {
                                        "send_to": {
                                            "description": "A list or string of sms recipent(s)",
                                            "items": {
                                                "required": false,
                                                "type": "string"
                                            },
                                            "name": "SMS Number",
                                            "required": false,
                                            "type": [
                                                "string",
                                                "array"
                                            ]
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "retries": {
                    "default": 1,
                    "description": "The number of times to retry",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "smtp_permission_list": {
                    "default": [],
                    "description": "smtp permission list. accepts regular expressions",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "SMTP Permissions",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "faxes": {
            "description": "Faxes API allows you to update and access fax jobs for both sending and receiving",
            "name": "Fax",
            "properties": {
                "attempts": {
                    "default": 0,
                    "description": "The number of attempts made, this will be set by the system and reset automaticly on put/post",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Attempts",
                    "required": false,
                    "type": "integer"
                },
                "document": {
                    "description": "Parameters related to the storage of a fax document",
                    "properties": {
                        "content": {
                            "description": "The content provided in the body when fetching for transmission as a post",
                            "maxLength": 256,
                            "name": "HTTP Body",
                            "required": false,
                            "type": "string"
                        },
                        "content_type": {
                            "description": "The content type header to be used when fetching for transmission as a post",
                            "name": "HTTP Content-Type",
                            "required": false,
                            "type": "string"
                        },
                        "host": {
                            "description": "The host header to be used when fetching for transmission",
                            "name": "HTTP Host",
                            "required": false,
                            "type": "string"
                        },
                        "method": {
                            "default": "get",
                            "description": "The method that should be used to reteive the document",
                            "enum": [
                                "get",
                                "post"
                            ],
                            "name": "Method",
                            "required": false,
                            "type": "string"
                        },
                        "referer": {
                            "description": "The referer header to be used when fetching for transmission",
                            "name": "HTTP Referer",
                            "required": false,
                            "type": "string"
                        },
                        "url": {
                            "description": "The url of the fax document",
                            "name": "Document URL",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "from_name": {
                    "description": "The sender name for the fax",
                    "name": "Sender Name",
                    "required": false,
                    "type": "string"
                },
                "from_number": {
                    "description": "The sender number for the fax",
                    "name": "Sender Number",
                    "required": false,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "email": {
                            "description": "Email notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of email recipent(s)",
                                    "format": "email",
                                    "items": {
                                        "format": "email",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Email Address",
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "sms": {
                            "description": "SMS notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of sms recipent(s)",
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "SMS Number",
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "retries": {
                    "default": 1,
                    "description": "The number of times to retry",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "to_name": {
                    "description": "The recipient name for the fax",
                    "name": "Recipient Name",
                    "required": false,
                    "type": "string"
                },
                "to_number": {
                    "description": "The recipient number for the fax",
                    "name": "Recipient Number",
                    "required": false,
                    "type": "string"
                },
                "tx_result": {
                    "default": {},
                    "description": "The result of a transmission attempt",
                    "properties": {
                        "error_message": {
                            "default": "",
                            "description": "A description of any error that occured",
                            "name": "Error Message",
                            "required": false,
                            "type": "string"
                        },
                        "fax_bad_rows": {
                            "default": 0,
                            "description": "The number of bad rows",
                            "name": "Bad Rows",
                            "required": false,
                            "type": "integer"
                        },
                        "fax_error_correction": {
                            "default": false,
                            "description": "True if fax error correction was used",
                            "name": "Error Correction",
                            "required": false,
                            "type": "boolean"
                        },
                        "fax_receiver_id": {
                            "default": "",
                            "description": "The receiver id reported by the remote fax device",
                            "name": "Reciever ID",
                            "required": false,
                            "type": "string"
                        },
                        "fax_speed": {
                            "default": 0,
                            "description": "The speed achieved during transmission",
                            "name": "Baud Rate",
                            "required": false,
                            "type": "integer"
                        },
                        "pages_sent": {
                            "default": 0,
                            "description": "The number of pages transmitted",
                            "name": "Pages Sent",
                            "required": false,
                            "type": "integer"
                        },
                        "success": {
                            "default": false,
                            "description": "True if the fax transmission was successful",
                            "name": "Success",
                            "required": false,
                            "type": "boolean"
                        },
                        "time_elapsed": {
                            "default": 0,
                            "description": "The amount of time from submition to completion",
                            "name": "Elapsed Time",
                            "required": false,
                            "type": "integer"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "find_numbers": {
            "properties": {
                "prefix": {
                    "maxLength": 10,
                    "minLength": 3,
                    "required": true,
                    "type": "string"
                },
                "quantity": {
                    "default": 1,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ips": {
            "description": "IP addresses assigned to the account",
            "name": "IP Addresses",
            "properties": {
                "ips": {
                    "description": "List of IP addresses",
                    "items": {
                        "description": "IP address",
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": false,
                    "type": "array"
                }
            }
        },
        "ledgers": {
            "description": "ledgers document",
            "name": "ledgers",
            "properties": {
                "account": {
                    "description": "Account info",
                    "name": "Account",
                    "properties": {
                        "id": {
                            "description": "Account ID",
                            "name": "ID",
                            "required": false,
                            "type": "string"
                        },
                        "name": {
                            "description": "Account name",
                            "name": "Name",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "amount": {
                    "description": "Ledger amount",
                    "minimum": 1,
                    "name": "amount",
                    "required": false,
                    "type": "integer"
                },
                "description": {
                    "description": "Useful description for ledger",
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata for ledger document",
                    "name": "Metadata",
                    "required": false,
                    "type": "object"
                },
                "period": {
                    "description": "Period of ledger",
                    "name": "Period",
                    "properties": {
                        "end": {
                            "description": "Period end",
                            "name": "End",
                            "required": false,
                            "type": "integer"
                        },
                        "start": {
                            "description": "Period start",
                            "name": "Start",
                            "required": false,
                            "type": "integer"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "source": {
                    "description": "Origin of ledger",
                    "name": "Source",
                    "properties": {
                        "id": {
                            "description": "Source ID",
                            "name": "Id",
                            "required": true,
                            "type": "string"
                        },
                        "service": {
                            "description": "Source service",
                            "name": "Service",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "usage": {
                    "description": "Usage for ledger",
                    "name": "Usage",
                    "properties": {
                        "quantity": {
                            "description": "Usage quantity",
                            "name": "Quantity",
                            "required": true,
                            "type": "integer"
                        },
                        "type": {
                            "description": "Usage type",
                            "name": "Service",
                            "required": true,
                            "type": "string"
                        },
                        "unit": {
                            "description": "Usage unit",
                            "name": "Unit",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "limits": {
            "description": "Limit an account's ability to place concurrent calls using flat rate trunks",
            "name": "Limits",
            "properties": {
                "allow_prepay": {
                    "default": true,
                    "description": "Determines if the account would like to allow per-minute calls if they have credit",
                    "name": "Allow Prepay",
                    "required": false,
                    "type": "boolean"
                },
                "burst_trunks": {
                    "description": "The number of two-way, flat-rate trunks used only if no other trunks are available",
                    "minimum": 0,
                    "name": "Burst Trunks",
                    "required": false,
                    "type": "integer"
                },
                "calls": {
                    "description": "A hard limit for the total number calls",
                    "minimum": 0,
                    "name": "Calls",
                    "required": false,
                    "type": "integer"
                },
                "inbound_trunks": {
                    "description": "The number of inbound, flat-rate trunks",
                    "minimum": 0,
                    "name": "Inbound Trunks",
                    "required": false,
                    "type": "integer"
                },
                "outbound_trunks": {
                    "description": "The number of outbound, flat-rate trunks",
                    "minimum": 0,
                    "name": "Outbound Trunks",
                    "required": false,
                    "type": "integer"
                },
                "resource_consuming_calls": {
                    "description": "A hard limit for the number of resource consuming calls",
                    "minimum": 0,
                    "name": "Resource Consuming Calls",
                    "required": false,
                    "type": "integer"
                },
                "twoway_trunks": {
                    "description": "The number of two-way, flat-rate trunks",
                    "minimum": 0,
                    "name": "Twoway Trunks",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "list_entries": {
            "description": "Schema for a match list entries",
            "properties": {
                "displayname": {
                    "description": "Display name",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Display Name",
                    "required": false,
                    "type": "string"
                },
                "firstname": {
                    "description": "A friendly firstname",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "First name",
                    "required": false,
                    "type": "string"
                },
                "lastname": {
                    "description": "A friendly lastname",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Last name",
                    "required": false,
                    "type": "string"
                },
                "list_id": {
                    "description": "List id",
                    "name": "List id",
                    "required": true,
                    "type": "string"
                },
                "number": {
                    "description": "Phone number",
                    "name": "Number",
                    "required": false,
                    "type": "string"
                },
                "pattern": {
                    "description": "Match pattern",
                    "name": "Pattern",
                    "required": false,
                    "type": "string"
                },
                "profile": {
                    "$ref": "profile",
                    "default": {},
                    "description": "Profile data",
                    "required": false,
                    "type": "object"
                },
                "type": {
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "type",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "lists": {
            "description": "Schema for a match list",
            "properties": {
                "description": {
                    "description": "A friendly list description",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly match list name",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "org": {
                    "description": "Full legal name of the organization",
                    "name": "Organizational name",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "mailbox_message": {
            "description": "Schema for mailbox message",
            "name": "Mailbox Message",
            "properties": {
                "call_id": {
                    "description": "The SIP call-id",
                    "name": "Call ID",
                    "required": false,
                    "type": "string"
                },
                "caller_id_name": {
                    "description": "The reported caller id name",
                    "maxLength": 35,
                    "name": "Caller ID Name",
                    "required": false,
                    "type": "string"
                },
                "caller_id_number": {
                    "description": "The reported caller id number",
                    "maxLength": 35,
                    "name": "Caller ID Number",
                    "required": false,
                    "type": "string"
                },
                "folder": {
                    "description": "The folder the message belongs to",
                    "enum": [
                        "deleted",
                        "saved",
                        "new"
                    ],
                    "name": "Folder",
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "The SIP from header",
                    "name": "From",
                    "required": false,
                    "type": "string"
                },
                "length": {
                    "name": "Length",
                    "required": false,
                    "type": "integer"
                },
                "media_id": {
                    "description": "The ID of the message media object",
                    "maxLength": 39,
                    "minLength": 39,
                    "name": "Media ID",
                    "required": true,
                    "type": "string"
                },
                "timestamp": {
                    "description": "The UTC timestamp, in gregorian seconds, that the message was left on",
                    "name": "Timestamp",
                    "required": false,
                    "type": "integer"
                },
                "to": {
                    "description": "The SIP to header",
                    "name": "To",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "media": {
            "description": "Schema for media",
            "name": "Media",
            "properties": {
                "content_length": {
                    "description": "Length, in bytes, of the file",
                    "maximum": 5242880,
                    "minimum": 1,
                    "name": "Content Length",
                    "required": false,
                    "type": "integer"
                },
                "content_type": {
                    "description": "Used to override the automatic upload type",
                    "enum": [
                        "audio/mp3",
                        "audio/mpeg",
                        "audio/mpeg3",
                        "audio/x-wav",
                        "audio/wav",
                        "audio/ogg",
                        "video/x-flv",
                        "video/h264",
                        "video/mpeg",
                        "video/quicktime",
                        "video/mp4",
                        "video/webm"
                    ],
                    "name": "Content Type",
                    "required": false,
                    "type": "string"
                },
                "description": {
                    "description": "A breif description of the media update, usally the original file name",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "language": {
                    "default": "en-us",
                    "description": "The language of the media file or text",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "media_source": {
                    "default": "upload",
                    "description": "Defines the source of the media",
                    "enum": [
                        "recording",
                        "upload",
                        "tts"
                    ],
                    "name": "Media Source",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the media",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "prompt_id": {
                    "description": "The prompt this media file represents",
                    "name": "Prompt ID",
                    "required": false,
                    "type": "string"
                },
                "source_id": {
                    "description": "If the media was generated from a callflow module, this is ID of the properties",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Source ID",
                    "required": false,
                    "type": "string"
                },
                "source_type": {
                    "description": "If the media was generated from a callflow module, this is the module name",
                    "name": "Source Type",
                    "required": false,
                    "type": "string"
                },
                "streamable": {
                    "default": true,
                    "description": "Determines if the media can be streamed",
                    "name": "Streamable",
                    "required": false,
                    "type": "boolean"
                },
                "tts": {
                    "default": {},
                    "description": "Text-to-speech options used to create audio files from text",
                    "name": "TTS Parameters",
                    "properties": {
                        "text": {
                            "description": "The text to be converted into audio",
                            "minLength": 1,
                            "name": "Text TTS",
                            "required": false,
                            "type": "string"
                        },
                        "voice": {
                            "default": "female/en-US",
                            "description": "The voice to be used during the conversion",
                            "enum": [
                                "female/en-US",
                                "male/en-US",
                                "female/en-CA",
                                "female/en-AU",
                                "female/en-GB",
                                "male/en-GB",
                                "female/es-US",
                                "male/es-US",
                                "female/us-US",
                                "female/zh-CN",
                                "male/zh-CN",
                                "female/zh-HK",
                                "female/zh-TW",
                                "female/ja-JP",
                                "male/ja-JP",
                                "female/ko-KR",
                                "male/ko-KR",
                                "female/da-DK",
                                "female/de-DE",
                                "male/de-DE",
                                "female/ca-ES",
                                "female/es-ES",
                                "male/es-ES",
                                "female/fi-FI",
                                "female/fr-CA",
                                "male/fr-CA",
                                "female/fr-FR",
                                "male/fr-FR",
                                "female/it-IT",
                                "male/it-IT",
                                "female/nb-NO",
                                "female/nl-NL",
                                "female/pl-PL",
                                "female/pt-BR",
                                "female/pt-PT",
                                "male/pt-PT",
                                "female/ru-RU",
                                "male/ru-RU",
                                "female/sv-SE",
                                "female/hu-HU",
                                "female/cs-CZ",
                                "female/tr-TR",
                                "male/tr-TR",
                                "male/ru-RU/Vladimir",
                                "female/ru-RU/Julia",
                                "female/ru-RU/Anna",
                                "female/ru-RU/Viktoria",
                                "male/ru-RU/Alexander",
                                "female/ru-RU/Maria",
                                "female/ru-RU/Lidia"
                            ],
                            "name": "Voice TTS",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "menus": {
            "description": "Schema for a menus",
            "name": "Menu",
            "properties": {
                "allow_record_from_offnet": {
                    "default": false,
                    "description": "Determines if the record pin can be used by external calls",
                    "name": "Allow Record From Offnet",
                    "required": false,
                    "type": "boolean"
                },
                "hunt": {
                    "default": true,
                    "description": "Determines if the callers can dial internal extensions directly",
                    "name": "Hunt",
                    "required": false,
                    "type": "boolean"
                },
                "hunt_allow": {
                    "description": "A regular expression that an extension the caller dialed must match to be allowed to continue",
                    "maxLength": 256,
                    "minLength": 1,
                    "name": "Hunt Allow",
                    "required": false,
                    "type": "string"
                },
                "hunt_deny": {
                    "description": "A regular expression that if matched does not allow the caller to dial directly",
                    "maxLength": 256,
                    "minLength": 1,
                    "name": "Hunt Deny",
                    "required": false,
                    "type": "string"
                },
                "interdigit_timeout": {
                    "description": "The amount of time (in milliseconds) to wait for the caller to press the next digit after pressing a digit",
                    "maximum": 10000,
                    "minimum": 1,
                    "name": "Interdigit Timeout (millliseconds)",
                    "required": false,
                    "type": "integer"
                },
                "max_extension_length": {
                    "default": 4,
                    "description": "The maximum number of digits that can be collected",
                    "maximum": 6,
                    "minimum": 1,
                    "name": "Max Extension Length",
                    "required": false,
                    "type": "integer"
                },
                "media": {
                    "default": {},
                    "description": "The media (prompt) parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "exit_media": {
                            "description": "When a call is transferred from the menu after all retries exhausted this media can be played (prior to transfer if enabled)",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Exit Media",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        },
                        "greeting": {
                            "description": "The ID of a media object that should be used as the menu greeting",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Greeting",
                            "required": false,
                            "type": "string"
                        },
                        "invalid_media": {
                            "description": "When the collected digits dont result in a match or hunt this media can be played",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Invalid Media",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        },
                        "transfer_media": {
                            "description": "When a call is transferred from the menu, either after all retries exhausted or a successful hunt, this media can be played",
                            "maxLength": 64,
                            "minLength": 3,
                            "name": "Transfer Media",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ]
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the menu",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "record_pin": {
                    "description": "The pin number used to record the menu prompt",
                    "maxLength": 6,
                    "minLength": 3,
                    "name": "Record Pin",
                    "required": false,
                    "type": "string"
                },
                "retries": {
                    "default": 3,
                    "description": "The number of times a menu should be played until a valid entry is collected",
                    "maximum": 10,
                    "minimum": 1,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "timeout": {
                    "description": "The amount of time (in milliseconds) to wait for the caller to beging entering digits",
                    "maximum": 60000,
                    "minimum": 1,
                    "name": "Timeout (milliseconds)",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "metaflows": {
            "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)",
            "name": "Metaflow",
            "properties": {
                "binding_digit": {
                    "default": "*",
                    "description": "What DTMF will trigger the collection and analysis of the subsequent DTMF sequence",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "0",
                        "*",
                        "#"
                    ],
                    "maxLength": 1,
                    "minLength": 1,
                    "name": "Binding Digit",
                    "required": false,
                    "type": "string"
                },
                "digit_timeout": {
                    "description": "How long to wait between DTMF presses before processing the collected sequence",
                    "minimum": 0,
                    "name": "Timeout (milliseconds)",
                    "required": false,
                    "type": "integer"
                },
                "listen_on": {
                    "description": "Which leg(s) of the call to listen for DTMF",
                    "enum": [
                        "both",
                        "self",
                        "peer"
                    ],
                    "name": "Listen On",
                    "required": false,
                    "type": "string"
                },
                "numbers": {
                    "description": "A list of static numbers that the metaflow should match for",
                    "name": "Numbers",
                    "patternProperties": {
                        "[0-9\\*\\#]+": {
                            "properties": {
                                "children": {
                                    "default": {},
                                    "name": "Children",
                                    "required": false,
                                    "type": "#/flow"
                                },
                                "data": {
                                    "default": {},
                                    "name": "Module Data",
                                    "required": true,
                                    "type": "object"
                                },
                                "module": {
                                    "maxLength": 15,
                                    "name": "Module",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "patterns": {
                    "description": "The metaflow patterns",
                    "itmes": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Patterns",
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "notifications": {
            "description": "Notifications templates",
            "name": "Notifications",
            "properties": {
                "bcc": {
                    "description": "Bcc email field",
                    "name": "Bcc",
                    "properties": {
                        "email_addresses": {
                            "description": "",
                            "itmes": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "name": "BCC Email Addresses",
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "description": "",
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "maxLength": 253,
                            "minLength": 2,
                            "name": "Type",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "category": {
                    "description": "Category of the template, for grouping purposes",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "cc": {
                    "description": "CC email field",
                    "name": "Cc",
                    "properties": {
                        "email_addresses": {
                            "description": "",
                            "items": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "name": "CC Email Addresses",
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "description": "",
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "name": "Type",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Enable notification",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "friendly_name": {
                    "description": "Friendly name of the template",
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "from": {
                    "description": "From: email address",
                    "format": "email",
                    "name": "From",
                    "required": true,
                    "type": "string"
                },
                "macros": {
                    "default": {},
                    "description": "",
                    "name": "Macros",
                    "properties": {},
                    "required": false,
                    "type": "object"
                },
                "reply_to": {
                    "description": "Reply-To: email address",
                    "format": "email",
                    "name": "Reply-To",
                    "required": false,
                    "type": "string"
                },
                "subject": {
                    "description": "Email subject",
                    "maxLength": 200,
                    "minLength": 1,
                    "name": "Subject",
                    "required": true,
                    "type": "string"
                },
                "template_charset": {
                    "default": "utf-8",
                    "description": "",
                    "minLength": 1,
                    "name": "Template charset",
                    "required": false,
                    "type": "string"
                },
                "to": {
                    "description": "To email field",
                    "name": "To",
                    "properties": {
                        "email_addresses": {
                            "description": "",
                            "items": {
                                "format": "email",
                                "required": false,
                                "type": "string"
                            },
                            "name": "Email Addresses",
                            "required": false,
                            "type": "array"
                        },
                        "type": {
                            "description": "",
                            "enum": [
                                "original",
                                "specified",
                                "admins"
                            ],
                            "maxLength": 253,
                            "minLength": 2,
                            "name": "Type",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "notify.callback": {
            "description": "Schema for a callback options",
            "name": "Callback notification options",
            "properties": {
                "attempts": {
                    "description": "How many attempts without answer will system do",
                    "required": false,
                    "type": "integer"
                },
                "disabled": {
                    "description": "Determines if the system will call to callback number",
                    "required": false,
                    "type": "boolean"
                },
                "interval_s": {
                    "description": "How long will system wait between call back notification attempts",
                    "required": false,
                    "type": "integer"
                },
                "number": {
                    "description": "Number for callback notifications about new messages",
                    "required": false,
                    "type": "string"
                },
                "schedule": {
                    "description": "Schedules interval between callbacks",
                    "items": {
                        "description": "callbacks interval",
                        "type": "integer"
                    },
                    "required": false,
                    "type": "array"
                },
                "timeout_s": {
                    "description": "How long will system wait for answer to callback",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "phone_numbers": {
            "description": "Schema for a number",
            "name": "Number",
            "properties": {
                "features": {
                    "properties": {
                        "cnam": {
                            "properties": {
                                "display_name": {
                                    "maxLength": 15,
                                    "minLength": 1,
                                    "name": "Display Name",
                                    "required": false,
                                    "type": "string"
                                },
                                "inbound_lookup": {
                                    "name": "Inbound Lookup",
                                    "required": false,
                                    "type": "boolean"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "dash_e911": {
                            "description": "E911 information for the phone number",
                            "properties": {
                                "activated_time": {
                                    "description": "The time stamp e911 was provisioned",
                                    "name": "Activated Time (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "caller_name": {
                                    "description": "The name that will show to emergency services",
                                    "name": "Caller Name (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "extended_address": {
                                    "description": "The suit/floor/apt. address where the number is in service",
                                    "name": "Extended Address(e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "latitude": {
                                    "description": "The e911 provisioning system calculated service address latitude",
                                    "name": "Latitude (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "legacy_data": {
                                    "description": "Legacy E911 information",
                                    "properties": {
                                        "house_number": {
                                            "description": "The name that will show to emergency services",
                                            "name": "House Number",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "predirectional": {
                                            "description": "The name that will show to emergency services",
                                            "name": "Predirectional",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "streetname": {
                                            "description": "The name that will show to emergency services",
                                            "name": "Street Name",
                                            "required": false,
                                            "type": "string"
                                        },
                                        "suite": {
                                            "description": "The name that will show to emergency services",
                                            "name": "Suite",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                },
                                "locality": {
                                    "description": "The locality (city) where the number is in service",
                                    "name": "Locality (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "location_id": {
                                    "description": "The e911 provisioning system internal id for this service address",
                                    "name": "Location ID(e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "longitude": {
                                    "description": "The e911 provisioning system calculated service address longitude",
                                    "name": "Longitude (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "plus_four": {
                                    "description": "The extended zip/postal code where the number is in service",
                                    "name": "Plus Four (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "postal_code": {
                                    "description": "The zip/postal code where the number is in service",
                                    "name": "Postal Code (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "region": {
                                    "description": "The region (state) where the number is in service",
                                    "name": "Region (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The e911 provisioning system status for this service address",
                                    "enum": [
                                        "INVALID",
                                        "GEOCODED",
                                        "PROVISIONED",
                                        "REMOVED",
                                        "ERROR"
                                    ],
                                    "name": "Status (e911)",
                                    "required": false,
                                    "type": "string"
                                },
                                "street_address": {
                                    "description": "The street address where the number is in service",
                                    "name": "Street Address(e911)",
                                    "required": false,
                                    "type": "string"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "porting": {
                            "description": "Porting (in) information for the phone number",
                            "properties": {
                                "billing_account_id": {
                                    "description": "The account id the losing carrier has on file",
                                    "name": "Billing Account ID",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_extended_address": {
                                    "description": "The suit/floor/apt. address the losing carrier has on file",
                                    "name": "Billing Extended Address",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_locality": {
                                    "description": "The locality (city) the losing carrier has on file",
                                    "name": "Billing Locality",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_name": {
                                    "description": "The name or company name the losing carrier has on file",
                                    "name": "Billing Name",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_postal_code": {
                                    "description": "The zip/postal code the losing carrier has on file",
                                    "name": "Billing Postal Code",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_region": {
                                    "description": "The region (state) the losing carrier has on file",
                                    "name": "Billing Region",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_street_address": {
                                    "description": "The street address the losing carrier has on file",
                                    "name": "Billing Street Address",
                                    "required": false,
                                    "type": "string"
                                },
                                "billing_telephone_number": {
                                    "description": "The BTN of the account the number belongs to",
                                    "name": "Billing Telephone Number",
                                    "required": false,
                                    "type": "string"
                                },
                                "comments": {
                                    "description": "An array of comments",
                                    "items": {
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Comments",
                                    "required": false,
                                    "type": "array"
                                },
                                "customer_contact": {
                                    "description": "The phone number that can be used to contact the owner of the number",
                                    "name": "Customer Contact",
                                    "required": false,
                                    "type": "string"
                                },
                                "port_id": {
                                    "description": "The id of the port request",
                                    "name": "Port ID",
                                    "required": false,
                                    "type": "string"
                                },
                                "requested_port_date": {
                                    "description": "The requested port date",
                                    "name": "Request Port Date",
                                    "required": false,
                                    "type": "string"
                                },
                                "service_provider": {
                                    "description": "The name of the losing carrier",
                                    "name": "Service Provider",
                                    "required": false,
                                    "type": "string"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "port_requests": {
            "description": "Schema for a port request",
            "name": "Port Request",
            "properties": {
                "bill": {
                    "description": "Billing information of the losing carrier",
                    "properties": {
                        "extended_address": {
                            "description": "The suite/floor/apt of the billing address the losing carrier has on record",
                            "name": "Address",
                            "required": false,
                            "type": "string"
                        },
                        "locality": {
                            "description": "The locality (city) of the billing address the losing carrier has on record",
                            "name": "City",
                            "required": false,
                            "type": "string"
                        },
                        "name": {
                            "description": "The losing carrier billing/account name",
                            "name": "Account Name",
                            "required": false,
                            "type": "string"
                        },
                        "postal_code": {
                            "description": "The zip/postal code of the billing address the losing carrier has on record",
                            "name": "Zip Code",
                            "required": false,
                            "type": "string"
                        },
                        "region": {
                            "description": "The region (state) of the billing address the losing carrier has on record",
                            "name": "State",
                            "required": false,
                            "type": "string"
                        },
                        "street_address": {
                            "description": "The address of the billing address the losing carrier has on record",
                            "name": "Address",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "comments": {
                    "description": "The history of comments made on a port request",
                    "items": {
                        "required": false,
                        "type": "object"
                    },
                    "name": "Comments",
                    "required": false,
                    "type": "array"
                },
                "name": {
                    "description": "A friendly name for the port request",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "notifications": {
                    "description": "Status notifications",
                    "properties": {
                        "email": {
                            "description": "Email notifications",
                            "name": "Inbound Email Notifications",
                            "properties": {
                                "send_to": {
                                    "description": "A list or string of email recipent(s)",
                                    "format": "email",
                                    "items": {
                                        "format": "email",
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Email Address",
                                    "required": false,
                                    "type": [
                                        "string",
                                        "array"
                                    ]
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "numbers": {
                    "description": "The numbers to port in",
                    "minProperties": 1,
                    "name": "Numbers",
                    "patternProperties": {
                        "\\+?[0-9]+": {
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "port_state": {
                    "default": "unconfirmed",
                    "description": "What state the port request is currently in",
                    "enum": [
                        "unconfirmed",
                        "pending",
                        "submitted",
                        "scheduled",
                        "completed",
                        "rejected",
                        "canceled"
                    ],
                    "name": "Port State",
                    "required": false,
                    "type": "string"
                },
                "scheduled_date": {
                    "description": "Requested scheduled date in gregorain timestamp",
                    "name": "Scheduled Date",
                    "required": false,
                    "type": "integer"
                },
                "transfer_date": {
                    "description": "Requested transfer date in gregorain timestamp",
                    "name": "Transfer Date",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "profile": {
            "description": "Defines user extended properties",
            "name": "User extended properties",
            "properties": {
                "addresses": {
                    "description": "To specify the components of the addresses",
                    "items": {
                        "properties": {
                            "address": {
                                "description": "To specify the address",
                                "name": "Address",
                                "required": false,
                                "type": "string"
                            },
                            "types": {
                                "description": "To specify types of the address",
                                "items": {
                                    "enum": [
                                        "dom",
                                        "postal",
                                        "intl",
                                        "parcel",
                                        "home",
                                        "work",
                                        "pref"
                                    ]
                                },
                                "name": "Address type",
                                "required": false,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "name": "Addresses",
                    "required": false,
                    "type": "array"
                },
                "assistant": {
                    "description": "To specify the user's assistant",
                    "name": "Assistant",
                    "required": false,
                    "type": "string"
                },
                "birthday": {
                    "description": "To specify the birth date of the user",
                    "name": "Birthday",
                    "required": false,
                    "type": "string"
                },
                "nicknames": {
                    "description": "To specify the text corresponding to the nickname of the user",
                    "items": {
                        "type": "string"
                    },
                    "name": "Nicknames",
                    "required": false,
                    "type": "array"
                },
                "note": {
                    "description": "To specify supplemental information or a comment that is associated with the user",
                    "name": "Note",
                    "required": false,
                    "type": "string"
                },
                "role": {
                    "description": "To specify the function or part played in a particular situation by the user",
                    "name": "Role",
                    "required": false,
                    "type": "string"
                },
                "sort-string": {
                    "description": "To specify the family name or given name text to be used for national-language-specific sorting of the FN and N types",
                    "name": "Sort string",
                    "required": false,
                    "type": "string"
                },
                "title": {
                    "description": "To specify the position or job of the user",
                    "name": "Title",
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        },
        "provisioner_v5": {
            "description": "Provisioner schema",
            "name": "Provisioner V5",
            "properties": {
                "brand": {
                    "default": "",
                    "description": "Brand of the phone",
                    "name": "Brand",
                    "required": true,
                    "type": "string"
                },
                "family": {
                    "default": "",
                    "description": "Family name of the phone",
                    "name": "Family",
                    "required": true,
                    "type": "string"
                },
                "model": {
                    "default": "",
                    "description": "Model name of the phone",
                    "name": "Model",
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Name of the phone",
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "settings": {
                    "description": "Phone's settings",
                    "name": "Settings",
                    "properties": {
                        "codecs": {
                            "description": "Phone's codecs",
                            "items": {
                                "properties": {
                                    "audio": {
                                        "description": "Audio codecs",
                                        "name": "Audio",
                                        "properties": {
                                            "primary_codec": {
                                                "description": "First codec",
                                                "name": "Primary Codec",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "secondary_codec": {
                                                "description": "Second codec",
                                                "name": "Secondary Codec",
                                                "required": false,
                                                "type": "string"
                                            }
                                        },
                                        "required": false,
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "name": "Codecs",
                            "type": "object"
                        },
                        "datetime": {
                            "description": "Date and time settings",
                            "name": "Date/Time",
                            "properties": {
                                "time": {
                                    "description": "Time settings",
                                    "name": "Time",
                                    "properties": {
                                        "timezone": {
                                            "description": "Phone's timezone",
                                            "name": "Timezone",
                                            "required": false,
                                            "type": "string"
                                        }
                                    },
                                    "required": false,
                                    "type": "object"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "lines": {
                            "description": "Phone lines",
                            "minItems": 1,
                            "name": "Lines",
                            "properties": {
                                "properties": {
                                    "advanced": {
                                        "description": "Advanced settings",
                                        "name": "advanced",
                                        "properties": {
                                            "expire": {
                                                "default": 360,
                                                "name": "Expire",
                                                "required": false,
                                                "type": "integer"
                                            },
                                            "srtp": {
                                                "default": false,
                                                "name": "srtp",
                                                "required": false,
                                                "type": "boolean"
                                            }
                                        },
                                        "required": false,
                                        "type": "object"
                                    },
                                    "basic": {
                                        "description": "Basic settings",
                                        "name": "Basic",
                                        "properties": {
                                            "display_name": {
                                                "description": "Friendly name for phone",
                                                "name": "Display Name",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "enabled": {
                                                "default": true,
                                                "description": "Enable line",
                                                "name": "Enabled",
                                                "required": false,
                                                "type": "boolean"
                                            }
                                        },
                                        "required": true,
                                        "type": "object"
                                    },
                                    "sip": {
                                        "description": "Sip settings",
                                        "name": "Sip",
                                        "properties": {
                                            "password": {
                                                "description": "Line's password",
                                                "name": "Password",
                                                "required": true,
                                                "type": "string"
                                            },
                                            "realm": {
                                                "description": "Line's Sip realm",
                                                "name": "Realm",
                                                "required": false,
                                                "type": "string"
                                            },
                                            "username": {
                                                "description": "Line's username",
                                                "name": "Username",
                                                "required": true,
                                                "type": "string"
                                            }
                                        },
                                        "required": true,
                                        "type": "object"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "required": true,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "qubicle_queues": {
            "description": "Qubicle queues",
            "name": "Qubicle Call Queue",
            "properties": {
                "agent_connect_timeout": {
                    "default": 15,
                    "description": "Amount of time in seconds that qubicle will wait for the agent to successfully answer a call.",
                    "minimum": 1,
                    "name": "Agent Connect Timeout",
                    "required": false,
                    "type": "integer"
                },
                "agent_wrapup_time": {
                    "default": 2,
                    "description": "Pre-defined wait period applied after an agent handles a customer call",
                    "minimum": 0,
                    "name": "Agent Wrapup Time",
                    "required": false,
                    "type": "integer"
                },
                "hold_treatment": {
                    "description": "Media ID (or appropriate media URI) of media to play while caller is on hold.",
                    "name": "Hold Treatment",
                    "required": false,
                    "type": "string"
                },
                "queue_name": {
                    "description": "A friendly name for the queue",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "queue_router": {
                    "default": "route_round_robin",
                    "description": "The queue router used for routing and delivering calls to recipients",
                    "enum": [
                        "route_round_robin",
                        "route_most_idle"
                    ],
                    "name": "Router",
                    "required": false,
                    "type": "string"
                },
                "queue_timeout": {
                    "default": 3600,
                    "description": "The maximum amount of time in seconds that a call will wait in queue.",
                    "minimum": 10,
                    "name": "Queue Timeout",
                    "required": false,
                    "type": "integer"
                },
                "queue_type": {
                    "default": "queue_basic",
                    "description": "The type of queue",
                    "enum": [
                        "queue_basic"
                    ],
                    "name": "Type",
                    "required": true,
                    "type": "string"
                },
                "tick_time": {
                    "default": 1000,
                    "description": "The time between delivery ticks in milliseconds",
                    "minimum": 250,
                    "name": "Tick Time",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "queue_update": {
            "description": "Schema for queue update request",
            "name": "Call Update",
            "properties": {
                "action": {
                    "description": "Action to perform",
                    "enum": [
                        "login",
                        "logout"
                    ],
                    "name": "Action",
                    "required": true,
                    "type": "string"
                },
                "queue_id": {
                    "description": "Queue Identifier",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Queue ID",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "queues": {
            "description": "Call Queues - FIFO call queues for serializing callers connecting to agents",
            "name": "Call Queue",
            "properties": {
                "agent_ring_timeout": {
                    "default": 15,
                    "description": "In seconds, how long to ring an agent before progressing to the next agent available",
                    "minimum": 1,
                    "name": "Agent Ring Timeout",
                    "required": false,
                    "type": "integer"
                },
                "agent_wrapup_time": {
                    "default": 0,
                    "description": "Pre-defined wait period applied after an agent handles a customer call",
                    "minimum": 0,
                    "name": "Agent Wrapup Time",
                    "required": false,
                    "type": "integer"
                },
                "announce": {
                    "description": "Media ID (or appropriate media URI) of media to play when caller is about to be connected.",
                    "name": "Annouce",
                    "required": false,
                    "type": "string"
                },
                "caller_exit_key": {
                    "default": "#",
                    "description": "Key caller can press while on hold to exit the queue and continue in the callflow",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "*",
                        "0",
                        "#"
                    ],
                    "name": "Caller Exit Key",
                    "required": false,
                    "type": "string"
                },
                "cdr_url": {
                    "description": "An optional HTTP URL to POST the CDR",
                    "format": "uri",
                    "name": "CDR Url",
                    "required": false,
                    "type": "string"
                },
                "connection_timeout": {
                    "default": 3600,
                    "description": "In seconds, how long to try to connect the caller before progressing past the queue callflow action",
                    "minimum": 0,
                    "name": "Connection Timeout",
                    "required": false,
                    "type": "integer"
                },
                "enter_when_empty": {
                    "default": true,
                    "description": "Allows a caller to enter a queue and wait when no agents are available",
                    "name": "Enter When Empty",
                    "required": false,
                    "type": "boolean"
                },
                "max_priority": {
                    "description": "Maximum possible priority level queue will support. Can not be redefined for existing queue.",
                    "maximum": 255,
                    "minimum": 0,
                    "name": "Maximum possible priority level",
                    "required": false,
                    "type": "integer"
                },
                "max_queue_size": {
                    "default": 0,
                    "description": "How many callers are allowed to wait on hold in the queue (0 for no limit)",
                    "name": "Maximum Queue Size",
                    "required": false,
                    "type": "integer"
                },
                "moh": {
                    "description": "Media ID (or appropriate media URI) of media to play while caller is on hold.",
                    "name": "Moh",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the queue",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "record_caller": {
                    "default": false,
                    "description": "When enabled, a caller's audio will be recorded",
                    "name": "Record Caller",
                    "required": false,
                    "type": "boolean"
                },
                "recording_url": {
                    "description": "An optional HTTP URL to PUT the call recording after the call ends (and should respond to GET for retrieving the audio data)",
                    "format": "uri",
                    "name": "Recording Url",
                    "required": false,
                    "type": "string"
                },
                "ring_simultaneously": {
                    "default": 1,
                    "description": "The number of agents to try in parallel when connecting a caller",
                    "minimum": 1,
                    "name": "Ring Simultaneously",
                    "required": false,
                    "type": "integer"
                },
                "strategy": {
                    "default": "round_robin",
                    "description": "The queue strategy for connecting agents to callers",
                    "enum": [
                        "round_robin",
                        "most_idle"
                    ],
                    "name": "Stategy",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "rates": {
            "description": "Defines a rate for a given prefix",
            "name": "Rate",
            "properties": {
                "carrier": {
                    "description": "Friendly name for the carrier providing this rate",
                    "name": "Carrier Name",
                    "required": false,
                    "type": "string"
                },
                "description": {
                    "description": "Friendly description of the rate",
                    "name": "Description",
                    "required": false,
                    "type": "string"
                },
                "direction": {
                    "default": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "Apply this rate based on the direction of the call (relative to FreeSWITCH)",
                    "items": {
                        "enum": [
                            "inbound",
                            "outbound"
                        ],
                        "type": "string"
                    },
                    "name": "Direction",
                    "required": false,
                    "type": "array"
                },
                "internal_rate_cost": {
                    "description": "The per-min rate charged by the upstream provider",
                    "minimum": 0,
                    "name": "Internal Cost",
                    "required": false,
                    "type": "number"
                },
                "iso_country_code": {
                    "description": "Country code this rate applies to",
                    "name": "Country Code",
                    "required": false,
                    "type": "string"
                },
                "options": {
                    "description": "List of options this rate is good for, to be matched against a customer's options",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Options",
                    "required": false,
                    "type": "array"
                },
                "prefix": {
                    "description": "E.164 prefix (ignoring the +)",
                    "name": "Prefix",
                    "required": true,
                    "type": "integer"
                },
                "rate_cost": {
                    "description": "The per-min rate charged to the downstream customer",
                    "minimum": 0,
                    "name": "Cost",
                    "required": true,
                    "type": "number"
                },
                "rate_increment": {
                    "default": 60,
                    "description": "The time slice, in seconds, to bill in.",
                    "minimum": 10,
                    "name": "Increment (seconds)",
                    "required": false,
                    "type": "integer"
                },
                "rate_minimum": {
                    "default": 60,
                    "description": "The minimum time slice, in seconds to bill a call",
                    "minimum": 10,
                    "name": "Minimum Increment (seconds)",
                    "required": false,
                    "type": "integer"
                },
                "rate_name": {
                    "description": "Friendly name of the rate",
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "rate_nocharge_time": {
                    "default": 0,
                    "description": "If the call duration is shorter than this threshold, the call is not billed",
                    "minimum": 0,
                    "name": "No Charge Time (seconds)",
                    "required": false,
                    "type": "integer"
                },
                "rate_surcharge": {
                    "default": 0,
                    "description": "The upfront cost of connecting the call",
                    "minimum": 0,
                    "name": "Surcharge",
                    "required": false,
                    "type": "number"
                },
                "routes": {
                    "default": [],
                    "description": "List of regexs that match valid DIDs for this rate",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Routes",
                    "required": false,
                    "type": "array"
                },
                "weight": {
                    "description": "Ordering against other rates, 1 being most preferred, 100 being least preferred",
                    "maximum": 100,
                    "minimum": 1,
                    "name": "Weight",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "resource_jobs": {
            "description": "Schema for resource jobs (bulk number uploads)",
            "name": "Resource Job",
            "properties": {
                "name": {
                    "description": "A friendly name for the job, if you like",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": false,
                    "type": "string"
                },
                "numbers": {
                    "description": "The listing of numbers to import to the account",
                    "items": {
                        "description": "The number to import",
                        "type": "string"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                },
                "resource_id": {
                    "description": "The Resource ID the numbers are coming from",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "resources": {
            "description": "Schema for resources",
            "name": "Resource",
            "properties": {
                "emergency": {
                    "default": false,
                    "description": "Determines if the resource represents emergency services",
                    "name": "Is Emergency?",
                    "required": false,
                    "type": "boolean"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the resource is currently enabled",
                    "name": "Is Enabled?",
                    "required": false,
                    "type": "boolean"
                },
                "flags": {
                    "default": [],
                    "description": "A list of flags that can be provided on the request and must match for the resource to be eligible",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Flags",
                    "required": false,
                    "type": "array"
                },
                "format_from_uri": {
                    "description": "When set to true requests to this resource will have a re-formated SIP From Header",
                    "name": "Format SIP From?",
                    "required": false,
                    "type": "boolean"
                },
                "from_uri_realm": {
                    "description": "When formating SIP From on outbound requests this can be used to override the realm",
                    "name": "SIP From Realm",
                    "required": false,
                    "type": "string"
                },
                "gateways": {
                    "description": "A list of gateways avaliable for this resource",
                    "items": {
                        "default": {},
                        "properties": {
                            "bypass_media": {
                                "description": "The resource gateway bypass media mode",
                                "name": "Is Media Direct?",
                                "required": false,
                                "type": "boolean"
                            },
                            "caller_id_type": {
                                "description": "The type of caller id to use",
                                "enum": [
                                    "internal",
                                    "external",
                                    "emergency"
                                ],
                                "name": "Caller ID Type",
                                "required": false,
                                "type": "string"
                            },
                            "channel_selection": {
                                "default": "ascending",
                                "description": "Automatic selection of the channel within the span: ascending starts at 1 and moves up; descending is the opposite",
                                "enum": [
                                    "ascending",
                                    "descending"
                                ],
                                "name": "Channel Selection (gateways)",
                                "required": false,
                                "type": "string"
                            },
                            "codecs": {
                                "description": "A list of single list codecs supported by this gateway (to support backward compatibilty)",
                                "items": {
                                    "enum": [
                                        "G729",
                                        "PCMU",
                                        "PCMA",
                                        "G722_16",
                                        "G722_32",
                                        "CELT_48",
                                        "CELT_64",
                                        "Speex",
                                        "GSM",
                                        "OPUS",
                                        "H261",
                                        "H263",
                                        "H264",
                                        "VP8"
                                    ],
                                    "type": "string"
                                },
                                "name": "Codecs",
                                "required": false,
                                "type": "array",
                                "uniqueItems": true
                            },
                            "custom_sip_headers": {
                                "default": {},
                                "name": "Custom SIP Header",
                                "required": false,
                                "type": "object"
                            },
                            "custom_sip_interface": {
                                "description": "The name of a custom SIP interface",
                                "name": "SIP Inteface",
                                "required": false,
                                "type": "string"
                            },
                            "emergency": {
                                "default": false,
                                "description": "Determines if the resource gateway represents emergency services",
                                "name": "Is Emergency?",
                                "required": false,
                                "type": "boolean"
                            },
                            "enabled": {
                                "default": true,
                                "description": "Determines if the resource gateway is currently enabled",
                                "name": "Enabled",
                                "required": false,
                                "type": "boolean"
                            },
                            "endpoint_type": {
                                "default": "sip",
                                "description": "What type of endpoint is this gateway",
                                "enum": [
                                    "sip",
                                    "freetdm",
                                    "skype",
                                    "amqp"
                                ],
                                "name": "Endpoint Type",
                                "required": false,
                                "type": "string"
                            },
                            "force_port": {
                                "default": false,
                                "description": "Allow request only from this port",
                                "name": "Force port",
                                "required": false,
                                "type": "boolean"
                            },
                            "format_from_uri": {
                                "description": "When set to true requests to this resource gateway will have a re-formated SIP From Header",
                                "name": "Format SIP From?",
                                "required": false,
                                "type": "boolean"
                            },
                            "from_uri_realm": {
                                "description": "When formating SIP From on outbound requests this can be used to override the realm",
                                "name": "SIP From Realm",
                                "required": false,
                                "type": "string"
                            },
                            "invite_format": {
                                "default": "route",
                                "description": "The format of the DID needed by the underlying hardware/gateway",
                                "enum": [
                                    "route",
                                    "username",
                                    "e164",
                                    "npan",
                                    "1npan"
                                ],
                                "name": "Invite Format",
                                "required": false,
                                "type": "string"
                            },
                            "media": {
                                "description": "The media parameters for the resource gateway",
                                "name": "Media Options",
                                "properties": {
                                    "fax_option": {
                                        "description": "Support T.38",
                                        "name": "Is T.38 Supported?",
                                        "required": false,
                                        "type": "boolean"
                                    }
                                },
                                "required": false,
                                "type": "object"
                            },
                            "password": {
                                "description": "SIP authentication password",
                                "maxLength": 32,
                                "name": "Password",
                                "required": false,
                                "type": "string"
                            },
                            "port": {
                                "default": 5060,
                                "description": "This resource gateway port",
                                "name": "Port",
                                "required": false,
                                "type": "integer"
                            },
                            "prefix": {
                                "description": "A string to prepend to the dialed number or capture group of the matching rule",
                                "maxLength": 64,
                                "name": "Prefix",
                                "required": false,
                                "type": "string"
                            },
                            "progress_timeout": {
                                "description": "The progress timeout to apply to the resource gateway",
                                "name": "Progress Timeout",
                                "required": false,
                                "type": "integer"
                            },
                            "realm": {
                                "description": "This resource gateway authentication realm",
                                "maxLength": 64,
                                "name": "Realm",
                                "required": false,
                                "type": "string"
                            },
                            "route": {
                                "description": "A staticly configured SIP URI to route all call to",
                                "name": "Route",
                                "required": false,
                                "type": "string"
                            },
                            "server": {
                                "description": "This resource gateway server",
                                "maxLength": 64,
                                "minLength": 1,
                                "name": "Server",
                                "required": true,
                                "type": "string"
                            },
                            "skype_interface": {
                                "description": "The name of the Skype interface to route the call over",
                                "name": "Skype Interface",
                                "required": false,
                                "type": "string"
                            },
                            "skype_rr": {
                                "default": true,
                                "description": "Determines whether to round-robin calls amongst all interfaces (overrides \"skype_interface\" setting)",
                                "name": "Skype Round-Robin",
                                "required": false,
                                "type": "boolean"
                            },
                            "span": {
                                "description": "The identity of the hardware on the media server",
                                "name": "Span",
                                "required": false,
                                "type": "string"
                            },
                            "suffix": {
                                "description": "A string to append to the dialed number or capture group of the matching rule",
                                "maxLength": 64,
                                "name": "Suffix",
                                "required": false,
                                "type": "string"
                            },
                            "username": {
                                "description": "SIP authentication username",
                                "maxLength": 32,
                                "name": "Username",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "required": true,
                    "type": "array"
                },
                "grace_period": {
                    "default": 5,
                    "description": "The amount of time, in seconds, to wait before starting another resource",
                    "maximum": 20,
                    "minimum": 1,
                    "name": "Grace Period",
                    "required": false,
                    "type": "integer"
                },
                "media": {
                    "default": {},
                    "description": "The default resouce media parameters applied if not present to all specified gateways",
                    "name": "Default Resource Media Parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The default audio media parameters",
                            "name": "Audio Options",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of default codecs to use",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "name": "Codecs",
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "name": "Is Media Direct?",
                            "required": false,
                            "type": "boolean"
                        },
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "video": {
                            "default": {},
                            "description": "The default video media parameters",
                            "name": "Video Options",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of default codecs to use",
                                    "items": {
                                        "enum": [
                                            "H261",
                                            "H263",
                                            "H264",
                                            "VP8"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the resource",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "require_flags": {
                    "description": "When set to true this resource is ignored if the request does not specify outbound flags",
                    "name": "Require Flags?",
                    "required": false,
                    "type": "boolean"
                },
                "rules": {
                    "default": [],
                    "description": "A list of regular expressions of which one must match for the rule to be eligible, they can optionally contain capture groups",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "name": "Rules",
                    "required": false,
                    "type": "array"
                },
                "weight_cost": {
                    "default": 50,
                    "description": "A value between 0 and 100 that determines the order of resources when multiple can be used",
                    "maximum": 100,
                    "minimum": 0,
                    "name": "Weight Cost",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "service_plans": {
            "description": "Describes services offered to sub-accounts",
            "name": "Service Plan",
            "properties": {
                "bookkeepers": {
                    "$ref": "bookkeepers",
                    "type": "object"
                },
                "description": {
                    "description": "Describes the service plan offering",
                    "required": false,
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the service plan",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Service Plan Name",
                    "required": true,
                    "type": "string"
                },
                "plan": {
                    "description": "Outlines the service plan for various services",
                    "required": true,
                    "type": "object"
                }
            },
            "required": false,
            "type": "object"
        },
        "shared_auth": {
            "additionalProperties": false,
            "description": "Provides a local auth-token via a shared auth-token",
            "name": "Shared Auth",
            "properties": {
                "shared_auth": {
                    "description": "The shared token",
                    "maxLength": 64,
                    "minLength": 64,
                    "name": "Token",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "sms": {
            "description": "sms document",
            "name": "sms",
            "properties": {
                "body": {
                    "description": "text message",
                    "maxLength": 700,
                    "minLength": 1,
                    "name": "body",
                    "required": true,
                    "type": "string"
                },
                "from": {
                    "description": "caller-id-number, taken from user if absent",
                    "name": "From",
                    "required": false,
                    "type": "string"
                },
                "scheduled": {
                    "description": "The timestamp to start delivering the message",
                    "name": "Scheduled Delivery Date",
                    "required": false,
                    "type": "integer"
                },
                "to": {
                    "description": "callee-id-number",
                    "name": "To",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "temporal_rules": {
            "description": "Schema for a temporal rules",
            "name": "Temporal Rule",
            "properties": {
                "cycle": {
                    "description": "The recurrence cycle for this rule",
                    "enum": [
                        "date",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                    ],
                    "name": "Cycle",
                    "required": true,
                    "type": "string"
                },
                "days": {
                    "description": "The recurrence days for this rule",
                    "items": {
                        "maximum": 31,
                        "minimum": 1,
                        "required": false,
                        "type": "integer"
                    },
                    "name": "Days",
                    "required": false,
                    "type": "array"
                },
                "interval": {
                    "default": 1,
                    "description": "The recurrence interval for this rule",
                    "minimum": 1,
                    "name": "Interval",
                    "required": false,
                    "type": "integer"
                },
                "month": {
                    "description": "The recurrence month for this rule",
                    "maximum": 12,
                    "minimum": 1,
                    "name": "Month",
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "A friendly name for the temporal rule",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "ordinal": {
                    "description": "The recurrence ordinal for this rule",
                    "enum": [
                        "every",
                        "first",
                        "second",
                        "third",
                        "fourth",
                        "fifth",
                        "last"
                    ],
                    "name": "Ordinal",
                    "required": false,
                    "type": "string"
                },
                "start_date": {
                    "default": 62586115200,
                    "description": "The date that any recurrence should be calculated as starting on",
                    "name": "Start Date",
                    "required": false,
                    "type": "integer"
                },
                "time_window_start": {
                    "description": "Seconds from the start of a day to stop considering this rule valid",
                    "maximum": 86400,
                    "minimum": 0,
                    "name": "Time Window Start",
                    "required": false,
                    "type": "integer"
                },
                "wdays": {
                    "description": "The recurrence weekdays for this rule",
                    "items": {
                        "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "wensday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                        ],
                        "type": "string"
                    },
                    "name": "Week Days",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "temporal_rules_sets": {
            "description": "Schema for a temporal rules sets",
            "name": "Temporal Rule Set",
            "properties": {
                "name": {
                    "description": "A friendly name for the temporal rule set",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "temporal_rules": {
                    "description": "Rules",
                    "items": {
                        "required": false,
                        "type": "string"
                    },
                    "minItems": 1,
                    "name": "Temporal Rules",
                    "required": false,
                    "type": "array"
                }
            },
            "required": true,
            "type": "object"
        },
        "token_restrictions": {
            "description": "Schema for token restrictions",
            "name": "Token restrictions",
            "properties": {
                "restrictions": {
                    "patternProperties": {
                        "^\\w+$": {
                            "description": "Name of athentication metod used when creating token. \"_\" for match any auth method",
                            "name": "Auth method",
                            "patternProperties": {
                                "^\\w+$": {
                                    "description": "User privelege level. \"_\" for match any priv level",
                                    "name": "User priv level",
                                    "patternProperties": {
                                        "^\\w+$": {
                                            "items": {
                                                "description": "Endpoint (first path token) to wich apply restrictions. \"_\" for match any endpoint",
                                                "name": "Endpoint",
                                                "properties": {
                                                    "allowed_accounts": {
                                                        "description": "Account allowed to match this item",
                                                        "items": {
                                                            "required": false,
                                                            "type": "string"
                                                        },
                                                        "name": "Allowed accounts",
                                                        "required": false,
                                                        "type": "array",
                                                        "uniqueItems": true
                                                    },
                                                    "rules": {
                                                        "description": "Rules applied to endpoint parameters",
                                                        "name": "Rules",
                                                        "patternProperties": {
                                                            "^[\\w/#*]+$": {
                                                                "items": {
                                                                    "enum": [
                                                                        "GET",
                                                                        "PUT",
                                                                        "POST",
                                                                        "PATCH",
                                                                        "DELETE",
                                                                        "_"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "name": "verbs",
                                                                "requred": false,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            }
                                                        },
                                                        "requred": false,
                                                        "type": "object"
                                                    }
                                                },
                                                "required": false,
                                                "type": "object"
                                            },
                                            "required": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": true,
                                    "type": "object"
                                }
                            },
                            "required": true,
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "trunkstore": {
            "description": "Trunkstore configuration document - this is old stuff; do not recommend building off this if possible",
            "id": "http://json-schema.org/draft-03/schema#",
            "properties": {
                "account": {
                    "description": "Information that applies to the account as a whole",
                    "properties": {
                        "auth_realm": {
                            "description": "The realm any device in the account will use to authenticate with",
                            "minLength": 1,
                            "required": true,
                            "type": "string"
                        },
                        "caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "credits": {
                            "properties": {
                                "prepay": {
                                    "required": true,
                                    "type": "number"
                                }
                            },
                            "required": true,
                            "type": "object"
                        },
                        "emergency_caller_id": {
                            "properties": {
                                "cid_name": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                },
                                "cid_number": {
                                    "maxLength": 35,
                                    "minLength": 1,
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "trunks": {
                            "description": "The number of two-way trunks this account has purchased",
                            "minimum": 0,
                            "required": true,
                            "type": "integer"
                        }
                    },
                    "required": true,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Trunk level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "Human-friendly name of the trunkstore account",
                    "required": true,
                    "type": "string"
                },
                "servers": {
                    "default": [],
                    "desciption": "What servers will be allowed to make/receive calls via this account",
                    "items": {
                        "properties": {
                            "DIDs": {
                                "patternProperties": {
                                    "^\\+1(\\d{10})$": {
                                        "properties": {
                                            "caller_id": {
                                                "properties": {
                                                    "cid_name": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    },
                                                    "cid_number": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "required": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failover": {
                                                "description": "Route inbound call to another destination if this server fails to handle the call",
                                                "properties": {
                                                    "e164": {
                                                        "description": "An E.164 formatted DID to dial for failover",
                                                        "type": "string"
                                                    },
                                                    "sip": {
                                                        "description": "A SIP URI (sip:user@host) to call for failover",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "force_outbound": {
                                                "default": false,
                                                "type": "boolean"
                                            },
                                            "options": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "auth": {
                                "properties": {
                                    "auth_method": {
                                        "description": "What type of auth mechanism to use",
                                        "enum": [
                                            "password"
                                        ],
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_password": {
                                        "description": "Password of the user@auth_realm",
                                        "minLength": 1,
                                        "required": true,
                                        "type": "string"
                                    },
                                    "auth_user": {
                                        "description": "Username for authentication",
                                        "minLength": 1,
                                        "required": true,
                                        "type": "string"
                                    }
                                },
                                "required": true,
                                "type": "object"
                            },
                            "name": {
                                "description": "Human-friendly name of the server",
                                "minLength": 1,
                                "type": "string"
                            },
                            "options": {
                                "caller_id": {
                                    "properties": {
                                        "cid_name": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "cid_number": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delay": {
                                    "default": 0,
                                    "description": "The time, in seconds, to wait before attempting to call the server",
                                    "type": "integer"
                                },
                                "enabled": {
                                    "default": true,
                                    "description": "Is the server ready for sending and receiving calls",
                                    "type": "boolean"
                                },
                                "failover": {
                                    "description": "Route inbound call to another destination if this server fails to handle the call",
                                    "properties": {
                                        "e164": {
                                            "description": "An E.164 formatted DID to dial for failover",
                                            "type": "string"
                                        },
                                        "sip": {
                                            "description": "A SIP URI (sip:user@host) to call for failover",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "force_outbound": {
                                    "default": false,
                                    "description": "If true, will send the call over configured carriers instead of to the server (as opposed to the 'enabled' flag, which will reject the calls)",
                                    "type": "boolean"
                                },
                                "ignore_early_media": {
                                    "type": "boolean"
                                },
                                "inbound_format": {
                                    "default": "npan",
                                    "description": "Determines how the INVITE is sent to the server",
                                    "enum": [
                                        "e164",
                                        "npan",
                                        "1npan",
                                        "username"
                                    ],
                                    "type": "string"
                                },
                                "media_handling": {
                                    "default": "bypass",
                                    "description": "Determine whether the switch should be in the media path or not",
                                    "enum": [
                                        "process",
                                        "bypass"
                                    ],
                                    "type": "string"
                                },
                                "progress_timeout": {
                                    "description": "The time, in seconds, to wait for the server to progress in the call, before trying an optionally defined failover route or terminating the call",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "sip_headers": {
                                    "description": "List of arbitrary SIP headers to add to the INVITE",
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "description": "The time, in seconds, to wait for an answer from the server",
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "The type of the document (pvt_type in Crossbar docs)",
                    "enum": [
                        "sys_info"
                    ],
                    "required": true,
                    "type": "string"
                }
            }
        },
        "ubiquiti_auth": {
            "description": "Provides an auth-token via Ubiquiti's SSO",
            "name": "Unbiquit Auth",
            "properties": {
                "password": {
                    "description": "Ubiquiti SSO Password",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Password",
                    "required": true,
                    "type": "string"
                },
                "username": {
                    "description": "Ubiquiti SSO Username",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Username",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth": {
            "description": "Provides an auth-token via user credentials",
            "name": "User Auth",
            "properties": {
                "account_name": {
                    "description": "The account name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Account Name",
                    "required": false,
                    "type": "string"
                },
                "account_realm": {
                    "description": "The account realm of the user",
                    "format": "uri",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Account Realm",
                    "required": false,
                    "type": "string"
                },
                "credentials": {
                    "description": "A hash of the uses credentials",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Credentials",
                    "required": true,
                    "type": "string"
                },
                "method": {
                    "default": "md5",
                    "description": "The hash method",
                    "enum": [
                        "md5",
                        "sha"
                    ],
                    "name": "Method",
                    "required": false,
                    "type": "string"
                },
                "phone_number": {
                    "description": "A phone number assigned to the users account",
                    "maxLength": 64,
                    "minLength": 1,
                    "name": "Phone Number",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth_recovery": {
            "description": "Send a reset-your-password email via user credentials",
            "name": "Password Recovery",
            "properties": {
                "account_name": {
                    "description": "The account name of the user",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "account_realm": {
                    "description": "The account realm of the user",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "phone_number": {
                    "description": "A phone number assigned to the user's account",
                    "maxLength": 64,
                    "minLength": 1,
                    "required": false,
                    "type": "string"
                },
                "ui_url": {
                    "description": "The UI's root URL",
                    "maxLength": 2000,
                    "minLength": 14,
                    "required": true,
                    "type": "string"
                },
                "username": {
                    "description": "The user's username",
                    "maxLength": 254,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "user_auth_recovery_reset": {
            "description": "Request a password reset from a trusted source",
            "name": "Password Reset",
            "properties": {
                "reset_id": {
                    "description": "The UUID that is part of the password-reset link",
                    "pattern": "^[a-fA-F0-9]{256}$",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "users": {
            "description": "Schema for a user",
            "name": "User",
            "properties": {
                "call_forward": {
                    "description": "The device call forward parameters",
                    "name": "Call Forwarding Parameters",
                    "properties": {
                        "direct_calls_only": {
                            "default": false,
                            "description": "Determines if the calls that are not directly sent to the device should be forwarded",
                            "name": "Direct Calls Only?",
                            "required": false,
                            "type": "boolean"
                        },
                        "enabled": {
                            "default": false,
                            "description": "Determines if the call forwarding should be used",
                            "name": "Is Enabled?",
                            "required": false,
                            "type": "boolean"
                        },
                        "failover": {
                            "default": false,
                            "description": "Enable the call-forwarding parameters if the device is offline",
                            "name": "Use if Device Offline?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "default": true,
                            "description": "The option to determine if early media from the call forwarded number should ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "keep_caller_id": {
                            "default": true,
                            "description": "Determines if the caller id is kept when the call is forwarded, if not the devices caller id is used",
                            "name": "Keep Original Caller ID?",
                            "required": false,
                            "type": "boolean"
                        },
                        "number": {
                            "description": "The number to forward calls to",
                            "maxLength": 35,
                            "name": "Number",
                            "required": false,
                            "type": "string"
                        },
                        "require_keypress": {
                            "default": true,
                            "description": "Determines if the callee is prompted to press 1 to accept the call",
                            "name": "Require Keypress?",
                            "required": false,
                            "type": "boolean"
                        },
                        "substitute": {
                            "default": true,
                            "description": "Determines if the call forwarding replaces the device",
                            "name": "Substitute Device?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "call_restriction": {
                    "additionalProperties": {
                        "properties": {
                            "action": {
                                "description": "If set to deny all calls of this type will be rejected.  If set to inherit the user/device rules apply",
                                "enum": [
                                    "inherit",
                                    "deny"
                                ],
                                "name": "Action",
                                "required": false,
                                "type": "string"
                            }
                        },
                        "required": false,
                        "type": "object"
                    },
                    "default": {},
                    "description": "Device level call restrictions for each available number classification",
                    "name": "Call Restrictions",
                    "required": false,
                    "type": "object"
                },
                "call_waiting": {
                    "$ref": "call_waiting"
                },
                "caller_id": {
                    "$ref": "caller_id",
                    "default": {},
                    "description": "The device caller ID parameters",
                    "required": false,
                    "type": "object"
                },
                "contact_list": {
                    "default": {},
                    "name": "Contect List Parameters",
                    "properties": {
                        "exclude": {
                            "description": "If set to true the device is excluded from the contact list",
                            "name": "Is Excluded?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "dial_plan": {
                    "$ref": "dialplans",
                    "default": {},
                    "description": "A list of rules used to modify dialed numbers",
                    "name": "Dialplan",
                    "required": false,
                    "type": "object"
                },
                "directories": {
                    "description": "Provides the mappings for what directory the user is a part of (the key), and what callflow (the value) to invoke if the user is selected by the caller.",
                    "name": "Directories",
                    "required": false,
                    "type": "object"
                },
                "do_not_disturb": {
                    "name": "DND Parameters",
                    "properties": {
                        "enabled": {
                            "description": "Is do-not-disturb enabled for this user?",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "email": {
                    "description": "The email of the user",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1,
                    "name": "Email",
                    "required": false,
                    "type": "string"
                },
                "enabled": {
                    "default": true,
                    "description": "Determines if the user is currently enabled",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "first_name": {
                    "description": "The first name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "First Name",
                    "required": true,
                    "type": "string"
                },
                "hotdesk": {
                    "default": {},
                    "description": "The user hotdesk parameters",
                    "name": "Hotdesk Parameters",
                    "properties": {
                        "enabled": {
                            "default": false,
                            "description": "Determines if the user has hotdesking enabled",
                            "name": "Enabled?",
                            "required": false,
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The users hotdesk id",
                            "maxLength": 15,
                            "name": "ID",
                            "required": false,
                            "type": "string"
                        },
                        "keep_logged_in_elsewhere": {
                            "default": false,
                            "description": "Determines if user should be able to login to mutliple phones simultaneously",
                            "name": "Keep Logged (hotdesk)",
                            "required": false,
                            "type": "boolean"
                        },
                        "pin": {
                            "description": "The users hotdesk pin number",
                            "maxLength": 15,
                            "minLength": 4,
                            "name": "Pin",
                            "required": false,
                            "type": "string"
                        },
                        "require_pin": {
                            "default": false,
                            "description": "Determines if user requires a pin to change the hotdesk state",
                            "name": "Require Pin?",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "language": {
                    "description": "The language for this user",
                    "name": "Language",
                    "required": false,
                    "type": "string"
                },
                "last_name": {
                    "description": "The last name of the user",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Last Name",
                    "required": true,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The device media parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "audio": {
                            "default": {},
                            "description": "The audio media parameters",
                            "name": "Audio Options",
                            "properties": {
                                "codecs": {
                                    "default": [
                                        "PCMU"
                                    ],
                                    "description": "A list of audio codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "OPUS",
                                            "CELT@32000h",
                                            "G7221@32000h",
                                            "G7221@16000h",
                                            "G722",
                                            "speex@32000h",
                                            "speex@16000h",
                                            "PCMU",
                                            "PCMA",
                                            "G729",
                                            "GSM",
                                            "CELT@48000h",
                                            "CELT@64000h",
                                            "G722_16",
                                            "G722_32",
                                            "CELT_48",
                                            "CELT_64",
                                            "Speex",
                                            "speex"
                                        ],
                                        "type": "string"
                                    },
                                    "name": "Codecs",
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "bypass_media": {
                            "description": "Default bypass media mode",
                            "enum": [
                                true,
                                false,
                                "auto"
                            ],
                            "name": "Is Media Direct?",
                            "required": false,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "warning": "The string type is deprecated, please use this as a boolean"
                        },
                        "encryption": {
                            "default": {},
                            "name": "Encryption Parameters",
                            "properties": {
                                "enforce_security": {
                                    "default": false,
                                    "name": "Is Encryption Enabled?",
                                    "required": false,
                                    "type": "boolean"
                                },
                                "methods": {
                                    "default": [],
                                    "items": {
                                        "enum": [
                                            "zrtp",
                                            "srtp"
                                        ],
                                        "required": false,
                                        "type": "string"
                                    },
                                    "name": "Supported Encryption Types",
                                    "required": false,
                                    "type": "array"
                                }
                            },
                            "required": false,
                            "type": "object"
                        },
                        "fax_option": {
                            "description": "Support T.38",
                            "name": "Is T.38 Supported?",
                            "required": false,
                            "type": "boolean"
                        },
                        "ignore_early_media": {
                            "description": "The option to determine if early media from the device should always be ignored",
                            "name": "Ignore Early Media?",
                            "required": false,
                            "type": "boolean"
                        },
                        "progress_timeout": {
                            "description": "The progress timeout to apply to the device",
                            "name": "Progress Timeout (seconds)",
                            "required": false,
                            "type": "integer"
                        },
                        "video": {
                            "default": {},
                            "description": "The video media parameters",
                            "name": "Video Options",
                            "properties": {
                                "codecs": {
                                    "default": [],
                                    "description": "A list of video codecs the device supports",
                                    "items": {
                                        "enum": [
                                            "H261",
                                            "H263",
                                            "H264",
                                            "VP8"
                                        ],
                                        "type": "string"
                                    },
                                    "required": false,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "metaflows": {
                    "$ref": "metaflows",
                    "description": "The device metaflow parameters",
                    "name": "Metaflow Parameters"
                },
                "music_on_hold": {
                    "default": {},
                    "description": "The music on hold parameters used if not a property of the device owner",
                    "name": "Music on Hold",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "presence_id": {
                    "description": "Static presence ID (used instead of SIP username)",
                    "name": "Presence ID",
                    "required": false,
                    "type": "string"
                },
                "priv_level": {
                    "default": "user",
                    "description": "The privilege level of the user",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "name": "Priv Level",
                    "required": false,
                    "type": "string"
                },
                "profile": {
                    "$ref": "profile",
                    "default": {},
                    "description": "User's profile data",
                    "required": false,
                    "type": "object"
                },
                "pronounced_name": {
                    "description": "Name pronounced by user to introduce himself to conference members",
                    "name": "Pronounced name",
                    "properties": {
                        "media_id": {
                            "description": "The ID of a media object that should be used as the music on hold",
                            "maxLength": 128,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "require_password_update": {
                    "default": false,
                    "description": "UI flag that the user should update their password.",
                    "name": "Require Password Update",
                    "required": false,
                    "type": "boolean"
                },
                "ringtones": {
                    "default": {},
                    "name": "Ringtone Parameters",
                    "properties": {
                        "external": {
                            "description": "The alert info SIP header added when the call is from internal sources",
                            "maxLength": 256,
                            "name": "External",
                            "required": false,
                            "type": "string"
                        },
                        "internal": {
                            "description": "The alert info SIP header added when the call is from external sources",
                            "maxLength": 256,
                            "name": "Internal",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "timezone": {
                    "description": "User's timezone",
                    "name": "Timezone",
                    "required": false,
                    "type": "string"
                },
                "username": {
                    "description": "The GUI login username - alpha-numeric, dashes, at symbol, periods, plusses, and underscores allowed",
                    "maxLength": 256,
                    "minLength": 1,
                    "name": "Username",
                    "pattern": "^([+@.\\w_-]+)$",
                    "required": false,
                    "type": "string"
                },
                "verified": {
                    "default": false,
                    "description": "Determines if the user has been verified",
                    "name": "Verified",
                    "required": false,
                    "type": "boolean"
                },
                "vm_to_email_enabled": {
                    "default": true,
                    "description": "Determines if the user would like voicemails emailed to them",
                    "name": "VM To Emain Enabled",
                    "type": "boolean"
                },
                "voicemail": {
                    "properties": {
                        "notify": {
                            "properties": {
                                "callback": {
                                    "$ref": "notify.callback"
                                }
                            },
                            "required": false,
                            "type": "object"
                        }
                    },
                    "required": false,
                    "type": "object"
                }
            },
            "required": true,
            "type": "object"
        },
        "vmboxes": {
            "description": "Schema for a voicemail box",
            "name": "Voicemail Box",
            "properties": {
                "check_if_owner": {
                    "default": true,
                    "description": "Determines if when the user calls their own voicemail they should be prompted to sign in",
                    "name": "Check if Owner?",
                    "required": false,
                    "type": "boolean"
                },
                "delete_after_notify": {
                    "default": false,
                    "description": "Delete the voicemail after the notification has been sent",
                    "name": "Delete after Notify?",
                    "required": false,
                    "type": "boolean",
                    "warning": "Voicemail is not stored in the database if this option is selected"
                },
                "is_setup": {
                    "default": false,
                    "description": "Determines if the user has completed the initial configuration",
                    "name": "Is Setup?",
                    "required": false,
                    "type": "boolean"
                },
                "mailbox": {
                    "description": "The voicemail box number",
                    "maxLength": 30,
                    "minLength": 1,
                    "required": true,
                    "type": "string"
                },
                "media": {
                    "default": {},
                    "description": "The media (prompt) parameters",
                    "name": "Media Parameters",
                    "properties": {
                        "unavailable": {
                            "description": "The ID of a media object that should be used as the unavailable greeting",
                            "maxLength": 32,
                            "minLength": 32,
                            "name": "Media ID",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "name": {
                    "description": "A friendly name for the voicemail box",
                    "maxLength": 128,
                    "minLength": 1,
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "not_configurable": {
                    "default": false,
                    "description": "Determines if the user can configure this voicemail.",
                    "name": "Is configurable?",
                    "required": false,
                    "type": "boolean"
                },
                "notify": {
                    "properties": {
                        "callback": {
                            "$ref": "notify.callback"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "notify_email_addresses": {
                    "default": [],
                    "description": "List of email addresses to send notifications to (in addition to owner's email, if any)",
                    "items": {
                        "format": "email",
                        "type": "string"
                    },
                    "name": "Email Addresses",
                    "required": false,
                    "type": "array"
                },
                "owner_id": {
                    "description": "The ID of the user object that 'owns' the voicemail box",
                    "maxLength": 32,
                    "minLength": 32,
                    "name": "Owner ID",
                    "required": false,
                    "type": "string"
                },
                "pin": {
                    "description": "The pin number for the voicemail box",
                    "maxLength": 15,
                    "minLength": 4,
                    "name": "Pin",
                    "required": false,
                    "type": "string"
                },
                "require_pin": {
                    "default": false,
                    "description": "Determines if a pin is required to check the voicemail from the users devices",
                    "name": "Require Pin?",
                    "required": false,
                    "type": "boolean"
                },
                "save_after_notify": {
                    "default": false,
                    "description": "Save the voicemail after the notification has been sent",
                    "name": "Save after Notify?",
                    "required": false,
                    "type": "boolean",
                    "warning": "This setting will override delete_after_notify"
                },
                "skip_greeting": {
                    "default": false,
                    "description": "Determines if the greeting should be skipped",
                    "name": "Skip Greeting?",
                    "required": false,
                    "type": "boolean"
                },
                "skip_instructions": {
                    "default": false,
                    "description": "Determines if the instructions after the greeting and prior to composing a message should be played",
                    "name": "Skip Instructions?",
                    "required": false,
                    "type": "boolean"
                },
                "timezone": {
                    "description": "The default timezone",
                    "maxLength": 32,
                    "minLength": 5,
                    "name": "Timezone",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "webhook_attempts": {
            "description": "Log of an attempt to send a webhook to a third-party server",
            "name": "Webhook Attempt",
            "properties": {
                "client_error": {
                    "description": "Kazoo-side error string, if any",
                    "type": "string"
                },
                "hook_id": {
                    "description": "Id of the hook attempted",
                    "name": "Hook Id",
                    "required": true,
                    "type": "string"
                },
                "reason": {
                    "description": "short reason for the failure",
                    "type": "string"
                },
                "response_body": {
                    "description": "HTTP response body received, if any",
                    "type": "string"
                },
                "response_code": {
                    "description": "HTTP response code received, if any",
                    "type": "string"
                },
                "result": {
                    "description": "Whether the attempt succeeded or not",
                    "enum": [
                        "success",
                        "failure"
                    ],
                    "required": true,
                    "type": "string"
                },
                "retries_left": {
                    "description": "How many retries were left after this attempt",
                    "type": "integer"
                }
            },
            "required": true,
            "type": "object"
        },
        "webhooks": {
            "description": "Web Hooks are subscriptions to allowed events that, when the event occurs, the event data is sent to the uri set in the Web Hook document.",
            "name": "Webhook",
            "properties": {
                "custom_data": {
                    "additionalProperties": {
                        "required": false,
                        "type": "string"
                    },
                    "description": "These properties will be added to the event and will overwrite existing values.",
                    "name": "Custom Data",
                    "required": false,
                    "type": "object"
                },
                "enabled": {
                    "default": true,
                    "description": "Is the webhook enabled and running",
                    "name": "Enabled",
                    "required": false,
                    "type": "boolean"
                },
                "hook": {
                    "description": "The trigger event for a request being made to 'callback_uri'.",
                    "required": true,
                    "type": "string"
                },
                "http_verb": {
                    "default": "post",
                    "description": "What HTTP method to use when contacting the server",
                    "enum": [
                        "get",
                        "post"
                    ],
                    "name": "Method",
                    "type": "string"
                },
                "name": {
                    "description": "A friendly name for the webhook",
                    "name": "Name",
                    "required": true,
                    "type": "string"
                },
                "retries": {
                    "default": 2,
                    "description": "Retry the request this many times (if it fails)",
                    "maximum": 4,
                    "minimum": 0,
                    "name": "Retries",
                    "required": false,
                    "type": "integer"
                },
                "uri": {
                    "description": "The 3rd party URI to call out to an event",
                    "format": "uri",
                    "name": "URI",
                    "required": true,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "whitelabels": {
            "description": "Whitelabel settings",
            "name": "Whitelabel",
            "properties": {
                "company_name": {
                    "description": "The company name to display to users",
                    "name": "Company Name",
                    "required": false,
                    "type": "string"
                },
                "domain": {
                    "description": "This is the whitelabeled domain that users will be entering to reach the UI",
                    "format": "uri",
                    "name": "Domain",
                    "required": false,
                    "type": "string"
                },
                "fake_api_url": {
                    "description": "This is a whitelabeled API URL, primarily used by the developer application",
                    "format": "uri",
                    "name": "API URL",
                    "required": false,
                    "type": "string"
                },
                "hide_credits": {
                    "default": false,
                    "description": "When checkef this hides the credits",
                    "name": "Hide Credits?",
                    "required": false,
                    "type": "boolean"
                },
                "hide_powered": {
                    "default": false,
                    "description": "When checked this hides the powered by 2600hz on the bottom right",
                    "name": "Hide Powered?",
                    "required": false,
                    "type": "boolean"
                },
                "hide_registration": {
                    "default": false,
                    "description": "When checked this hides the ability to register for a new account",
                    "name": "Hide Registration?",
                    "required": false,
                    "type": "boolean"
                },
                "inbound_trunks_price": {
                    "description": "The price to show for inbound trunks, this is currently only for display purposes",
                    "name": "Inbound Trunk Price",
                    "required": false,
                    "type": "string"
                },
                "nav": {
                    "description": "Properties related to navigation in the UI",
                    "name": "Navigation Parameters",
                    "properties": {
                        "help": {
                            "description": "The URL to use when the help link is clicked",
                            "format": "uri",
                            "name": "Help URL",
                            "required": false,
                            "type": "string"
                        },
                        "learn_more": {
                            "description": "The URL to use when the 'Learn More!' link is clicked",
                            "format": "uri",
                            "name": "Learn More URL",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "outbound_trunks_price": {
                    "description": "The price to show for outbound trunks, this is currently only for display purposes",
                    "name": "Outbound Trunk Price",
                    "required": false,
                    "type": "string"
                },
                "port": {
                    "description": "Parameters releated to whitelabeling port requests",
                    "name": "Port Paramaters",
                    "properties": {
                        "features": {
                            "description": "The URL to use when the features link is clicked",
                            "format": "uri",
                            "name": "Features URL",
                            "required": false,
                            "type": "string"
                        },
                        "loa": {
                            "description": "The URL to use when the LOA link is clicked",
                            "format": "uri",
                            "name": "LOA URL",
                            "required": false,
                            "type": "string"
                        },
                        "resporg": {
                            "description": "The URL to use when the resporg link is clicked",
                            "format": "uri",
                            "name": "Resporg URL",
                            "required": false,
                            "type": "string"
                        },
                        "support_email": {
                            "description": "The support email address to display to the user",
                            "format": "email",
                            "name": "Support Email",
                            "required": false,
                            "type": "string"
                        },
                        "terms": {
                            "description": "The URL to use when the terms and conditions link is clicked",
                            "format": "uri",
                            "name": "Terms URL",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "required": false,
                    "type": "object"
                },
                "twoway_trunks_price": {
                    "description": "The price to show for twoway trunks, this is currently only for display purposes",
                    "name": "Twoway Trunk Price",
                    "required": false,
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        }
    },
    "info": {
        "description": "The Crossbar APIs",
        "license": {
            "name": "Mozilla Public License 1.1"
        },
        "title": "Crossbar",
        "version": "2.0"
    },
    "paths": {
        "/v2/about": {
            "get": {}
        },
        "/v2/accounts": {
            "put": {}
        },
        "/v2/accounts/AccountId": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {
                "parameters": {
                    "in": "body",
                    "name": "accounts",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/accounts"
                    }
                }
            },
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "accounts",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/accounts"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/access_lists": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/acls": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents/stats": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents/status": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents/status/{ID}": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents/{ID}/queue_status": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/agents/{ID}/status": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/alerts": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/alerts/{ID}": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/allotments": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/allotments/consumed": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/api_key": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/apps_link/authorize": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/apps_store": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/apps_store/blacklist": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/apps_store/{ID}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/apps_store/{ID}/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/apps_store/{ID}/{ID}/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/blacklists": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/blacklists/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/addresses": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/addresses/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/cards": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/cards/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/credits": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/customer": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/transactions": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/braintree/transactions/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/bulk": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/call_inspector": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/call_inspector/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/callflows": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/callflows/{MEDIA_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/cccps": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/cccps/{ID}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/cdrs": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/cdrs/legs/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/cdrs/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/channels": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/channels/{ID}": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/channels/{UUID}": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/children": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/clicktocall": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/clicktocall/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/clicktocall/{ID}/connect": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/clicktocall/{ID}/history": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/comments": {
            "delete": {},
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/comments/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/conferences": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/conferences/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/conferences/{ID}/details": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/configs/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/connectivity": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/connectivity/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/contact_list": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/descendants": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/devices": {
            "get": {
                "description": "Summary listing of devices for the account",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of devices created for the account"
                    }
                }
            },
            "put": {
                "description": "Create a new device",
                "parameters": {
                    "in": "body",
                    "name": "devices",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/devices"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "The newly created device object"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/devices/status": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}": {
            "delete": {
                "description": "Remove the device from the account",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The removed device object"
                    }
                }
            },
            "get": {
                "description": "Get the device details",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The device object, in full"
                    }
                }
            },
            "post": {
                "description": "Edit the device object",
                "parameters": {
                    "in": "body",
                    "name": "devices",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/devices"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The edited device object, in full"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}/quickcall/{NUMBER}": {
            "get": {
                "description": "Execute quickcall to {NUMBER}",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The call initialization details"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/devices/{DEVICE_ID}/sync": {
            "post": {
                "description": "Reset the device by sending a check-sync SIP NOTIFY",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "202": {
                        "description": "Notice that the check-sync has been sent"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/dialplans": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/directories": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/directories/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxboxes": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxboxes/{BOX_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/inbox": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/inbox/{FAX_ID}": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/inbox/{FAX_ID}/attachment": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/incoming": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/incoming/{FAX_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/outbox": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/outbox/{FAX_ID}": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/outbox/{FAX_ID}/attachment": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/outgoing": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/outgoing/{FAXJOB_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/smtplog": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/faxes/smtplog/{ATTEMPT_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/freeswitch": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/global_provisioner_templates": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/global_provisioner_templates/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/global_provisioner_templates/{ID}/image": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/groups": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/groups/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/hotdesks": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ips": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ips/assigned": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ips/hosts": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ips/zones": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ips/{IP}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/killio/call": {
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ledgers": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ledgers/credit": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ledgers/debit": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ledgers/{LEDGER_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/ledgers/{LEDGER_ID}/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/limits": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/lists": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/lists/{LIST_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/lists/{LIST_ID}/entries": {
            "delete": {},
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/lists/{LIST}/entries/{ENTRY_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/lists/{LIST}/entries/{ENTRY_ID}/photo": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/lists/{LIST}/entries/{ENTRY_ID}/vcard": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/local_provisioner_templates": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/local_provisioner_templates/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/local_provisioner_templates/{ID}/image": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media/languages": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media/languages/{LANGUAGE}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media/prompts": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media/prompts/{PROMPT_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media/{MEDIA_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/media/{MEDIA_ID}/raw": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/menus": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/menus/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/metaflows": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/move": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/notifications": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/notifications/customer_update/message": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/notifications/smtplog": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/notifications/smtplog/{_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/notifications/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/notifications/{ID}/preview": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/onboard": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/parents": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/check": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/classifiers": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/classifiers/{PHONENUMBER}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/collection": {
            "delete": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/collection/activate": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/fix": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/locality": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/prefix": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{ID}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{ID}/docs": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{ID}/docs/{ID}": {
            "delete": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{ID}/identify": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{ID}/port": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{ID}/reserve": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}/activate": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}/identify": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/phone_numbers/{PHONENUMBER}/reserve": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/pivot/debug": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/pivot/debug/{UUID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/canceled": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/completed": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/pending": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/rejected": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/scheduled": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/submitted": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/attachments": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/attachments/{ATTACHMENT_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/canceled": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/completed": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/loa": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/pending": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/rejected": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/scheduled": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{PORTREQUEST_ID}/submitted": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/attachments": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/attachments/{ATTACHMENT_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/canceled": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/completed": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/loa": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/pending": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/rejected": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/scheduled": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/port_requests/{_ID}/submitted": {
            "patch": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/presence": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/presence/{EXTENSION}": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/queues": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/queues/eavesdrop": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/queues/stats": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/queues/{Q_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/queues/{Q_ID}/eavesdrop": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/queues/{Q_ID}/roster": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/rate_limits": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/recordings": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/recordings/{RECORDING_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/recordings/{RECORDING_ID}/attachment": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/registrations": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/registrations/count": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/registrations/{ID}": {
            "delete": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/reseller": {
            "delete": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resource_templates": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resource_templates/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resources": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resources/collection": {
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resources/jobs": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resources/jobs/{JOB_ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/resources/{RESOURCE_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/search": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/search/multi": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans/available/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans/current": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans/override": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans/reconciliation": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans/synchronization": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/service_plans/{ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/services": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/services/audit": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/services/plan": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/siblings": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/signup": {
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/signup/{ID}": {
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/skels": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/skels/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/sms": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/sms/{_ID}": {
            "delete": {},
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/templates": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/templates/{ID}": {
            "delete": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/temporal_rules": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/temporal_rules/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/temporal_rules_sets": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/temporal_rules_sets/{ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/token_restrictions": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/transactions": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/transactions/current_balance": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/transactions/debit": {
            "delete": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/transactions/monthly_recurring": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/transactions/subscriptions": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/tree": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/user_auth/{AUTH_TOKEN}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/users": {
            "get": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/users/{USER_ID}": {
            "delete": {},
            "get": {},
            "patch": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/users/{USER_ID}/devices": {
            "get": {
                "description": "Summary listing of devices for the user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of devices created for the user"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/users/{USER_ID}/photo": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/users/{USER_ID}/quickcall/{NUMBER}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/users/{USER_ID}/vcard": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/vmboxes": {
            "get": {
                "description": "Summary listing of voicemail boxes for the account",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of voicemail boxes for the account"
                    }
                }
            },
            "put": {
                "description": "Create a new voicemail box",
                "parameters": {
                    "in": "body",
                    "name": "vmboxes",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/vmboxes"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "The newly created voicemail box"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}": {
            "delete": {
                "description": "Deletes the voicemail box from the account"
            },
            "get": {
                "description": "Details of the voicemail box",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A voicemail box document"
                    }
                }
            },
            "patch": {
                "description": "Patch an existing voicemail box",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The updated voicemail box"
                    }
                }
            },
            "post": {
                "description": "Edit an existing voicemail box",
                "parameters": {
                    "in": "body",
                    "name": "vmboxes",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/vmboxes"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The updated voicemail box"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages": {
            "delete": {
                "description": "Remove all or a list of messages from a voicemail box",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Listing of messages, if any are left"
                    }
                }
            },
            "get": {
                "description": "Listing of messages contained in the voicemail box",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            },
            "post": {
                "description": "Change a list message",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages/{MSG_ID}": {
            "delete": {
                "description": "Remove the message from the voicemail box",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The removed message object"
                    }
                }
            },
            "get": {
                "description": "Get a specific message object",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The message object"
                    }
                }
            },
            "post": {
                "description": "Change a message",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of messages"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/vmboxes/{VMBOX_ID}/messages/{MSG_ID}/raw": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/webhooks": {
            "get": {
                "description": "Summary listing of webhooks for the account",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A listing of webhooks created for the account"
                    }
                }
            },
            "patch": {
                "description": "Re-enable the collection of webhooks",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Result of reenabling hooks"
                    }
                }
            },
            "put": {
                "description": "Create a new webhook",
                "parameters": {
                    "in": "body",
                    "name": "webhooks",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/webhooks"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "The newly created webhook object"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/webhooks/attempts": {
            "get": {
                "description": "List the attempts Kazoo has made to the external servers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of objects representing webhook attempts made"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/webhooks/{WEBHOOK_ID}": {
            "delete": {
                "description": "Remove the webhook from the account",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The removed webhook object"
                    }
                }
            },
            "get": {
                "description": "Get the webhook details",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The webhook object, in full"
                    }
                }
            },
            "patch": {
                "description": "Patch the webhook object",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The patched webhook object, in full"
                    }
                }
            },
            "post": {
                "description": "Edit the webhook object",
                "parameters": {
                    "in": "body",
                    "name": "webhooks",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/webhooks"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The edited webhook object, in full"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/webhooks/{WEBHOOK_ID}/attempts": {
            "get": {
                "description": "List the attempts Kazoo has made to the external servers for this webhook",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of objects representing webhook attempts made for this webhook"
                    }
                }
            }
        },
        "/v2/accounts/{ACCOUNT_ID}/websockets": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/websockets/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel": {
            "delete": {},
            "get": {},
            "post": {},
            "put": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/domains": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/icon": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/logo": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/welcome": {
            "get": {},
            "post": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/{ID}": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/{ID}/icon": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/{ID}/logo": {
            "get": {}
        },
        "/v2/accounts/{ACCOUNT_ID}/whitelabel/{ID}/welcome": {
            "get": {}
        },
        "/v2/api_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "api_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/api_auth"
                    }
                }
            }
        },
        "/v2/google_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "google_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/google_auth"
                    }
                }
            }
        },
        "/v2/ip_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "ip_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ip_auth"
                    }
                }
            }
        },
        "/v2/rates": {
            "get": {
                "description": "Listing of available rate docs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A list of available rate docs"
                    }
                }
            },
            "post": {},
            "put": {}
        },
        "/v2/rates/number/{PHONENUMBER}": {
            "get": {}
        },
        "/v2/rates/{RATE_ID}": {
            "delete": {
                "description": "Delete the rate doc",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The now-deleted rate doc"
                    }
                }
            },
            "get": {
                "description": "Get the rate doc",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The rate doc"
                    }
                }
            },
            "patch": {},
            "post": {}
        },
        "/v2/schemas": {
            "get": {
                "description": "Listing of installed schemas available",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A list of schemas installed"
                    }
                }
            }
        },
        "/v2/schemas/{SCHEMADOC}": {
            "get": {
                "description": "Get the JSON schema definition",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The schema definition"
                    }
                }
            }
        },
        "/v2/schemas/{SCHEMADOC}/validation": {
            "put": {
                "description": "Perform a test validation",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The results of the validation"
                    }
                }
            }
        },
        "/v2/shared_auth": {
            "delete": {},
            "get": {},
            "put": {}
        },
        "/v2/sup/{MODULE}": {
            "get": {}
        },
        "/v2/sup/{MODULE}/{FUNCTION}": {
            "get": {}
        },
        "/v2/sup/{MODULE}/{FUNCTION}/{ARGS}": {
            "get": {}
        },
        "/v2/system_configs": {
            "get": {},
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "system_configs",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/system_configs"
                    }
                }
            }
        },
        "/v2/system_configs/{ID}": {
            "delete": {},
            "get": {},
            "post": {
                "parameters": {
                    "in": "body",
                    "name": "system_configs",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/system_configs"
                    }
                }
            }
        },
        "/v2/system_configs/{ID}/{NODE}": {
            "delete": {},
            "get": {},
            "post": {
                "parameters": {
                    "in": "body",
                    "name": "system_configs",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/system_configs"
                    }
                }
            }
        },
        "/v2/system_configs/{_ID}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/system_configs/{_ID}/{NODE}": {
            "delete": {},
            "get": {},
            "post": {}
        },
        "/v2/ubiquiti_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "ubiquiti_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ubiquiti_auth"
                    }
                }
            }
        },
        "/v2/user_auth": {
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "user_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/user_auth"
                    }
                }
            }
        },
        "/v2/user_auth/recovery": {
            "post": {},
            "put": {
                "parameters": {
                    "in": "body",
                    "name": "user_auth",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/user_auth"
                    }
                }
            }
        },
        "/v2/user_auth/{AUTHTOKEN}": {
            "get": {}
        },
        "/v2/webhooks": {
            "get": {
                "description": "Listing of installed webhooks available for subscription",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A list of objects representing the available webhooks"
                    }
                }
            }
        }
    },
    "swagger": "2.0"
}
