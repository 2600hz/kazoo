{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "_id": "queues",
    "description": "Call Queues - FIFO call queues for serializing callers connecting to agents",
    "properties": {
        "agent_ring_timeout": {
            "default": 15,
            "description": "In seconds, how long to ring an agent before progressing to the next agent available",
            "minimum": 1,
            "type": "integer"
        },
        "agent_wrapup_time": {
            "default": 0,
            "description": "Pre-defined wait period applied after an agent handles a customer call",
            "minimum": 0,
            "type": "integer"
        },
        "announce": {
            "description": "Media ID (or appropriate media URI) of media to play when caller is about to be connected.",
            "type": "string"
        },
        "announcements": {
            "description": "Configuration for periodic announcements to callers waiting in the queue",
            "properties": {
                "interval": {
                    "default": 30,
                    "description": "Time between announcements",
                    "minimum": 15,
                    "type": "integer"
                },
                "media": {
                    "description": "Custom prompts to be played for the announcements",
                    "properties": {
                        "in_the_queue": {
                            "description": "Played after the numeric position",
                            "type": "string"
                        },
                        "increase_in_call_volume": {
                            "description": "Played if the estimated wait time has increased since the previous wait time announcement",
                            "type": "string"
                        },
                        "the_estimated_wait_time_is": {
                            "description": "Played before the estimated wait time media",
                            "type": "string"
                        },
                        "you_are_at_position": {
                            "description": "Played before the numeric position",
                            "type": "string"
                        }
                    },
                    "required": [
                        "in_the_queue",
                        "increase_in_call_volume",
                        "the_estimated_wait_time_is",
                        "you_are_at_position"
                    ],
                    "type": "object"
                },
                "position_announcements_enabled": {
                    "description": "Whether announcements of the caller's position in the queue should be played",
                    "type": "boolean"
                },
                "wait_time_announcements_enabled": {
                    "description": "Whether announcements of the estimated wait time in the queue should be played",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "caller_exit_key": {
            "default": "#",
            "description": "Key caller can press while on hold to exit the queue and continue in the callflow",
            "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "*",
                "0",
                "#"
            ],
            "type": "string"
        },
        "cdr_url": {
            "description": "An optional HTTP URL to POST the CDR",
            "format": "uri",
            "type": "string"
        },
        "connection_timeout": {
            "default": 3600,
            "description": "In seconds, how long to try to connect the caller before progressing past the queue callflow action",
            "minimum": 0,
            "type": "integer"
        },
        "enter_when_empty": {
            "default": true,
            "description": "Allows a caller to enter a queue and wait when no agents are available",
            "type": "boolean"
        },
        "max_priority": {
            "description": "Maximum possible priority level queue will support. Can not be redefined for existing queue.",
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
        },
        "max_queue_size": {
            "default": 0,
            "description": "How many callers are allowed to wait on hold in the queue (0 for no limit)",
            "type": "integer"
        },
        "moh": {
            "description": "Media ID (or appropriate media URI) of media to play while caller is on hold.",
            "type": "string"
        },
        "name": {
            "description": "A friendly name for the queue",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
        },
        "record_caller": {
            "default": false,
            "description": "When enabled, a caller's audio will be recorded",
            "type": "boolean"
        },
        "recording_url": {
            "description": "An optional HTTP URL to PUT the call recording after the call ends (and should respond to GET for retrieving the audio data)",
            "format": "uri",
            "type": "string"
        },
        "ring_simultaneously": {
            "default": 1,
            "description": "The number of agents to try in parallel when connecting a caller",
            "minimum": 1,
            "type": "integer"
        },
        "strategy": {
            "default": "round_robin",
            "description": "The queue strategy for connecting agents to callers",
            "enum": [
                "round_robin",
                "most_idle",
                "skills_based_round_robin",
                "ring_all"
            ],
            "type": "string"
        }
    },
    "required": [
        "name"
    ],
    "type": "object"
}
