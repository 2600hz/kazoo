{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "_id": "webhooks",
    "description": "Web Hooks are subscriptions to allowed events that, when the event occurs, the event data is sent to the uri set in the Web Hook document.",
    "properties": {
        "custom_data": {
            "additionalProperties": {
                "type": "string"
            },
            "description": "These properties will be added to the event and will overwrite existing values.",
            "type": "object"
        },
        "enabled": {
            "default": true,
            "description": "Is the webhook enabled and running",
            "type": "boolean"
        },
        "hook": {
            "description": "The trigger event for a request being made to 'callback_uri'.",
            "type": "string"
        },
        "http_verb": {
            "default": "post",
            "description": "What HTTP method to use when contacting the server",
            "enum": [
                "get",
                "post"
            ],
            "type": "string"
        },
        "include_internal_legs": {
            "default": true,
            "description": "Whether to filter out call legs that are internal to the system (loopback)",
            "type": "boolean"
        },
        "include_subaccounts": {
            "description": "Should the webhook be fired for subaccount events.",
            "type": "boolean"
        },
        "name": {
            "description": "A friendly name for the webhook",
            "type": "string"
        },
        "retries": {
            "default": 2,
            "description": "Retry the request this many times (if it fails)",
            "maximum": 4,
            "minimum": 0,
            "type": "integer"
        },
        "uri": {
            "description": "The 3rd party URI to call out to an event",
            "format": "uri",
            "type": "string"
        }
    },
    "required": [
        "hook",
        "name",
        "uri"
    ],
    "type": "object"
}
