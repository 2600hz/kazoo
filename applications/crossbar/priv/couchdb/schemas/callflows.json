{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "_id": "callflows",
    "description": "Call flows describe steps to take in order to process a phone call. They are trees of information related to a phone call such as \"answer, play file, record file\" etc. that are logically grouped together and ordered.",
    "properties": {
        "featurecode": {
            "description": "When the callflow is used as a featurecode this object tracks the intended match of the pattern and name of the feature",
            "properties": {
                "name": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "number": {
                    "maxLength": 30,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flags": {
            "description": "Flags set by external applications",
            "items": {
                "type": "string"
            },
            "support_level": "supported",
            "type": "array"
        },
        "flow": {
            "$ref": "callflows.action",
            "description": "A callflow node defines a module to execute, data to provide to that module, and zero or more children to branch to"
        },
        "metaflow": {
            "$ref": "metaflows",
            "description": "Actions applied to a call outside of the normal callflow, initiated by the caller(s)"
        },
        "numbers": {
            "default": [],
            "description": "A list of static numbers that the callflow should execute for",
            "items": {
                "maxLength": 36,
                "minLength": 1,
                "type": "string"
            },
            "type": "array",
            "uniqueItems": true
        },
        "patterns": {
            "default": [],
            "description": "A list of regular expressions that the callflow should execute for, with optional capture groups",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "type": "array"
        }
    },
    "type": "object"
}
