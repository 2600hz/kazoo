#!/usr/bin/env escript
%% -*- erlang -*-
%%! -pa ./ebin 

-module(changes_cb).

-export([changes_cb/1]).

changes_cb({done, LastSeq}) ->
    io:format("stopped, last seq is ~p~n", [LastSeq]);
changes_cb({change, Row}) ->
    io:format("change row ~p ~n", [Row]);
changes_cb({error, LastSeq, Error}) ->
    io:format("error ? ~p ~n, last seq: ~p~n", [Error, LastSeq]),
    self() ! shoot.

main(_) ->
    couchbeam:start(),
    Server = couchbeam:server_connection(),
    {ok, Db} = couchbeam:open_or_create_db(Server, "testdb"),

    Cb = fun(V) -> changes_cb(V) end, 
    {ok, ChangesPid} = couchbeam_changes:stream(Db, Cb, [continuous, heartbeat]),
    io:format("ChangesPid ~p~n", [ChangesPid]),
    receive shoot -> ok end.
    
    

