#+include: "theme2016.org"
#+DATE: \today
#+EMAIL: james@2600hz.com

* Pivot
#+BEGIN_EXPORT latex
{
\usebackgroundtemplate{\includegraphics[width=\paperwidth,height=\paperheight]{./images/first_slide.png}}%
\begin{frame}
\begin{flushright}
\alert{PIVOT - REAL-TIME CALL CONTROL} \par
\par
Presented by: James Aimonetti
\end{flushright}
\end{frame}
}
#+END_EXPORT
** About Myself
*** About Myself
    :PROPERTIES:
    :BEAMER_col: 0.5
    :BEAMER_env: column
    :END:
- James Aimonetti
  - ~Eye-Moe-Net-Tea~
  - Commit to memory Patrick!
- Kazoo Architect and Community at 2600Hz
- mc_ on freenode
*** Presenter
    :PROPERTIES:
    :BEAMER_col: 0.45
    :BEAMER_env: column
    :END:
#+BEGIN_CENTER
[[./images/presenter_h280.jpg]]
#+END_CENTER
** High-level
:PROPERTIES:
:BEAMER_env: block
:END:
- Point a callflow at your server
- Process the call against your business logic
- Return Kazoo callflow JSON
** Flow
:PROPERTIES:
:BEAMER_env: block
:END:
[[./images/pivot_flow.png]]
** Setting up Kazoo
:PROPERTIES:
:BEAMER_env: block
:END:
- create a callflow
- set the pivot action as the child
- set the URL to your webserver and script
#+LaTeX: \scriptsize
#+BEGIN_SRC shell
curl -X PUT \
-H "x-auth-token: {AUTH_TOKEN}" \
-H "content-type: application/json" \
-d '{"data":{
  "numbers":["12345"]
  ,"flow":{
    "module":"pivot"
    ,"data":{
      "voice_url":"http://your.server/pivot.php"
    }
  }
 }
}' \
http://crossbar:8000/v2/accounts/{ACCOUNT_ID}/callflows
#+END_SRC

Pivot will attempt to reach your server for calls to that callflow.
** The Request
:PROPERTIES:
:BEAMER_env: block
:END:
- GET - query string parameters
- POST - x-www-form-urlencoded request body
** Common Request Fields
:PROPERTIES:
:BEAMER_env: block
:END:
| Name             | Description       |
|------------------+-------------------|
| Call-ID          | SIP Call-ID field |
| Request          | SIP Request user  |
| To               | SIP To user       |
| From             | SIP From user     |
| Account-ID       | Kazoo Account ID  |
| Caller-ID-Name   | CID Name          |
| Caller-ID-Number | CID Number        |
** Other Request Fields
:PROPERTIES:
:BEAMER_env: block
:END:
| Name     | Description                           |
|----------+---------------------------------------|
| Digits   | DTMFs (or collections) received       |
| User-ID  | Owner ID(s) of the calling device     |
| Language | Configured by the device/user/account |

** Create a handler
:PROPERTIES:
:BEAMER_env: block
:END:
- Create the script that Pivot will call
- Process and build the Kazoo callflow JSON
- Set *Content-Type* to *application/json*
- Return the JSON as the body of the HTTP response
** Let's Build something!
#+BEGIN_CENTER
Example Time!
#+END_CENTER
** Say something
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
- Uses [[https://freeswitch.org/confluence/display/FREESWITCH/mod_flite][FreeSWITCH =mod_flite=]] by default
- Supports [[http://www.ispeech.org/text.to.speech][iSpeech]] and [[https://voicefabric.ru/][VoiceFabric]] as alternatives
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header("content-type:application/json"); ?>
{"module":"tts"
 ,"data":{"text":"Hello caller"}
}
\end{lstlisting}
#+END_EXPORT
** Say Hi to the caller
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header("content-type:application/json");

$caller_id_name = $_REQUEST['Caller-ID-Name'];

if ( ! empty($caller_id_name)
     && is_string($caller_id_name)
) {
    $parts = explode(" ", $caller_id_name);
    $name = $parts[0];
} else {
    $caller_id_number = $_REQUEST['Caller-ID-Number'];
    $user = db_user_lookup($caller_id_number);
    $name = user_first_name($user);
}
?>
{"module":"tts"
 ,"data":{"text":"Hi <?= $name ?>"}
}
\end{lstlisting}
#+END_EXPORT
** Play an MP3 to the caller
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header("content-type:application/json"); ?>
{"module":"play"
 ,"data":{"id":"http://your.server.com/path/to/file.mp3"}
}
\end{lstlisting}
#+END_EXPORT
** Bridging the caller to a user
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
Bridge to:
- [[https://github.com/2600hz/kazoo/blob/master/applications/crossbar/priv/couchdb/schemas/callflows.device.json][Device]]s (SIP, CallFwd, WebRTC)
- [[https://github.com/2600hz/kazoo/blob/master/applications/crossbar/priv/couchdb/schemas/callflows.user.json][Users]]
- [[https://github.com/2600hz/kazoo/blob/master/applications/crossbar/priv/couchdb/schemas/callflows.ring_group.json][Ring Groups]]
- [[https://github.com/2600hz/kazoo/blob/master/applications/crossbar/priv/couchdb/schemas/callflows.conference.json][Conferences]] (Pre-defined or ad-hoc)
- and more!
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header("content-type:application/json"); ?>
{"module":"user"
 ,"data":{"id":"user_doc_id"}
}
\end{lstlisting}
#+END_EXPORT
** Bridging the caller to a carrier
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
- Toggle between local and global resources
- Statically define a number to dial out to
- See the [[https://github.com/2600hz/kazoo/blob/master/applications/crossbar/priv/couchdb/schemas/callflows.resources.json][schema]] for all the *data* options
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header("content-type:application/json"); ?>
{"module":"resource"
 ,"data":{
   "use_local_resources":"false"
 }
}
\end{lstlisting}
#+END_EXPORT
** Collecting DTMF
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
First, collect the DTMF
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header('content-type:application/json'); ?>

{"module":"tts"
 ,"data":{"text":"Please enter up to four digits."}
 ,"children":{
   "_":{
     "module":"collect_dtmf"
     ,"data":{"max_digits":4, "collection_name":"custom_name"}
     ,"children":{
       "_":{
           "module":"pivot"
           ,"data":{"voice_url":"http://you.com/collected.php"}
           ,"children":{}
       }
     }
   }
 }
}
\end{lstlisting}
#+END_EXPORT
** Collecting DTMF
:PROPERTIES:
:BEAMER_env: frame
:END:
A followup HTTP request will be sent to =http://pivot.your.company.com/collected.php=
- Request includes =Digits[custom_name]=1234=
- DTMF can either come as a basic string (if no custom name is used) or an array.
- Let's see how to process them.
** Collecting DTMF
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header('content-type:application/json');

$dtmf = $_REQUEST['Digits'];

if ( empty($dtmf) ) { ?>
{"module":"tts"
 ,"data":{"text":"We didn't get that"}
 ,"children":{}
}
<?php } else if ( is_string($dtmf) ) { ?>
{"module":"tts"
 ,"data":{"text":"You typed <?= $dtmf ?>"}
 ,"children":{}
}
<?php } else { ?>
{"module":"tts"
 ,"data":{"text":"You typed <?= $dtmf['custom_name'] ?>"}
 ,"children":{}
}
<?php } ?>
\end{lstlisting}
#+END_EXPORT
** Sending Presence Updates
:PROPERTIES:
:BEAMER_env: frame
:BEAMER_opt: fragile
:END:
Send custom presence updates
- Some IoT devices/appliances can process SIP NOTIFY
- =presence_id= can be *name* or *name@realm*
- =status= can be *idle*, *ringing*, or *busy*
#+BEGIN_EXPORT latex
\begin{lstlisting}[language=php]
<?php header("content-type:application/json"); ?>
{"module":"manual_presence"
 ,"data":{
   "presence_id":"foobar"
   ,"status":"ringing"
 }
}
\end{lstlisting}
#+END_EXPORT
** Callflow actions
:PROPERTIES:
:BEAMER_env: frame
:END:
*** Bridging
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: 0.45
:END:
- Device
- User
- Group
- Resource
- Conference
- Voicemail Box
- Fax Box
*** Caller ID
:PROPERTIES:
:BEAMER_col: 0.45
:BEAMER_env: column
:END:
- Statically set Caller ID
- Dynamically set Caller ID
- Prepend Caller ID
- Routing via Whitelist or Regex of Caller IDs
** Callflow actions (cont)
:PROPERTIES:
:BEAMER_env: frame
:END:
*** Features
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: 0.45
:END:
- Eavesdrop
- Group Pickup
- Intercept
- Page Groups
- Hotdesk
*** Miscellaneous
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: 0.45
:END:
- Toggle call forwarding
- Toggle Do Not Disturb
- Directory services
- DISA
- Detect incoming fax
- Menus
- Custom Webhook
** Brainstorm
:PROPERTIES:
:BEAMER_env: frame
:END:
*** Possible Integrations
:PROPERTIES:
:BEAMER_env: block
:END:
- Calendars (Office365, Google, etc)
- Put received media (vm, fax) into services (storage, chat)
- Ad-driven, free calling?
- Digital assistants
- IVR Analytics (track stats as callers progress)
- CRM/Salesforce access
- Combine with metaflows and webhooks: call queues
- *Your Ideas?*
** What's Next?
:PROPERTIES:
:BEAMER_env: frame
:END:
*** In Progress
- Building automated doc generation
- Continuing to add callflow actions
*** How can you help?
- Build, build, build!
- Blog, blog, blog!
- Contribute to the docs effort
  - Take ref docs and create/update the *real* docs
* Thank You
#+BEGIN_EXPORT latex
{
\usebackgroundtemplate{\includegraphics[width=\paperwidth,height=\paperheight]{./images/last_slide.png}}%
\begin{frame}
\begin{center}
\alert{THANK YOU!}
\end{center}
\end{frame}
}
#+END_EXPORT
