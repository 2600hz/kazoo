#+OPTIONS: ':nil *:t -:t ::t <:t H:2 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:nil d:(not "LOGBOOK") date:nil e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:f title:t toc:nil todo:t |:t
#+TITLE: Kazoo Basic Training - CouchDB
#+DATE: <2016-06-06 Mon>
#+AUTHOR: James Aimonetti
#+EMAIL: james@2600hz.com
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.50.3 (Org mode 8.3.4)
#+STARTUP: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+BEAMER_FRAME_LEVEL: 2
#+BEAMER_THEME: Madrid
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)

* CouchDB

** Kazoo Basic Training

#+BEGIN_CENTER
CouchDB
#+END_CENTER

** The Kazoo Stack - Cluster

#+BEGIN_CENTER
[[file:./images/kazoo_stack.png]]
#+END_CENTER

** The Kazoo Stack - FreeSWITCH

#+BEGIN_CENTER
[[file:./images/kazoo_stack_couchdb.png]]
#+END_CENTER

** Why CouchDB                                                      :B_frame:
   :PROPERTIES:
   :BEAMER_opt: allowframebreaks,label=
   :BEAMER_env: frame
   :END:

*** Two Architectural Lessons Learned
 - Modeling Schema is Difficult
   - Modular, Rapid Development System
 - Master / Slave Doesnâ€™t Scale

*** Two Enhancements Desired
 - Find a database that works well over a WAN
 - Gain additional uptime guarantees

*** Multi-Master database
 - Any node can answer any request

*** Supports Zones
 - Requires a 'zone' attribute when adding a node
 - Requires a [cluster] placement attribute
 - Provides geo-redundancy

*** No Single Point of Failure
 - Properly tuned quorum settings ensure this

*** Eventual Consistency
 - Data is automatically replicated, eventually
 - Link latency typically the limit

*** Coherence
 - Written in Erlang

*** Backup Without Downtime
 - as simple as cp/rsync

*** More Servers Creates More Capacity
 - Pre-allocate based on expected growth

*** Simple, Simple, Simple
 - OPS will love it

** How Does It Work                                                 :B_frame:
   :PROPERTIES:
   :BEAMER_opt: allowframebreaks,label=
   :BEAMER_env: frame
   :END:

*** Nodes                                                   :B_ignoreheading:
    :PROPERTIES:
    :BEAMER_env: ignoreheading
    :END:
#+BEGIN_CENTER
[[file:./images/couchdb_nodes.png]]
#+END_CENTER

*** The Ring                                                :B_ignoreheading:
    :PROPERTIES:
    :BEAMER_env: ignoreheading
    :END:
#+BEGIN_CENTER
[[file:./images/couchdb_ring.png]]
#+END_CENTER

** Installing CouchDB                                               :B_frame:
   :PROPERTIES:
   :BEAMER_opt: allowframebreaks,label=
   :BEAMER_env: frame
   :END:

*** Debian

Taken from [[https://cwiki.apache.org/confluence/display/COUCHDB/Debian][CouchDB's installation instructions]]:
1. Setup Erlang Solutions' Erlang package:
   #+BEGIN_EXAMPLE
   $> apt-get install -y lsb-release
   $> echo "deb http://binaries.erlang-solutions.com/debian `lsb_release -cs` contrib" \
   | sudo tee /etc/apt/sources.list.d/erlang-solutions.list
   $> wget -O - http://binaries.erlang-solutions.com/debian/erlang_solutions.asc \
   | sudo apt-key add -
   #+END_EXAMPLE
2. Install dependencies:
   #+BEGIN_EXAMPLE
   $> sudo apt-get update -y
   $> sudo apt-get install -y libmozjs185 libmozjs185-dev erlang-nox erlang-dev \
   build-essential libnspr4 libnspr4-0d libnspr4-dev libcurl4-openssl-dev curl libicu-dev \
   pkg-config git haproxy nodejs
   #+END_EXAMPLE

*** CentOS

The installation instructions are missing at the moment. Yum commands
with similar packages as in Debian's installtion instructions should
suffice.

*** General

See the [[https://couchdb.apache.org/developer-preview/2.0/][Developer preview]]:

1. Setup CouchDB
   #+BEGIN_EXAMPLE
   $> git clone https://git-wip-us.apache.org/repos/asf/couchdb.git
   $> npm install -g grunt-cli
   $> cd couchdb
   $> git checkout developer-preview-2.0
   $> ./configure
   $> make
   #+END_EXAMPLE
2. Start CouchDB
   #+BEGIN_EXAMPLE
   $> dev/run --with-admin-party-please --with-haproxy -n 3
   $> /usr/sbin/haproxy -D -f rel/haproxy.cfg
   #+END_EXAMPLE


** Thank You

#+INCLUDE: "./frames/footer.org"
